--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

obf_cached_str[4191] = LUAOBFUSACTOR_DECRYPT_STR_0("\205\114\43\92\174\17\166\29", "\118\142\19\71\48\204\112\197");
obf_cached_str[4190] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\30\89\79\40\250\194", "\182\191\123\63\46\93\150");
obf_cached_str[4189] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\10\75\49\197\108\18\83", "\229\63\98\42\69");
obf_cached_str[4186] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\54\49\79\39\216\63\250\13\41\72\30\220\57\210\59\35\72\11\222\49", "\84\159\94\80\59\106\185");
obf_cached_str[4184] = LUAOBFUSACTOR_DECRYPT_STR_0("\113\199\93", "\190\62\161\59\115");
obf_cached_str[4183] = LUAOBFUSACTOR_DECRYPT_STR_0("\109\25\36\82\51\161\76", "\196\40\119\69\48\95");
obf_cached_str[4181] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\170\129\18\61\189\14\203\175\19\46\160\115\184\156\2\111", "\212\83\235\236\123\79");
obf_cached_str[4170] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\131\153\108", "\71\161\163\196");
obf_cached_str[4158] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\13\225\88", "\23\72\104\128\53\65");
obf_cached_str[4157] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\82\245", "\36\121\62\153\156\24\191");
obf_cached_str[4148] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\131\22\97\240\122\88\186\215\146\4\97\216\118\126\186\247\152\22\114\216", "\223\132\235\119\21\189\27\51");
obf_cached_str[4146] = LUAOBFUSACTOR_DECRYPT_STR_0("\127\139\5", "\196\34\177\37\65\102\136\148");
obf_cached_str[4144] = LUAOBFUSACTOR_DECRYPT_STR_0("\191\146\197\234\150\186\245\163\167\187\201\247\196\128\216\250\196\136", "\131\228\211\168");
obf_cached_str[4141] = LUAOBFUSACTOR_DECRYPT_STR_0("\131\227\17", "\229\194\143\125\20");
obf_cached_str[4140] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\169\71", "\169\134\147\103");
obf_cached_str[4138] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\203\242\27\220\227\167\43\197\254\218\88\238", "\120\181\135\135");
obf_cached_str[4124] = LUAOBFUSACTOR_DECRYPT_STR_0("\207\84\70\79\220\37\201\53\104\78\207\56\180\70\91\95\142\3\242\115", "\76\148\21\43\38\174");
obf_cached_str[4121] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\82\160\121\225\88\76\225\80\165\113\231\17\66\177\106\237\85\253\80\115\173\118\169", "\17\193\19\205\16\147\49");
obf_cached_str[4114] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\21\228\231\231\213\192\245\46\252\224\222\209\198\221\24\246\224\203\211\206", "\171\144\125\133\147\170\180");
obf_cached_str[4110] = LUAOBFUSACTOR_DECRYPT_STR_0("\45\180\136\95\147\111\200\5\191\129\85\142\121\239\11\182\177\95\146\117\199\5", "\169\98\218\197\58\224\28");
obf_cached_str[4108] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\193\204\194\189\179\52\233\204\203\215\155\166\51\222\193\199\224\160\190\52\239\210\207\205\188\172", "\64\170\164\170\163\200\223");
obf_cached_str[4106] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\87\155\229\250\227\83\159\236\247\211\70\132\251\242\231\87", "\147\128\50\235\137");
obf_cached_str[4104] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\27\251\56", "\75\66\122\150\93\189\90");
obf_cached_str[4103] = LUAOBFUSACTOR_DECRYPT_STR_0("\232\11\197\31\163\200\25\221\53\163\233\15\205\39\163\200\30", "\198\187\106\188\82");
obf_cached_str[4101] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\163\3\50\244\170\17\16\233\167\17\0\248\181\17\54\236\133\13\50\245\131\19\54\239\178\22", "\83\129\198\101");
obf_cached_str[4099] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\59\92\255\54\242\63\88\246\59\194\42\67\225\62\246\59", "\95\145\94\44\147");
obf_cached_str[4097] = LUAOBFUSACTOR_DECRYPT_STR_0("\89\175\176\37", "\192\62\206\221\64");
obf_cached_str[4095] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\84\178\17\77\236\252", "\158\143\56\211\104\40");
obf_cached_str[4093] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\222\203\120", "\29\87\191\166");
obf_cached_str[4092] = LUAOBFUSACTOR_DECRYPT_STR_0("\204\91\186\110\104\35\202\216\90\178", "\184\159\47\219\28\28\70");
obf_cached_str[4090] = LUAOBFUSACTOR_DECRYPT_STR_0("\85\138\244\229", "\131\50\235\153\128");
obf_cached_str[4089] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\113\74\98\191\221\232\113", "\180\146\20\50\22\236");
obf_cached_str[4086] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\120\11\199", "\80\145\23\101\179\200\118\20");
obf_cached_str[4084] = LUAOBFUSACTOR_DECRYPT_STR_0("\163\190\34\254\221", "\94\224\209\78\145\175");
obf_cached_str[4076] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\131\0\132\51\2\63\150", "\99\77\226\115\225\99");
obf_cached_str[4070] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\249\252\242\49\222\32\245\235", "\174\65\150\142\153\66");
obf_cached_str[4068] = LUAOBFUSACTOR_DECRYPT_STR_0("\95\122\54\189", "\106\56\27\91\216\129");
obf_cached_str[4066] = LUAOBFUSACTOR_DECRYPT_STR_0("\81\80\48\207\78", "\172\37\34\81");
obf_cached_str[4065] = LUAOBFUSACTOR_DECRYPT_STR_0("\145\86\218\35\81", "\63\229\36\187\64\58\212");
obf_cached_str[4064] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\19\236\242\231\86\20\234\241", "\134\34\125\133\159");
obf_cached_str[4061] = LUAOBFUSACTOR_DECRYPT_STR_0("\31\118\62\181", "\45\120\23\83\208");
obf_cached_str[4058] = LUAOBFUSACTOR_DECRYPT_STR_0("\174\217\60\162\177", "\193\218\171\93");
obf_cached_str[4048] = LUAOBFUSACTOR_DECRYPT_STR_0("\234\185\136\86", "\51\141\216\229");
obf_cached_str[4047] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\226\165\116\139", "\134\113\144\196\23\224\121");
obf_cached_str[4042] = LUAOBFUSACTOR_DECRYPT_STR_0("\209\210\107\106", "\30\129\179\25");
obf_cached_str[4040] = LUAOBFUSACTOR_DECRYPT_STR_0("\36\202\1\127\5\202\14\120", "\19\103\171\109");
obf_cached_str[4039] = LUAOBFUSACTOR_DECRYPT_STR_0("\17\248\142\237\32\241\156", "\140\85\157\232");
obf_cached_str[4038] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\217\248\18\162\212\95\2\194\242\19", "\45\109\183\156\119\208\179");
obf_cached_str[4035] = LUAOBFUSACTOR_DECRYPT_STR_0("\201\24\87\143\171\162\210\36", "\79\138\121\59\227\201\195\177");
obf_cached_str[4034] = LUAOBFUSACTOR_DECRYPT_STR_0("\120\118\36", "\21\53\23\92\225");
obf_cached_str[4033] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\252\75", "\231\81\149\37\121\138\136\52");
obf_cached_str[4032] = LUAOBFUSACTOR_DECRYPT_STR_0("\148\5\230\79\26\34\164", "\78\208\96\128\46\111");
obf_cached_str[4031] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\173\85\137\111\212\176\90\136", "\79\135\217\32\237");
obf_cached_str[4029] = LUAOBFUSACTOR_DECRYPT_STR_0("\213\42\196\68\178\41\134\94", "\53\150\75\168\40\208\72\229");
obf_cached_str[4028] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\63\37\39\67\46\174", "\66\218\90\67\70\54");
obf_cached_str[4027] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\227\75\65\106\248\80\5\2\242\95\65", "\37\74\151\62");
obf_cached_str[4007] = LUAOBFUSACTOR_DECRYPT_STR_0("\191\199\48\23\152\72\134\209\40\1\186\78\134\214", "\39\232\162\92\115\219");
obf_cached_str[3998] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\17\45\56\71\246\1\27", "\116\127\116\76\92\20\130");
obf_cached_str[3996] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\50\167\255", "\139\63\83\213");
obf_cached_str[3994] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\61\106\168\193\61\107\185", "\205\145\92\25");
obf_cached_str[3992] = LUAOBFUSACTOR_DECRYPT_STR_0("\201\112\7\174", "\37\129\21\102\202");
obf_cached_str[3988] = LUAOBFUSACTOR_DECRYPT_STR_0("\60\212\121\21\168\193\176", "\215\108\184\24\108\205\179\195");
obf_cached_str[3986] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\94\200\221", "\184\89\63\165");
obf_cached_str[3983] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\51\67\32", "\222\72\82\55\72");
obf_cached_str[3976] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\19\53\118\187", "\33\39\124\89\25\201\32\207");
obf_cached_str[3967] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\70\42\217", "\172\99\39\94\177\65\223");
obf_cached_str[3965] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\96\210\242\168\68\210\229\176\126\212\242", "\151\198\23\183");
obf_cached_str[3963] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\126\203\70", "\38\229\31\166\35\216\156");
obf_cached_str[3961] = LUAOBFUSACTOR_DECRYPT_STR_0("\50\21\49\47", "\56\95\116\69\71\87");
obf_cached_str[3959] = LUAOBFUSACTOR_DECRYPT_STR_0("\123\241\84\93", "\233\22\144\32\53\134");
obf_cached_str[3952] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\114\186\121\33\224\183\60\120", "\214\95\29\200\18\82\144");
obf_cached_str[3950] = LUAOBFUSACTOR_DECRYPT_STR_0("\46\32\213\80", "\77\73\65\184\53\127");
obf_cached_str[3948] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\201\255\26\157\70\218\248", "\205\39\168\140\127");
obf_cached_str[3946] = LUAOBFUSACTOR_DECRYPT_STR_0("\61\182\5", "\29\112\223\97\22\193");
obf_cached_str[3944] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\32\3\152\244", "\55\213\82\98\235\135\99");
obf_cached_str[3937] = LUAOBFUSACTOR_DECRYPT_STR_0("\77\194\252\85\236\236\89\47\127", "\76\26\173\142\62\159\156\56");
obf_cached_str[3934] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\70\237\252", "\151\137\39\128\153\81");
obf_cached_str[3933] = LUAOBFUSACTOR_DECRYPT_STR_0("\165\214\48\33\10\90\133\220", "\59\230\183\92\77\104");
obf_cached_str[3932] = LUAOBFUSACTOR_DECRYPT_STR_0("\203\20\236\59\3\225\217", "\130\143\113\138\90\118\141\173");
obf_cached_str[3931] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\45\88\116\209\216\12\215\45\84\111\207\216\94", "\44\128\72\53\27\167\189");
obf_cached_str[3928] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\95\9\254\134\231\115\232", "\22\155\47\104\140\237\139");
obf_cached_str[3926] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\136\213\174\132", "\68\93\229\186\197\225\111\35");
obf_cached_str[3924] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\194\221\178", "\150\115\171\175\215");
obf_cached_str[3922] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\216\216\23\71\78\213\207\38\67\68\205\222\6\92", "\46\45\185\170\99");
obf_cached_str[3918] = LUAOBFUSACTOR_DECRYPT_STR_0("\59\140\198\64", "\37\92\237\171");
obf_cached_str[3917] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\247\38\10", "\51\78\150\75\111\86\175");
obf_cached_str[3915] = LUAOBFUSACTOR_DECRYPT_STR_0("\150\171\254\76\136\193\87\38", "\85\197\219\159\62\227\173\50");
obf_cached_str[3913] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\47\162\35\40", "\77\205\66\205\72");
obf_cached_str[3911] = LUAOBFUSACTOR_DECRYPT_STR_0("\240\202\153\191", "\218\182\163\235");
obf_cached_str[3909] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\39\15\162\71\37\17\179\107\43\20\162\90\35\15", "\214\46\70\125");
obf_cached_str[3905] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\232\88\190\14\80\198\226", "\49\165\137\52\210\108");
obf_cached_str[3904] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\244\181\51\168\12\21", "\96\97\145\211\82\221");
obf_cached_str[3903] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\48\120\143\208\61\57\167\222\61\117\133\151\27\118\141\216\42", "\225\183\88\25");
obf_cached_str[3901] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\18\250\224\92\36\150\140\29\253\224\71\33", "\224\233\123\148\133\43\69");
obf_cached_str[3900] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\56\36\113\96\78\162\80\228\25\62", "\51\143\86\80\24\34\34\205");
obf_cached_str[3899] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\126\67\10\166\126\76\13", "\102\196\31\47");
obf_cached_str[3898] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\131\166\176\16\50\245", "\129\150\230\192\209\101\94");
obf_cached_str[3897] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\0\59\230\108\215\83\1\44\228", "\149\63\110\79\143\76");
obf_cached_str[3895] = LUAOBFUSACTOR_DECRYPT_STR_0("\194\233\8\241\30\168\32\236\233", "\77\163\135\124\152\84\201");
obf_cached_str[3894] = LUAOBFUSACTOR_DECRYPT_STR_0("\86\135\54\8\213\163\118\141", "\194\21\230\90\100\183");
obf_cached_str[3893] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\212\18\237\54\53\27", "\111\39\177\116\140\67\89");
obf_cached_str[3892] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\14\246\59\78\222\161\212", "\192\185\96\130\82\110\148");
obf_cached_str[3890] = LUAOBFUSACTOR_DECRYPT_STR_0("\243\76\234\208\220\215\94", "\181\185\57\135\160");
obf_cached_str[3888] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\84\228\131\116\60\21\69", "\83\124\33\137\226\26");
obf_cached_str[3878] = LUAOBFUSACTOR_DECRYPT_STR_0("\114\55\252\55\166\101\255", "\37\34\91\157\78\195\23\140");
obf_cached_str[3876] = LUAOBFUSACTOR_DECRYPT_STR_0("\243\216\66\126", "\27\148\185\47");
obf_cached_str[3872] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\29\234\50\93\29\229\53", "\94\63\124\134");
obf_cached_str[3871] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\172\139\183\146\113\48", "\68\35\201\237\214\231\29");
obf_cached_str[3870] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\120\182\185\56\203\33\242\235\92\165\189\38", "\151\203\22\208\208\86\162\85");
obf_cached_str[3868] = LUAOBFUSACTOR_DECRYPT_STR_0("\141\129\195\222\221\252\173\139", "\157\206\224\175\178\191");
obf_cached_str[3867] = LUAOBFUSACTOR_DECRYPT_STR_0("\136\112\225\136\185\121\243", "\233\204\21\135");
obf_cached_str[3866] = LUAOBFUSACTOR_DECRYPT_STR_0("\160\190\241\51\58\193\149\248\55\62\143\179\243", "\95\225\208\150\95");
obf_cached_str[3864] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\156\83\21\118\246\131\89\3\102\250\153\91", "\18\148\236\54\112");
obf_cached_str[3863] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\10\222\140\47\223\197\0", "\190\166\107\178\224\77");
obf_cached_str[3862] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\180\89", "\33\37\213\33\23");
obf_cached_str[3861] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\25\133", "\146\37\112\235\30\105\104\133");
obf_cached_str[3860] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\197\238\211\19\36\167", "\211\122\160\136\178\102\72");
obf_cached_str[3859] = LUAOBFUSACTOR_DECRYPT_STR_0("\71\147\244\159\3\97\166\186\171\3\123", "\119\19\195\212\204");
obf_cached_str[3857] = LUAOBFUSACTOR_DECRYPT_STR_0("\94\226\141\30\211\253\122\227\125\255\177\5\224\253\125", "\151\18\141\226\117\133\152\25");
obf_cached_str[3856] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\175\58\168\112\29\247\16", "\123\202\206\86\196\18\124\148");
obf_cached_str[3855] = LUAOBFUSACTOR_DECRYPT_STR_0("\127\208\4\221\78\217\22", "\188\59\181\98");
obf_cached_str[3854] = LUAOBFUSACTOR_DECRYPT_STR_0("\43\41\84\246\3\101\73\250\72\17\109\181\20\101\123", "\149\104\69\61");
obf_cached_str[3852] = LUAOBFUSACTOR_DECRYPT_STR_0("\243\95\235\211\196\68\28\182", "\221\176\62\135\191\166\37\127");
obf_cached_str[3851] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\18\209", "\183\52\115\169\228\220\220");
obf_cached_str[3850] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\213\20", "\233\94\188\122\210\214");
obf_cached_str[3849] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\18\119\162\253\213\3", "\136\185\119\17\195");
obf_cached_str[3848] = LUAOBFUSACTOR_DECRYPT_STR_0("\9\85\113\192\247\160\6\32\58\20\78\223\246\181\13\34\42\92", "\69\94\52\29\171\132\208\99");
obf_cached_str[3846] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\22\87\241\162\200\84\63", "\55\84\119\59\157\192\169");
obf_cached_str[3845] = LUAOBFUSACTOR_DECRYPT_STR_0("\201\232\225\195\236\225\249", "\153\141\141\135\162");
obf_cached_str[3844] = LUAOBFUSACTOR_DECRYPT_STR_0("\65\40\225\171\88\103\115\44\233", "\23\22\73\141\192\43");
obf_cached_str[3822] = LUAOBFUSACTOR_DECRYPT_STR_0("\94\248\239\185\11\121\228\230", "\101\22\141\130\216");
obf_cached_str[3820] = LUAOBFUSACTOR_DECRYPT_STR_0("\228\93\31\79\57\195\65\22\124\56\195\92\34\79\37\216", "\87\172\40\114\46");
obf_cached_str[3816] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\251\251\125\231\55\173\231\246\75", "\69\219\142\149\46\130");
obf_cached_str[3814] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\0\25\175", "\39\78\97\116\202");
obf_cached_str[3813] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\73\216\73\199\87\202", "\48\162\37\185");
obf_cached_str[3811] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\237\203\180", "\200\109\140\166\209");
obf_cached_str[3810] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\72\82\164\206\72\93\163", "\200\172\41\62");
obf_cached_str[3809] = LUAOBFUSACTOR_DECRYPT_STR_0("\232\164\110", "\227\165\197\22\61");
obf_cached_str[3808] = LUAOBFUSACTOR_DECRYPT_STR_0("\97\218\142", "\173\44\179\224\190\96");
obf_cached_str[3807] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\215\182\218\174\222\164", "\187\219\178\208");
obf_cached_str[3806] = LUAOBFUSACTOR_DECRYPT_STR_0("\167\241\66\208\18\77\75\59\136\246\15\243\70\111\65\34\138\240\71", "\76\237\132\47\160\50\29\36");
obf_cached_str[3804] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\224\9\19\0\192\226\14", "\98\161\129\101\127");
obf_cached_str[3803] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\224\181\90\80\58\27", "\50\206\133\211\59\37\86\111");
obf_cached_str[3802] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\18\56\176\232\245\8\34\165\186", "\200\165\103\85\192");
obf_cached_str[3794] = LUAOBFUSACTOR_DECRYPT_STR_0("\231\203\52\219\193\209\48\222", "\186\175\190\89");
obf_cached_str[3792] = LUAOBFUSACTOR_DECRYPT_STR_0("\91\89\233\21\114\229\122\72\214\27\115\254\67\77\246\0", "\138\19\44\132\116\28");
obf_cached_str[3786] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\247\43\225\240\240\51\219\246\231", "\178\149\130\69");
obf_cached_str[3784] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\89\0\1", "\171\29\56\109\100\132");
obf_cached_str[3779] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\76\86\173\89\228\122\69\188\83\242", "\54\150\41\53\217");
obf_cached_str[3771] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\251\247\94", "\46\183\137\135");
obf_cached_str[3769] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\164\219\53", "\205\150\214\171\69\234");
obf_cached_str[3767] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\2\19\166", "\76\21\112\99\214\51");
obf_cached_str[3766] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\1\252\33\177\255\142\223\15\27\254\52\143\241\149\207", "\187\93\116\145\64\223\144\231");
obf_cached_str[3764] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\196\132\31\116\33\194", "\21\83\163\231\119");
obf_cached_str[3763] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\205\58\171", "\172\20\191\74\219\222\217");
obf_cached_str[3762] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\232\125\244\24\23\3\249\66\250\25\12\58\252\98\225", "\120\106\157\16\149\118");
obf_cached_str[3760] = LUAOBFUSACTOR_DECRYPT_STR_0("\91\190\223\71\2\249\93", "\139\60\217\188\47\99");
obf_cached_str[3759] = LUAOBFUSACTOR_DECRYPT_STR_0("\1\214\9\179", "\195\105\164\121");
obf_cached_str[3757] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\90\61\48\131\92\172", "\46\205\61\94\88\226");
obf_cached_str[3747] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\164\1\76\166\186\19", "\53\195\200\96");
obf_cached_str[3745] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\76\91\60", "\170\101\45\54\89");
obf_cached_str[3743] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\207\87\191\137\183\204\71\185\147\188\206\68\164\163\188", "\192\217\188\50\205");
obf_cached_str[3741] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\217\33\168", "\112\177\184\76\205\52\50\208");
obf_cached_str[3738] = LUAOBFUSACTOR_DECRYPT_STR_0("\136\216\190\50\51\170\218\185", "\81\203\185\210\94");
obf_cached_str[3737] = LUAOBFUSACTOR_DECRYPT_STR_0("\3\232\26\0\50\225\8", "\97\71\141\124");
obf_cached_str[3736] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\218\30\14\62\220\22\23\48\206\3\15", "\103\68\175\106\97\30\159\119");
obf_cached_str[3734] = LUAOBFUSACTOR_DECRYPT_STR_0("\173\9\253\79\137\14", "\36\198\96\158");
obf_cached_str[3733] = LUAOBFUSACTOR_DECRYPT_STR_0("\120\246\65\247\74\30\138\80", "\233\59\151\45\155\40\127");
obf_cached_str[3732] = LUAOBFUSACTOR_DECRYPT_STR_0("\155\66\238\230\29\198\235", "\159\223\39\136\135\104\170");
obf_cached_str[3731] = LUAOBFUSACTOR_DECRYPT_STR_0("\0\11\231\191\215\93\225\254\34\15\230\187\198", "\191\75\98\132\212\178\47\193");
obf_cached_str[3729] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\126\193\136\182\215\230\116", "\182\133\31\173\228\212");
obf_cached_str[3728] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\34\154", "\55\215\67\226\83");
obf_cached_str[3727] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\76\8", "\236\29\37\102");
obf_cached_str[3726] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\86\63\244\18\95\45", "\149\103\51\89");
obf_cached_str[3725] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\54\92\89\248\116\69\27\43\8\114\177\85\68\9\45\75\83", "\48\104\67\40\54\216\38");
obf_cached_str[3723] = LUAOBFUSACTOR_DECRYPT_STR_0("\91\48\129\17\161\115\248\115", "\155\24\81\237\125\195\18");
obf_cached_str[3722] = LUAOBFUSACTOR_DECRYPT_STR_0("\164\207\215\204\149\198\197", "\173\224\170\177");
obf_cached_str[3721] = LUAOBFUSACTOR_DECRYPT_STR_0("\6\146\231\217\197\21\146\224\222", "\229\71\231\147\182");
obf_cached_str[3719] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\19\230\57\83\208\51", "\71\211\122\149\77\39\164");
obf_cached_str[3718] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\39\75\22\39\203\60\202", "\95\161\70\39\122\69\170");
obf_cached_str[3717] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\61\101", "\42\163\92\29\158\90\186");
obf_cached_str[3716] = LUAOBFUSACTOR_DECRYPT_STR_0("\129\27\21", "\149\204\114\123\210\184");
obf_cached_str[3715] = LUAOBFUSACTOR_DECRYPT_STR_0("\218\62\245\163\235\55\231", "\194\158\91\147");
obf_cached_str[3714] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\189\251\205\126\206\191\238\214\126\217\161\252\214\63\243\171\234", "\94\157\200\143\162");
obf_cached_str[3712] = LUAOBFUSACTOR_DECRYPT_STR_0("\164\1\46\167\2\76\164\0\21\166", "\59\197\116\90\200\81");
obf_cached_str[3711] = LUAOBFUSACTOR_DECRYPT_STR_0("\58\188\63\167\4\91\247\80", "\59\121\221\83\203\102\58\148");
obf_cached_str[3710] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\48\81\244\246\57\67", "\149\131\85\55");
obf_cached_str[3709] = LUAOBFUSACTOR_DECRYPT_STR_0("\156\185\106\227\229\115\155\39\169", "\70\221\204\30\140\197\32\236");
obf_cached_str[3707] = LUAOBFUSACTOR_DECRYPT_STR_0("\74\37\19\15\196\34", "\86\46\76\96\123\176");
obf_cached_str[3706] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\120\125\86\189\242\138\114", "\147\233\25\17\58\223");
obf_cached_str[3705] = LUAOBFUSACTOR_DECRYPT_STR_0("\224\185\18", "\160\173\216\106");
obf_cached_str[3704] = LUAOBFUSACTOR_DECRYPT_STR_0("\227\67\228", "\161\174\42\138\135\216");
obf_cached_str[3703] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\89\119\4\166\93\228", "\144\152\60\17\101\211\49");
obf_cached_str[3702] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\50\166\242\29\13\167\240\77\103\150\244\78\51\179\243\94\34", "\157\61\71\210");
obf_cached_str[3700] = LUAOBFUSACTOR_DECRYPT_STR_0("\177\219\190\47\212\165\195\186\15\240", "\158\208\174\202\64");
obf_cached_str[3699] = LUAOBFUSACTOR_DECRYPT_STR_0("\88\65\142\198\35\12\221\227", "\136\27\32\226\170\65\109\190");
obf_cached_str[3698] = LUAOBFUSACTOR_DECRYPT_STR_0("\157\235\212\244\192\38\173", "\74\217\142\178\149\181");
obf_cached_str[3697] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\42\212\115\191\46\102\215\47", "\19\186\95\160\28\159\100");
obf_cached_str[3694] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\211\224\192\223\173\69\89", "\50\78\178\140\172\189\204\38");
obf_cached_str[3693] = LUAOBFUSACTOR_DECRYPT_STR_0("\83\118\49", "\204\30\23\73\168\169\140\78");
obf_cached_str[3692] = LUAOBFUSACTOR_DECRYPT_STR_0("\32\117\48", "\199\109\28\94\146\192\92");
obf_cached_str[3691] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\113\138\239\225\17\96", "\148\125\20\236\142");
obf_cached_str[3690] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\156\151\181\9\148\79\157\128\178\9\147\71\154\151\187\71\180\75", "\215\46\233\227\218\41");
obf_cached_str[3688] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\57\246\78\88\230\85\62", "\85\36\88\154\34\58\135\54");
obf_cached_str[3687] = LUAOBFUSACTOR_DECRYPT_STR_0("\222\73\78\133\69\76\233", "\28\154\44\40\228\48\32\157");
obf_cached_str[3686] = LUAOBFUSACTOR_DECRYPT_STR_0("\153\85\226\179\230\155\65\226\191\174", "\198\216\32\150\220");
obf_cached_str[3684] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\160\173\176\190\201\180\173", "\237\190\213\217\223");
obf_cached_str[3680] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\168\24\191\130\65\204\14\109\178\26\170\188\79\215\30", "\106\63\221\117\222\236\46\165");
obf_cached_str[3678] = LUAOBFUSACTOR_DECRYPT_STR_0("\167\16\173\29\41\19", "\97\196\120\204\111\91");
obf_cached_str[3677] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\54\237\184\185\44\233\189\133\44\239\173\135\34\242\173", "\217\215\67\128");
obf_cached_str[3675] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\26\183\63\211\5", "\119\155\114\214\77\161");
obf_cached_str[3674] = LUAOBFUSACTOR_DECRYPT_STR_0("\118\229\208\231\45\13\70\240", "\108\52\132\163\130\125");
obf_cached_str[3672] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\224\29\40\20\238\30\48", "\92\118\143\114");
obf_cached_str[3667] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\78\21\19\227\240\8\82\24\37", "\130\126\59\123\64\134");
obf_cached_str[3665] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\235\0\10", "\51\84\138\109\111\182\79");
obf_cached_str[3655] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\170\7\252\227\89", "\181\228\194\102\142\145\43");
obf_cached_str[3648] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\74\113\24\187\245\16", "\206\41\38\16\97\222\135\99");
obf_cached_str[3646] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\223\114\91", "\206\188\190\31\62\190");
obf_cached_str[3644] = LUAOBFUSACTOR_DECRYPT_STR_0("\59\25\186\69\24\17\164\120\3\0\189\69\32\17\166\80\10\21\186", "\49\109\112\200");
obf_cached_str[3642] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\228\25\89", "\138\109\133\116\60\213");
obf_cached_str[3640] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\101\225\43\103\16\29\108", "\28\74\16\149\68\45\101\112");
obf_cached_str[3636] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\252\186\204\136\50\222\48\219\184\194\146\13\214\38\253", "\183\84\137\215\173\230\93");
obf_cached_str[3634] = LUAOBFUSACTOR_DECRYPT_STR_0("\237\108\196\79\203\118\192\74\247\118\198\90\245\120\219\90", "\46\165\25\169");
obf_cached_str[3632] = LUAOBFUSACTOR_DECRYPT_STR_0("\217\60\72\133\236\252\233\41", "\157\155\93\59\224\188");
obf_cached_str[3630] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\5\124\176\132\207\186\228", "\136\68\106\19\196\230\174\214");
obf_cached_str[3625] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\13\131\39\173\203\20\254\27\136", "\98\151\120\237\116\200\185");
obf_cached_str[3623] = LUAOBFUSACTOR_DECRYPT_STR_0("\167\229\216\27", "\93\192\132\181\126");
obf_cached_str[3607] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\202\251\179\235\18\22", "\97\62\166\154\202\142\96\101");
obf_cached_str[3605] = LUAOBFUSACTOR_DECRYPT_STR_0("\0\57\55\129", "\80\103\88\90\228\112\27\174");
obf_cached_str[3603] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\64\248\27\170\72\230\38\177\89\255\27\146\72\228\14\184\76\248", "\111\223\41\138");
obf_cached_str[3601] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\249\5\169", "\174\105\152\104\204\173");
obf_cached_str[3595] = LUAOBFUSACTOR_DECRYPT_STR_0("\27\208\52\254\51\65\58\193\11\240\50\90\3\196\43\235", "\46\83\165\89\159\93");
obf_cached_str[3593] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\80\77\203\196\77\76\68\248\197\77\81\112\203\216\86", "\170\34\37\32\170");
obf_cached_str[3591] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\117\152\119\7\204\14\73", "\61\62\20\235\18\87\173\124");
obf_cached_str[3589] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\199\180\211\19\136\19\196", "\233\127\168\219\167\113");
obf_cached_str[3584] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\81\112\2\222\216\206\84\71\123", "\184\61\36\30\81\187\170");
obf_cached_str[3582] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\207\19\243", "\192\235\174\126\150\93\87\231");
obf_cached_str[3574] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\197\230\83\64\20\218", "\37\102\169\135\42");
obf_cached_str[3572] = LUAOBFUSACTOR_DECRYPT_STR_0("\68\11\230\239", "\158\35\106\139\138\188\170");
obf_cached_str[3571] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\215\72\103\14\178\78\247\84\99\14\167\111\223\84\114\28\182\80", "\211\34\190\58\19\123");
obf_cached_str[3569] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\9\123\1", "\39\173\104\22\100");
obf_cached_str[3567] = LUAOBFUSACTOR_DECRYPT_STR_0("\222\222\166\0\206\142\202\120", "\86\140\187\203\111\184\235\174");
obf_cached_str[3566] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\136\22\221\155\253\68", "\152\54\206\123\178\237");
obf_cached_str[3561] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\85\5\90\45\121", "\30\171\33\119\51\67");
obf_cached_str[3556] = LUAOBFUSACTOR_DECRYPT_STR_0("\60\225\168\73\45\2\31", "\112\108\141\201\48\72");
obf_cached_str[3554] = LUAOBFUSACTOR_DECRYPT_STR_0("\33\241\71\205", "\209\70\144\42\168");
obf_cached_str[3551] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\217\233\230\219\103\203\57\220\230", "\137\88\176\138\141\190\21");
obf_cached_str[3549] = LUAOBFUSACTOR_DECRYPT_STR_0("\236\164\139\22", "\35\139\197\230\115\219\222\114");
obf_cached_str[3535] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\17\224\233\199\50", "\64\190\100\146\154\168");
obf_cached_str[3533] = LUAOBFUSACTOR_DECRYPT_STR_0("\84\254\230\236\60\37\30", "\108\55\150\135\158\78\87");
obf_cached_str[3532] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\57\242\242\35\204\23\228\240", "\70\190\80\145\153");
obf_cached_str[3530] = LUAOBFUSACTOR_DECRYPT_STR_0("\160\213\58\216\118\135\201\51", "\24\232\160\87\185");
obf_cached_str[3528] = LUAOBFUSACTOR_DECRYPT_STR_0("\66\195\180\52\108\83\217", "\30\33\171\213\70");
obf_cached_str[3523] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\16\117\149\52\39\155", "\85\232\124\20\236\81");
obf_cached_str[3521] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\170\174\197", "\160\123\203\195");
obf_cached_str[3516] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\54\82\40\30\227\165", "\214\164\90\51\81\123\145");
obf_cached_str[3514] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\65\243\194", "\37\94\32\158\167\43\100");
obf_cached_str[3513] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\83\208\58", "\173\162\58\179\81\186\52\64");
obf_cached_str[3509] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\3\91\44", "\108\155\106\56\71\228");
obf_cached_str[3507] = LUAOBFUSACTOR_DECRYPT_STR_0("\9\223\149\71\45\217\137\64", "\46\89\176\230");
obf_cached_str[3504] = LUAOBFUSACTOR_DECRYPT_STR_0("\162\21\175\11\4\116\58\197\138\25\225\12\24\104\86\202\139\9\175\6\87\117\24\140\168\19\162\9\18\110\36\195\139\17\128\67", "\172\228\124\193\98\119\28\118");
obf_cached_str[3503] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\24\135\23\49\26\146\32\31\140", "\222\73\113\233\126\66\114");
obf_cached_str[3499] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\246\169\183\233\3\248\184\185", "\154\115\153\219\220");
obf_cached_str[3498] = LUAOBFUSACTOR_DECRYPT_STR_0("\157\2\40\69\71\163\63\36\65\79\144", "\34\209\109\75\46");
obf_cached_str[3495] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\205\201\255\226\243\244\200\11", "\171\110\162\187\148\145\131\149");
obf_cached_str[3494] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\33\67\199\224\64", "\140\51\78\39\162");
obf_cached_str[3492] = LUAOBFUSACTOR_DECRYPT_STR_0("\249\167\12\21\187\3\4\37\235", "\70\142\200\126\126\200\115\101");
obf_cached_str[3491] = LUAOBFUSACTOR_DECRYPT_STR_0("\50\94\176\211\91\21\66\185\224\90\21\95\141\211\71\14\11\179\221\65\90\77\178\199\91\30\10", "\53\122\43\221\178");
obf_cached_str[3490] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\202\238\174\42\251\28\134\202\208\236\187\20\245\7\150", "\226\152\191\131\207\68\148\117");
obf_cached_str[3487] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\214\141\92", "\57\184\183\224");
obf_cached_str[3486] = LUAOBFUSACTOR_DECRYPT_STR_0("\178\222\2\44\181\33\163", "\83\209\182\99\94\199");
obf_cached_str[3477] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\27\178\63\50\5\160", "\70\87\119\211");
obf_cached_str[3475] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\86\249\244", "\37\117\55\148\145\136\59\85");
obf_cached_str[3473] = LUAOBFUSACTOR_DECRYPT_STR_0("\70\193\50\33\242\253\179\228\126\216\53\33\202\253\177\204\119\205\50", "\173\16\168\64\85\135\156\223");
obf_cached_str[3471] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\65\168\238", "\139\169\32\197");
obf_cached_str[3469] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\23\200\199\204\238\35\226\25\1\233\240\206\239\42\227", "\134\79\100\155\162\175\129\77");
obf_cached_str[3468] = LUAOBFUSACTOR_DECRYPT_STR_0("\155\226\142\63\112\169\10\229", "\142\216\131\226\83\18\200\105");
obf_cached_str[3467] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\250\152", "\119\213\155\224\176\210");
obf_cached_str[3466] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\182\176", "\237\52\223\222");
obf_cached_str[3465] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\27\49\130\213\75\9", "\39\125\126\87\227\160");
obf_cached_str[3464] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\179\237\134\52\194\79\24\179\228\143\52", "\111\74\210\138\232\81\182");
obf_cached_str[3462] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\149\132\186\235\197\216\126\136", "\177\17\230\210\223\153\182");
obf_cached_str[3461] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\11\44\244\216\246\176\52", "\95\220\106\64\152\186\151\211");
obf_cached_str[3459] = LUAOBFUSACTOR_DECRYPT_STR_0("\156\172\204\254\167\67\25", "\103\211\220\184\151\200\45\106");
obf_cached_str[3458] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\7\231\243", "\168\128\104\137\150\131\140\144");
obf_cached_str[3457] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\15\118\49\184\22\35", "\122\87\106\16\80\205");
obf_cached_str[3456] = LUAOBFUSACTOR_DECRYPT_STR_0("\50\3\10\76\4\11\66\59\71\19\12\11\2\76", "\97\127\98\109\34");
obf_cached_str[3454] = LUAOBFUSACTOR_DECRYPT_STR_0("\156\195\1\94\31\175\20\180", "\119\223\162\109\50\125\206");
obf_cached_str[3453] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\182\39\25\44\14\167", "\89\98\211\65\120");
obf_cached_str[3452] = LUAOBFUSACTOR_DECRYPT_STR_0("\91\135\90\65\115\146\78", "\47\22\230\61");
obf_cached_str[3450] = LUAOBFUSACTOR_DECRYPT_STR_0("\151\128\173\196\215\227", "\191\199\236\204\189\178\145");
obf_cached_str[3448] = LUAOBFUSACTOR_DECRYPT_STR_0("\9\36\84\4", "\217\68\77\39\103\115\32");
obf_cached_str[3446] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\232\232\252\226\217\203\43", "\165\76\154\135\144\142\176");
obf_cached_str[3444] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\92\48\130\67\252\49\64\39\158", "\157\69\41\68\237\46");
obf_cached_str[3442] = LUAOBFUSACTOR_DECRYPT_STR_0("\17\216\99\213\211\20\162\217\39\233", "\176\64\154\67\150\188\122\196");
obf_cached_str[3440] = LUAOBFUSACTOR_DECRYPT_STR_0("\240\237\72\60\219\229\82\56", "\95\179\140\60");
obf_cached_str[3430] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\27\245\185", "\203\115\114\150\210\96");
obf_cached_str[3425] = LUAOBFUSACTOR_DECRYPT_STR_0("\30\137\72\189\234\187\127\10\131", "\30\105\230\58\214\153\203");
obf_cached_str[3416] = LUAOBFUSACTOR_DECRYPT_STR_0("\180\172\37\128\180\14\162\160\50", "\126\195\195\87\235\199");
obf_cached_str[3415] = LUAOBFUSACTOR_DECRYPT_STR_0("\207\74\41\170\82\118\227\91\51\191", "\30\142\62\93\203\49");
obf_cached_str[3411] = LUAOBFUSACTOR_DECRYPT_STR_0("\1\236\65\246\5\243\82\254\19", "\157\118\131\51");
obf_cached_str[3407] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\28\255\76\110\222\92\55\62", "\84\91\115\141\39\29\174\61");
obf_cached_str[3406] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\189\229\18\190\215\211\172\255\7", "\191\190\201\145\115\221");
obf_cached_str[3404] = LUAOBFUSACTOR_DECRYPT_STR_0("\207\75\140\81", "\146\141\46\237\60\33\95");
obf_cached_str[3393] = LUAOBFUSACTOR_DECRYPT_STR_0("\207\83\186\53\66\232\180\249", "\198\141\50\201\80\18\137");
obf_cached_str[3391] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\163\43\254\37\225\160\40", "\71\128\204\68\138");
obf_cached_str[3387] = LUAOBFUSACTOR_DECRYPT_STR_0("\181\125\27\247\177\98\8\255\167", "\156\194\18\105");
obf_cached_str[3386] = LUAOBFUSACTOR_DECRYPT_STR_0("\187\161\47\185\228\208\251\177\161\47", "\143\216\206\65\215\129\179");
obf_cached_str[3384] = LUAOBFUSACTOR_DECRYPT_STR_0("\47\85\72\53\121\47\78\79\52\114", "\28\76\58\38\91");
obf_cached_str[3383] = LUAOBFUSACTOR_DECRYPT_STR_0("\132\27\59\27\130\23\33\28\136\26", "\117\231\116\85");
obf_cached_str[3375] = LUAOBFUSACTOR_DECRYPT_STR_0("\84\14\136\194\135\142\246\120", "\159\28\123\229\163\233\225");
obf_cached_str[3373] = LUAOBFUSACTOR_DECRYPT_STR_0("\209\30\84\50\2\77\132\167\203\4\86\39\60\67\159\183", "\195\153\107\57\83\108\34\237");
obf_cached_str[3369] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\159\216\185\117\251\83\131\213\143", "\137\37\234\182\234\16");
obf_cached_str[3367] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\48\122\240", "\60\126\81\23\149");
obf_cached_str[3366] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\169\1\130\48\165\27\133\58\168", "\236\85\198\111");
obf_cached_str[3361] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\82\182\4\236\211\167", "\212\151\62\215\125\137\161");
obf_cached_str[3359] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\235\227\36", "\140\109\138\142\65\172\199\76");
obf_cached_str[3354] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\158\66\219\209\81\245\143\125\213\208\74\204\138\93\206", "\62\156\235\47\186\191");
obf_cached_str[3343] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\36\42\28\193\226\59", "\164\144\72\75\101");
obf_cached_str[3341] = LUAOBFUSACTOR_DECRYPT_STR_0("\142\10\124\35", "\54\233\107\17\70");
obf_cached_str[3337] = LUAOBFUSACTOR_DECRYPT_STR_0("\241\177\251\235\236\181\250\247", "\131\188\212\136");
obf_cached_str[3335] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\237\31\121\250\86\80\200", "\188\182\140\108\28\170\55\34");
obf_cached_str[3330] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\114\223\19\50\108\205", "\106\87\30\190");
obf_cached_str[3319] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\159\208\118\213\168\120\72\184\210\120\207\151\112\94\158", "\17\44\234\189\23\187\199");
obf_cached_str[3317] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\216\240\17\124\255\203\247", "\44\158\185\131\116");
obf_cached_str[3315] = LUAOBFUSACTOR_DECRYPT_STR_0("\84\230\75\186\198\24\87\26", "\118\18\137\36\206\164\121\59");
obf_cached_str[3310] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\254\22\44\71\12\163\13\244", "\194\110\145\100\71\52\124");
obf_cached_str[3304] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\21\70\101\222\102\29", "\20\110\121\39\28\187");
obf_cached_str[3302] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\199\240\64", "\145\137\166\157\37\164\151\156");
obf_cached_str[3299] = LUAOBFUSACTOR_DECRYPT_STR_0("\129\231\49\1\67\75\160\246", "\36\201\146\92\96\45");
obf_cached_str[3297] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\47\113\90\60\66\218\252\8\115\84\38\125\210\234\46", "\179\152\90\28\59\82\45");
obf_cached_str[3289] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\58\83\87\175\129\46\57", "\224\66\85\60\35\205");
obf_cached_str[3281] = LUAOBFUSACTOR_DECRYPT_STR_0("\64\122", "\47\17\56\169\73\198\140");
obf_cached_str[3278] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\30\228\66\79\163", "\42\208\127\136\55");
obf_cached_str[3274] = LUAOBFUSACTOR_DECRYPT_STR_0("\145\111\35\67\136\185\39\142\139\117\33\86\182\183\60\158", "\234\217\26\78\34\230\214\78");
obf_cached_str[3272] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\202\53\162\43\201\214\60", "\69\166\191\88\195");
obf_cached_str[3266] = LUAOBFUSACTOR_DECRYPT_STR_0("\203\246\41\223\71\86\189", "\123\155\154\72\166\34\36\206");
obf_cached_str[3264] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\213\91\91", "\62\55\180\54");
obf_cached_str[3263] = LUAOBFUSACTOR_DECRYPT_STR_0("\12\224\145\67\191\70\63\241\132\75\133\81\49\247\128\72\179", "\37\94\133\225\47\214");
obf_cached_str[3261] = LUAOBFUSACTOR_DECRYPT_STR_0("\95\200\245\49", "\115\56\169\152\84\105\28");
obf_cached_str[3251] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\56\194\126\78", "\95\231\87\182\94\125");
obf_cached_str[3248] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\207\183\190\82", "\99\152\160\195\158");
obf_cached_str[3243] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\65\249\194\252\20\124\237\2\91\251\215\194\26\103\253", "\137\80\52\148\163\146\123\21");
obf_cached_str[3240] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\233\75\65\191", "\123\177\134\63\97\140\110\48");
obf_cached_str[3237] = LUAOBFUSACTOR_DECRYPT_STR_0("\165\191\101\100\147", "\162\199\208\17\68");
obf_cached_str[3231] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\200\85\62", "\166\184\169\56\91\195\202");
obf_cached_str[3229] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\190\33\171", "\38\23\223\76\206\161");
obf_cached_str[3227] = LUAOBFUSACTOR_DECRYPT_STR_0("\241\21\1\51", "\86\150\116\108");
obf_cached_str[3225] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\202\209\81", "\89\154\171\188\52\33");
obf_cached_str[3224] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\62\49\55\85", "\154\109\81\69\23\102\89");
obf_cached_str[3221] = LUAOBFUSACTOR_DECRYPT_STR_0("\76\93\192\176\10", "\52\46\50\180\144\59");
obf_cached_str[3218] = LUAOBFUSACTOR_DECRYPT_STR_0("\174\95\195\70\168\89\222\85", "\50\218\48\176");
obf_cached_str[3215] = LUAOBFUSACTOR_DECRYPT_STR_0("\246\37\111\112", "\24\155\68\27");
obf_cached_str[3214] = LUAOBFUSACTOR_DECRYPT_STR_0("\169\179\99\226\145\75\69\172", "\203\221\220\16\150\227\34\43");
obf_cached_str[3212] = LUAOBFUSACTOR_DECRYPT_STR_0("\83\123", "\16\100\78\202");
obf_cached_str[3210] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\69\64\172", "\201\49\36\36");
obf_cached_str[3208] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\193\14\81\3\199\19\66", "\37\113\174\125");
obf_cached_str[3206] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\210", "\137\153\189\186");
obf_cached_str[3204] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\31\54", "\174\129\122\69\108\165\54\119");
obf_cached_str[3201] = LUAOBFUSACTOR_DECRYPT_STR_0("\178\43\237\54\163", "\144\208\68\153\22");
obf_cached_str[3198] = LUAOBFUSACTOR_DECRYPT_STR_0("\228\178\9\166\154", "\171\134\221\125\134");
obf_cached_str[3195] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\26", "\149\93\117\82\106\130");
obf_cached_str[3193] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\237\100", "\174\51\136\23\130\163");
obf_cached_str[3190] = LUAOBFUSACTOR_DECRYPT_STR_0("\221\192\170\242\247", "\87\191\175\222\210\196\38");
obf_cached_str[3187] = LUAOBFUSACTOR_DECRYPT_STR_0("\129\52\49\61\210", "\29\227\91\69");
obf_cached_str[3184] = LUAOBFUSACTOR_DECRYPT_STR_0("\1\197", "\196\79\170\169");
obf_cached_str[3182] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\133\166", "\123\76\224\213\173");
obf_cached_str[3179] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\60\79\21\163", "\144\24\83\59\53");
obf_cached_str[3176] = LUAOBFUSACTOR_DECRYPT_STR_0("\32\140\238\254\8", "\188\66\227\154\222\57\229");
obf_cached_str[3173] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\209", "\131\182\190\167\117\42\106\170");
obf_cached_str[3171] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\64\223", "\127\83\37\172\215");
obf_cached_str[3168] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\118\111\5\173", "\164\161\25\27\37\158");
obf_cached_str[3165] = LUAOBFUSACTOR_DECRYPT_STR_0("\73\29\72\253\26", "\221\43\114\60");
obf_cached_str[3162] = LUAOBFUSACTOR_DECRYPT_STR_0("\231\164\227\223\26\250\165\247", "\104\147\203\144\171");
obf_cached_str[3154] = LUAOBFUSACTOR_DECRYPT_STR_0("\117\228\104\203", "\88\24\133\28\163\41");
obf_cached_str[3141] = LUAOBFUSACTOR_DECRYPT_STR_0("\76\196\9\235\228\186\131\65\94", "\34\59\171\123\128\151\202\226");
obf_cached_str[3124] = LUAOBFUSACTOR_DECRYPT_STR_0("\201\35\233\246\237\18", "\155\136\119\128");
obf_cached_str[3120] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\41\201\27\58\168", "\85\17\125\160\118\95\205");
obf_cached_str[3119] = LUAOBFUSACTOR_DECRYPT_STR_0("\128\109\0\6\58\27", "\126\193\57\105\107\95");
obf_cached_str[3114] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\230\225\92\33\177", "\197\164\147\141\48\68");
obf_cached_str[3112] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\248\64\198", "\112\222\153\36\163\187");
obf_cached_str[3110] = LUAOBFUSACTOR_DECRYPT_STR_0("\164\45\190\246", "\146\236\72\223");
obf_cached_str[3106] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\224\202\60\45\227", "\60\220\149\166\80\72\151");
obf_cached_str[3105] = LUAOBFUSACTOR_DECRYPT_STR_0("\16\241\81\1", "\43\86\144\53\100\95");
obf_cached_str[3101] = LUAOBFUSACTOR_DECRYPT_STR_0("\82\230\196\26", "\92\63\135\176\114\80");
obf_cached_str[3100] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\80\52\219\253\245", "\129\221\37\88\183\152");
obf_cached_str[3098] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\161\218\209", "\185\143\192\174");
obf_cached_str[3097] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\77\43\246", "\52\212\44\79\147\132\40\154");
obf_cached_str[3095] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\175\218\5", "\207\226\206\174\109\108\101");
obf_cached_str[3089] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\50\225\110\38\50\49\226", "\68\83\93\142\26");
obf_cached_str[3082] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\87\117\134\46\183\42\180\65\126", "\92\221\34\27\213\75\197");
obf_cached_str[3080] = LUAOBFUSACTOR_DECRYPT_STR_0("\86\25\135\114", "\37\49\120\234\23\237\146");
obf_cached_str[3077] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\225\138\202\204\222\68\152\253\254\157", "\234\148\142\233\171\160\141\39");
obf_cached_str[3074] = LUAOBFUSACTOR_DECRYPT_STR_0("\240\82\226\120\9\241", "\49\184\51\140\28\101\148");
obf_cached_str[3071] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\43\115\220\196\241\168\31", "\196\115\68\28\168\166\144");
obf_cached_str[3066] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\168\222\124", "\71\136\201\170\20\234\96");
obf_cached_str[3065] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\148\167\25\77\197", "\228\125\225\203\117\40\177\151");
obf_cached_str[3063] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\238\88\126", "\178\19\143\44\22\179\134\79");
obf_cached_str[3062] = LUAOBFUSACTOR_DECRYPT_STR_0("\97\196\173\1", "\136\39\165\201\100\194\104\18");
obf_cached_str[3060] = LUAOBFUSACTOR_DECRYPT_STR_0("\179\234\105\34", "\74\222\139\29");
obf_cached_str[3056] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\199\197\79\78\160", "\212\188\178\169\35\43");
obf_cached_str[3054] = LUAOBFUSACTOR_DECRYPT_STR_0("\59\65\247\20", "\113\125\32\147");
obf_cached_str[3053] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\183\74\54\39\169", "\79\66\219\43");
obf_cached_str[3050] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\165\2\192", "\118\82\192\99\164\37\155\143");
obf_cached_str[3046] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\27\249\167\120", "\94\101\116\141\135\75\91");
obf_cached_str[3043] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\3\60\129\163", "\146\153\108\72\161");
obf_cached_str[3040] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\250\207\135\232", "\81\167\149\187\167\219");
obf_cached_str[3037] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\126\239\86\245", "\153\85\17\155\118\196\114");
obf_cached_str[3034] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\79\41\210\22", "\97\94\39\91\189");
obf_cached_str[3030] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\40\44\72\165\46\61\80\169\41\15\80\163\63\61\67\169", "\36\204\77\92");
obf_cached_str[3028] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\121\13\194", "\165\181\24\96\167\97");
obf_cached_str[3024] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\207\141\87", "\50\116\174\224");
obf_cached_str[3022] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\252\33\166\1\161\243", "\196\151\144\72\197\106");
obf_cached_str[3019] = LUAOBFUSACTOR_DECRYPT_STR_0("\9\213\18\231\96\62\245\9\237\122\47", "\20\91\176\127\136");
obf_cached_str[3014] = LUAOBFUSACTOR_DECRYPT_STR_0("\108\233\62\89\53\64", "\222\46\156\82\53\80\52");
obf_cached_str[3013] = LUAOBFUSACTOR_DECRYPT_STR_0("\95\45\10\112", "\138\25\76\110\21\197\41\35");
obf_cached_str[3012] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\243\174\71", "\159\76\156\193\43\91");
obf_cached_str[3006] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\10\133\226", "\200\188\107\232\135");
obf_cached_str[3005] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\17\14\86\85", "\118\102\126\122");
obf_cached_str[3002] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\255\104\152\29", "\186\228\144\28\184\44\174");
obf_cached_str[2999] = LUAOBFUSACTOR_DECRYPT_STR_0("\88\45\230\10\140", "\98\58\66\146\42\191\118");
obf_cached_str[2996] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\165\72\151\91", "\183\106\202\60");
obf_cached_str[2992] = LUAOBFUSACTOR_DECRYPT_STR_0("\185\207\220\116", "\127\212\174\168\28\82\17");
obf_cached_str[2991] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\90\250\227\27\102", "\126\18\47\150\143");
obf_cached_str[2989] = LUAOBFUSACTOR_DECRYPT_STR_0("\83\132\252\238", "\101\62\229\136\134\221");
obf_cached_str[2988] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\168\196\198", "\163\148\201\160");
obf_cached_str[2986] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\56\215\115", "\27\232\89\163");
obf_cached_str[2982] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\12\234\142\231\13", "\226\130\121\134");
obf_cached_str[2981] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\83\80\226", "\40\45\50\52\135\148\80");
obf_cached_str[2979] = LUAOBFUSACTOR_DECRYPT_STR_0("\0\204\205\170", "\225\72\169\172\206\94\71\174");
obf_cached_str[2976] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\143\202\59\56\47", "\93\93\227\171\66");
obf_cached_str[2973] = LUAOBFUSACTOR_DECRYPT_STR_0("\176\195\118\34", "\167\215\162\27\71");
obf_cached_str[2971] = LUAOBFUSACTOR_DECRYPT_STR_0("\96\160\35\173\240\70\168", "\155\35\204\74\206");
obf_cached_str[2968] = LUAOBFUSACTOR_DECRYPT_STR_0("\109\253\64\247\71", "\226\57\149\50\152\48\217\192");
obf_cached_str[2964] = LUAOBFUSACTOR_DECRYPT_STR_0("\9\214\162\128\198\0\6\47\214\182\191\219\12\21\58\212\183", "\103\91\179\210\236\175\99");
obf_cached_str[2962] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\6\236\194", "\85\114\103\129\167\24\97");
obf_cached_str[2959] = LUAOBFUSACTOR_DECRYPT_STR_0("\224\89\206\172\218\42\202\196\89\205\183", "\143\178\60\163\195\174\79");
obf_cached_str[2953] = LUAOBFUSACTOR_DECRYPT_STR_0("\169\106\138\53\42\152", "\23\235\31\230\89\79\236\141");
obf_cached_str[2951] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\0\206\195", "\56\111\97\170\166");
obf_cached_str[2950] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\24\235\117", "\163\145\119\132\25");
obf_cached_str[2946] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\31\74\211\215\34\240\14\95\219\237\53\254\8\91\216\219", "\65\145\122\58\191\190");
obf_cached_str[2944] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\162\45\69", "\32\154\195\64");
obf_cached_str[2943] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\181\52\65\124\20", "\226\61\219\100\45\29\109");
obf_cached_str[2939] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\249\72\62\123\61\161\232\93\54\65\42\175\238\89\53\119", "\94\192\156\56\82\18");
obf_cached_str[2937] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\163\170\29", "\42\161\194\199\120\22\83");
obf_cached_str[2936] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\234\96\112", "\53\70\163\43");
obf_cached_str[2930] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\52\175\77\127\219\206", "\189\51\88\206\52\26\169");
obf_cached_str[2928] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\49\128\122", "\86\101\80\237\31\172");
obf_cached_str[2923] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\172\183\14", "\183\177\205\218\107");
obf_cached_str[2920] = LUAOBFUSACTOR_DECRYPT_STR_0("\16\26\30\149\3\32\77\48\29\40\130\56\56\84\38\12", "\61\69\105\123\231\74\78");
obf_cached_str[2918] = LUAOBFUSACTOR_DECRYPT_STR_0("\61\28\183\17", "\20\90\125\218\116\201");
obf_cached_str[2912] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\226\14\81", "\182\39\131\124\37\173");
obf_cached_str[2909] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\61\0\52\181\73\61\29\63", "\214\61\84\114\81");
obf_cached_str[2902] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\49\213\86\89\145\67\209\194\45\209\90\72\137\6\161\253\49\213\86\88\201\67\194\204\48\204\92\94\197\34\229\199\43\209\71\10\164\13\248\141\18\205\68\79\151", "\129\173\94\162\51\42\229\99");
obf_cached_str[2894] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\199\189\196\33\186\209\160\150\93\245\229\164\138\31\186\210\229\165\21\191\211\182\144\81\148\200\188\196\57\188\193\173\129\3", "\113\213\166\197\228");
obf_cached_str[2870] = LUAOBFUSACTOR_DECRYPT_STR_0("\235\207\90\225\221\28\17\167\202\239\90\225\226\27\2\183", "\210\190\188\63\147\148\114\97");
obf_cached_str[2868] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\141\249\9", "\204\188\236\148\108\212");
obf_cached_str[2865] = LUAOBFUSACTOR_DECRYPT_STR_0("\102\189\46\84\74\168\96\118\74\171\37\72\5\157\46\93\73\185\96\123\75\165\96\87\74\174\37\22\5\144\47\77\64\175\52\26\100\178\39\86\64\252\41\73\5\237\112", "\58\37\220\64");
obf_cached_str[2858] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\66\48\171\44\169\3\11\181\99\156\77\57\169\38\253\98\48\188\99\176\76\44\160\111\253\110\63\189\99\156\77\57\169\38\253\74\45\229\118\232", "\67\221\35\94\197");
obf_cached_str[2839] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\11\24\137\17\40\163\38\25\144\27\46\163\43\24\128\18\57\163\43\24\158\94\49\236\24\19\203\94\16\236\29\19\148\10\124\194\4\17\139\27\124\234\25\86\210\75", "\92\131\106\118\231\126");
obf_cached_str[2832] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\12\171\0\217\36\63\113\253\77\132\0\209\60\122\4\204\3\188\78\219\63\109\65\161\77\136\15\206\112\94\74\234\1\160\78\223\35\63\19\184", "\36\141\109\197\110\182\80\31");
obf_cached_str[2815] = LUAOBFUSACTOR_DECRYPT_STR_0("\166\47\210\228", "\182\224\78\182\129");
obf_cached_str[2812] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\10\77\32\178\165\158\39\76\57\184\163\158\42\77\41\177\180\158\42\77\55\253\188\209\25\70\98\253\157\209\28\70\61\169\241\255\5\68\34\184\241\215\24\3\123", "\209\190\107\35\78\221");
obf_cached_str[2805] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\61\220\120\124\40\146\67\99\124\243\120\116\48\215\54\82\50\203\54\126\51\192\115\63\124\255\119\107\124\243\120\116\48\215\54\122\47\146\36\35", "\22\19\92\178");
obf_cached_str[2788] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\147\49\4\191\146", "\104\218\230\93");
obf_cached_str[2785] = LUAOBFUSACTOR_DECRYPT_STR_0("\68\13\4\50\205\177\163\245\101\45\4\50\242\182\176\229", "\128\17\126\97\64\132\223\211");
obf_cached_str[2783] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\43\140\21", "\204\113\74\225\112\35\72\16");
obf_cached_str[2782] = LUAOBFUSACTOR_DECRYPT_STR_0("\237\251\245\39\219\182\35\71\230\248\231", "\41\129\148\130\66\168\194\98");
obf_cached_str[2781] = LUAOBFUSACTOR_DECRYPT_STR_0("\196\191\190\101\231\185\170\65", "\36\137\222\198");
obf_cached_str[2780] = LUAOBFUSACTOR_DECRYPT_STR_0("\1\84\90\46\92", "\208\64\58\61\66\57\148");
obf_cached_str[2779] = LUAOBFUSACTOR_DECRYPT_STR_0("\59\39\111\54\124\81\176\147", "\225\118\70\23\102\19\38\213");
obf_cached_str[2778] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\114\161\73\158\82\77\185\91\136\84", "\237\38\29\214\44");
obf_cached_str[2777] = LUAOBFUSACTOR_DECRYPT_STR_0("\145\80\32\21\226\65\67\242\150\95\35\28\202", "\151\215\49\68\112\175\46\39");
obf_cached_str[2776] = LUAOBFUSACTOR_DECRYPT_STR_0("\150\162\53\35\3\94\153\184\61\42\39\68\179\187\60", "\42\212\215\89\79\102");
obf_cached_str[2775] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\22\159\217\120\174\41\130\195\124\176", "\25\194\121\237\180");
obf_cached_str[2773] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\52\147\48\194\196\72\50\143", "\176\33\93\225\85\161");
obf_cached_str[2771] = LUAOBFUSACTOR_DECRYPT_STR_0("\127\75\186\31\91\213\50\75\71\183\12\30\245\119\71\80\254\50\14\234\54\70\77\183\30\41\232\56\92\114\191\8\15\167\57\71\86\254\28\20\242\57\76", "\87\40\34\222\122\123\135");
obf_cached_str[2763] = LUAOBFUSACTOR_DECRYPT_STR_0("\224\89\189\149", "\47\170\44\208\229");
obf_cached_str[2758] = LUAOBFUSACTOR_DECRYPT_STR_0("\113\40\116\165\87\50\112\160\107\50\118\176\105\60\107\176", "\196\57\93\25");
obf_cached_str[2753] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\253\29\197\254\178\249\236\34\203\255\169\192\233\2\208", "\221\144\136\112\164\144");
obf_cached_str[2750] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\3\45\23", "\103\122\118\64");
obf_cached_str[2748] = LUAOBFUSACTOR_DECRYPT_STR_0("\203\232\29\59\216\252\36\201\209\242\31\46\230\242\63\217", "\173\131\157\112\90\182\147\77");
obf_cached_str[2744] = LUAOBFUSACTOR_DECRYPT_STR_0("\127\48\199\233\89\42\195\236\101\42\197\252\103\36\216\252", "\136\55\69\170");
obf_cached_str[2741] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\92\229\22\215\47", "\91\192\41\137\122\178");
obf_cached_str[2739] = LUAOBFUSACTOR_DECRYPT_STR_0("\97\174\191\49\56\49\26\77\137\189\63\34\14\18\91\175", "\115\41\219\210\80\86\94");
obf_cached_str[2736] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\79\116\113", "\55\106\46\16\20\19");
obf_cached_str[2735] = LUAOBFUSACTOR_DECRYPT_STR_0("\47\43\226", "\214\98\74\133\47\51\214\153");
obf_cached_str[2734] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\10\223\19", "\67\67\99\169\118\84");
obf_cached_str[2733] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\232\235\30", "\19\117\129\134\123");
obf_cached_str[2732] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\201\254\50", "\232\26\188\147\66");
obf_cached_str[2728] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\192\125\16\88\230", "\173\39\181\17\124\61\146");
obf_cached_str[2727] = LUAOBFUSACTOR_DECRYPT_STR_0("\161\190\57", "\196\229\209\77\148");
obf_cached_str[2726] = LUAOBFUSACTOR_DECRYPT_STR_0("\246\31\178", "\81\187\126\213\129\39\162");
obf_cached_str[2725] = LUAOBFUSACTOR_DECRYPT_STR_0("\153\2\236\91", "\133\221\107\154\62");
obf_cached_str[2724] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\40\5\8", "\66\57\65\104\109\184\165");
obf_cached_str[2723] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\146\1\161", "\209\145\231\108");
obf_cached_str[2719] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\220\72\232\185\70", "\220\50\169\36\132");
obf_cached_str[2718] = LUAOBFUSACTOR_DECRYPT_STR_0("\120\29\79", "\118\60\114\59\93\216\171\137");
obf_cached_str[2716] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\219\132\41", "\169\83\174\233\89\232\216\200");
obf_cached_str[2714] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\100\12\191\95\160", "\35\206\17\96\211\58\212\22");
obf_cached_str[2712] = LUAOBFUSACTOR_DECRYPT_STR_0("\94\15\211\130", "\132\24\110\183\231");
obf_cached_str[2710] = LUAOBFUSACTOR_DECRYPT_STR_0("\173\117\245", "\115\233\26\129\72");
obf_cached_str[2708] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\4\157\66", "\165\200\109\235\39\100\40\110");
obf_cached_str[2706] = LUAOBFUSACTOR_DECRYPT_STR_0("\252\226\41", "\167\177\131\78\232");
obf_cached_str[2704] = LUAOBFUSACTOR_DECRYPT_STR_0("\149\248\172\182", "\84\209\145\193\211\181\28\156");
obf_cached_str[2702] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\176\177\179", "\195\87\197\220");
obf_cached_str[2700] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\216\197\82\247\221", "\199\59\173\169\62\146\169\192");
obf_cached_str[2698] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\197\198\177", "\78\196\164\162\212\40");
obf_cached_str[2696] = LUAOBFUSACTOR_DECRYPT_STR_0("\120\163\185", "\72\60\204\205\93");
obf_cached_str[2694] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\203\251\214", "\46\33\162\141\179");
obf_cached_str[2692] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\61\26", "\73\155\92\125\84\37\25\61");
obf_cached_str[2690] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\239\253\181", "\213\130\134\144\208");
obf_cached_str[2688] = LUAOBFUSACTOR_DECRYPT_STR_0("\60\7\22\211", "\163\118\114\123");
obf_cached_str[2686] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\147\118\245\254\174", "\155\218\230\26\153");
obf_cached_str[2684] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\131\9\57", "\33\119\226\109\92");
obf_cached_str[2682] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\192\218", "\147\82\175\174\70");
obf_cached_str[2680] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\174\44\79", "\159\215\199\90\42");
obf_cached_str[2678] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\208\242", "\22\168\177\149\127\122\185");
obf_cached_str[2676] = LUAOBFUSACTOR_DECRYPT_STR_0("\236\53\176\113", "\157\168\92\221\20\100\94");
obf_cached_str[2674] = LUAOBFUSACTOR_DECRYPT_STR_0("\204\70\25\199\89\235\90\16", "\55\132\51\116\166");
obf_cached_str[2670] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\102\127\66\18\124\123\71\46\124\125\87\44\114\96\87", "\35\124\19\18");
obf_cached_str[2666] = LUAOBFUSACTOR_DECRYPT_STR_0("\160\232\10\114\82\22\61\140\207\8\124\72\41\53\154\233", "\84\232\157\103\19\60\121");
obf_cached_str[2662] = LUAOBFUSACTOR_DECRYPT_STR_0("\92\175\38\179\122\181\34\182", "\210\20\218\75");
obf_cached_str[2659] = LUAOBFUSACTOR_DECRYPT_STR_0("\46\75\223\41\247\38\130\221\52\81\221\60\201\40\153\205", "\185\102\62\178\72\153\73\235");
obf_cached_str[2654] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\248\243\40", "\97\153\153\135\64\93\86");
obf_cached_str[2640] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\251\24\168", "\192\149\154\108");
obf_cached_str[2638] = LUAOBFUSACTOR_DECRYPT_STR_0("\240\134\153\222", "\182\157\231\237");
obf_cached_str[2635] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\209\120\191\28\27\218\75\248\203\122\170\34\21\193\91", "\47\170\164\21\222\114\116\179");
obf_cached_str[2633] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\92\29\217\192\137\192\77\34\215\193\146\249\72\2\204", "\230\169\41\112\184\174");
obf_cached_str[2630] = LUAOBFUSACTOR_DECRYPT_STR_0("\84\108\74\7\120\133\82\202", "\174\28\25\39\102\22\234\59");
obf_cached_str[2625] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\183\229\123\114\67\171\236\72\115\67\182\216\123\110\88", "\28\44\194\136\26");
obf_cached_str[2619] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\84\58\85\125\61\219\69\5\91\124\38\226\64\37\64", "\82\178\33\87\52\19");
obf_cached_str[2617] = LUAOBFUSACTOR_DECRYPT_STR_0("\235\197\176\39\52\2\202\212\143\41\53\25\243\209\175\50", "\109\163\176\221\70\90");
obf_cached_str[2615] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\115\68\180\3", "\160\82\28\48\148\48\164\74");
obf_cached_str[2613] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\86\176\85\66", "\115\180\57\196\117");
obf_cached_str[2611] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\191\237\251\25", "\45\119\208\153\219");
obf_cached_str[2610] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\166\201\138\172", "\158\141\201\189\170");
obf_cached_str[2607] = LUAOBFUSACTOR_DECRYPT_STR_0("\227\35\197\56\188", "\206\141\83\166\79");
obf_cached_str[2604] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\23\7\52", "\236\109\118\106\81\117");
obf_cached_str[2601] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\186\41\22\181\73\166\32", "\219\38\207\68\119");
obf_cached_str[2596] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\55\176\248\212\143\237\52\16\178\246\206\176\229\34\54", "\132\80\66\221\153\186\224");
obf_cached_str[2590] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\97\251\65\229\179\249\75\70\249\79\255\140\241\93\96", "\144\47\20\150\32\139\220");
obf_cached_str[2586] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\210\23\208\226\211\189\141\18\200\21\197\220\221\166\157", "\233\64\167\122\177\140\188\212");
obf_cached_str[2582] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\135\83\178\74\178", "\47\192\235\50\203");
obf_cached_str[2575] = LUAOBFUSACTOR_DECRYPT_STR_0("\128\200\252\16\160\116\161\217\195\30\161\111\152\220\227\5", "\27\200\189\145\113\206");
obf_cached_str[2571] = LUAOBFUSACTOR_DECRYPT_STR_0("\218\94\76\209\252\68\72\212\192\68\78\196\194\74\83\196", "\176\146\43\33");
obf_cached_str[2568] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\10\245\107\98", "\75\83\101\129");
obf_cached_str[2565] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\12\62\161\212", "\229\41\99\74\129");
obf_cached_str[2561] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\249\209\170\24\215", "\125\165\149\176\211");
obf_cached_str[2557] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\73\6\120", "\29\101\40\107");
obf_cached_str[2555] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\172\27\49\62\182\31\52\2\182\25\36\0\184\4\36", "\80\80\217\118");
obf_cached_str[2551] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\186\62\54\17", "\34\131\213\74\22");
obf_cached_str[2549] = LUAOBFUSACTOR_DECRYPT_STR_0("\194\170\30\122\145", "\90\160\197\106");
obf_cached_str[2541] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\77\75\236\57\83\81\66\223\56\83\76\118\236\37\72", "\87\60\56\38\141");
obf_cached_str[2537] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\78\168\0\225", "\231\200\33\220\32\210\93");
obf_cached_str[2535] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\119\44\169\19", "\109\157\24\88\137\34\165");
obf_cached_str[2530] = LUAOBFUSACTOR_DECRYPT_STR_0("\228\36\22\248\30\241\208\196\57", "\183\172\77\113\144\114\152");
obf_cached_str[2528] = LUAOBFUSACTOR_DECRYPT_STR_0("\249\117\59\50", "\120\189\28\77\87\182\131");
obf_cached_str[2527] = LUAOBFUSACTOR_DECRYPT_STR_0("\93\200\239\10\58\197\118\197\253", "\172\17\173\137\126\104");
obf_cached_str[2526] = LUAOBFUSACTOR_DECRYPT_STR_0("\132\49\167\218", "\191\192\88\202");
obf_cached_str[2525] = LUAOBFUSACTOR_DECRYPT_STR_0("\150\248\13\201\30\58\79\196", "\160\212\153\110\162\105\91\61");
obf_cached_str[2524] = LUAOBFUSACTOR_DECRYPT_STR_0("\221\77\230\182\182\203", "\138\155\34\145\215\196\175");
obf_cached_str[2523] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\205\218\88", "\82\113\164\183\61\118\113\82");
obf_cached_str[2522] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\27\60\16\118\23\61\12\80", "\100\36\126\90");
obf_cached_str[2511] = LUAOBFUSACTOR_DECRYPT_STR_0("\156\46\248\69\94\187\50\241\118\95\187\47\197\69\66\160", "\48\212\91\149\36");
obf_cached_str[2508] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\8\226\140\203\41\20\235\191\202\41\9\223\140\215\50", "\165\70\125\143\237");
obf_cached_str[2506] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\228\184\255\47", "\60\92\139\204\223\30");
obf_cached_str[2503] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\3\10\181\21\46\21\71\36\8\187\15\17\29\81\2", "\124\35\118\103\212\123\65");
obf_cached_str[2500] = LUAOBFUSACTOR_DECRYPT_STR_0("\124\34\65\72\126\206\215\80\5\67\70\100\241\223\70\35", "\190\52\87\44\41\16\161");
obf_cached_str[2498] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\184\93\231\92", "\88\190\215\41\199\111\47\181");
obf_cached_str[2495] = LUAOBFUSACTOR_DECRYPT_STR_0("\172\69\95\170\205\163\141\84\96\164\204\184\180\81\64\191", "\204\228\48\50\203\163");
obf_cached_str[2492] = LUAOBFUSACTOR_DECRYPT_STR_0("\50\40\167\129\231\3\243\49\40\50\165\148\217\13\232\33", "\85\122\93\202\224\137\108\154");
obf_cached_str[2490] = LUAOBFUSACTOR_DECRYPT_STR_0("\61\185\24\230\110", "\198\95\214\108");
obf_cached_str[2487] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\31\175\67\46\83\50\163\147\5\173\86\16\93\41\179", "\199\193\106\194\34\64\60\91");
obf_cached_str[2484] = LUAOBFUSACTOR_DECRYPT_STR_0("\168\193\220\15\212\6\137\208\227\1\213\29\176\213\195\26", "\105\224\180\177\110\186");
obf_cached_str[2482] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\204\54\255\108", "\16\96\163\66\223\95\138\42");
obf_cached_str[2479] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\252\231\208", "\160\66\137\138");
obf_cached_str[2477] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\110\82\200\243\224", "\150\148\27\62\164");
obf_cached_str[2475] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\172\2\91", "\218\33\205\102\62\128\75\152");
obf_cached_str[2473] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\239\239", "\142\140\128\155\136\21\215\165");
obf_cached_str[2471] = LUAOBFUSACTOR_DECRYPT_STR_0("\141\27\151\207", "\93\201\114\225\170");
obf_cached_str[2469] = LUAOBFUSACTOR_DECRYPT_STR_0("\235\124\193", "\98\166\29\166\57\152");
obf_cached_str[2467] = LUAOBFUSACTOR_DECRYPT_STR_0("\153\65\246\70", "\195\221\40\155\35\225\230\158");
obf_cached_str[2465] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\77\167\179", "\51\207\56\202\195\150");
obf_cached_str[2463] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\228\49\94\60\48", "\68\116\145\93\50\89");
obf_cached_str[2461] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\79\253\178", "\188\60\46\153\215\172\57");
obf_cached_str[2459] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\210\219", "\184\206\189\175");
obf_cached_str[2457] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\141\146\188", "\217\162\228\228");
obf_cached_str[2455] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\233\251", "\222\70\136\156\129\222\88");
obf_cached_str[2453] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\29\11\13", "\104\182\116\102");
obf_cached_str[2451] = LUAOBFUSACTOR_DECRYPT_STR_0("\123\29\36\167", "\215\49\104\73");
obf_cached_str[2449] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\91\77\120\53\94", "\42\205\46\33\20\80");
obf_cached_str[2447] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\163\189\218", "\216\189\194\217\191\111\100");
obf_cached_str[2445] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\76\219", "\57\182\35\175\156\173\179");
obf_cached_str[2443] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\50\73\166", "\195\155\91\63");
obf_cached_str[2441] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\216\67", "\141\179\185\36\138\79\52");
obf_cached_str[2439] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\228\117\177", "\176\67\141\24\212");
obf_cached_str[2437] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\196\136\253", "\139\34\177\229\141\112");
obf_cached_str[2435] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\214\42\142\237\34", "\205\189\163\70\226\136\86");
obf_cached_str[2433] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\199\80\56", "\95\207\166\52\93\109\55\229");
obf_cached_str[2431] = LUAOBFUSACTOR_DECRYPT_STR_0("\95\59\1", "\72\27\84\117\207\134");
obf_cached_str[2429] = LUAOBFUSACTOR_DECRYPT_STR_0("\17\112\240\210", "\55\85\25\134\183\229");
obf_cached_str[2427] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\83\125", "\202\88\50\26");
obf_cached_str[2425] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\143\180\240", "\149\82\230\217");
obf_cached_str[2423] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\170\136\80\63\176\140\85\3\176\138\69\1\190\151\69", "\49\81\223\229");
obf_cached_str[2420] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\51\66\179\23\167\16\201\127\41\64\166\41\169\11\217", "\173\45\70\47\210\121\200\121");
obf_cached_str[2409] = LUAOBFUSACTOR_DECRYPT_STR_0("\181\4\136\91", "\157\210\101\229\62\206\169\50");
obf_cached_str[2405] = LUAOBFUSACTOR_DECRYPT_STR_0("\213\253\227\25\238\242\225\234\42\239\242\252\222\25\242\233", "\128\157\136\142\120");
obf_cached_str[2399] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\102\41\140\210\124\45\137\238\124\43\153\236\114\54\153", "\237\188\19\68");
obf_cached_str[2390] = LUAOBFUSACTOR_DECRYPT_STR_0("\169\72\86\19\143\82\82\22\179\82\84\6\177\92\73\6", "\114\225\61\59");
obf_cached_str[2384] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\64\143\190", "\153\235\33\226\219\220\174");
obf_cached_str[2383] = LUAOBFUSACTOR_DECRYPT_STR_0("\139\64\8\124\213", "\32\233\47\124\92\230");
obf_cached_str[2381] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\64\71\25\162", "\147\68\47\51\57");
obf_cached_str[2378] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\6\195\81", "\64\199\103\183\57");
obf_cached_str[2377] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\124\86\6\168\24\197", "\24\58\16\55\127\205\106\182");
obf_cached_str[2375] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\160\112\200", "\173\25\193\29");
obf_cached_str[2367] = LUAOBFUSACTOR_DECRYPT_STR_0("\247\32\170\188", "\29\179\73\199\217");
obf_cached_str[2365] = LUAOBFUSACTOR_DECRYPT_STR_0("\234\122\235\208", "\43\172\27\143\181\18");
obf_cached_str[2361] = LUAOBFUSACTOR_DECRYPT_STR_0("\108\212\141\188", "\170\42\181\233\217\183\97");
obf_cached_str[2359] = LUAOBFUSACTOR_DECRYPT_STR_0("\3\227\211\250\88\53", "\61\65\150\191\150");
obf_cached_str[2355] = LUAOBFUSACTOR_DECRYPT_STR_0("\85\42\160\82\220\40", "\178\23\95\204\62\185\92\35");
obf_cached_str[2353] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\191\60", "\18\133\222\91\143\99\162");
obf_cached_str[2349] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\8\64", "\106\61\105\39");
obf_cached_str[2347] = LUAOBFUSACTOR_DECRYPT_STR_0("\127\112\162", "\158\59\31\214\18\198\89");
obf_cached_str[2343] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\143\251", "\146\76\224\143\157\40\220");
obf_cached_str[2341] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\201\242\161", "\211\187\160\132\196");
obf_cached_str[2337] = LUAOBFUSACTOR_DECRYPT_STR_0("\163\208\101\210", "\70\231\185\19\183\194");
obf_cached_str[2335] = LUAOBFUSACTOR_DECRYPT_STR_0("\142\51\233\219", "\190\202\90\132");
obf_cached_str[2329] = LUAOBFUSACTOR_DECRYPT_STR_0("\213\212\177\208\145\51\233\179\244\244\177\208\174\52\250\163", "\198\128\167\212\162\216\93\153");
obf_cached_str[2327] = LUAOBFUSACTOR_DECRYPT_STR_0("\205\63\53\93", "\127\170\94\88\56");
obf_cached_str[2321] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\83\79\114", "\54\226\50\59\26\179\155\61");
obf_cached_str[2319] = LUAOBFUSACTOR_DECRYPT_STR_0("\60\164\230\88", "\229\81\197\146\48\210\227\139");
obf_cached_str[2309] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\163\202\248", "\114\215\202\188\157");
obf_cached_str[2308] = LUAOBFUSACTOR_DECRYPT_STR_0("\231\135\84\114\133\203\237\207", "\142\164\232\57\23\231\170");
obf_cached_str[2306] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\242\49\84", "\174\194\155\92\49\102\204");
obf_cached_str[2305] = LUAOBFUSACTOR_DECRYPT_STR_0("\129\86\10\66\160\88\4\76", "\39\194\57\103");
obf_cached_str[2303] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\19\9\70", "\35\205\122\100");
obf_cached_str[2302] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\30\181\129\243", "\159\94\106\220\237");
obf_cached_str[2300] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\170\174", "\96\92\197\218\205\97\232");
obf_cached_str[2299] = LUAOBFUSACTOR_DECRYPT_STR_0("\33\238\32\72\206", "\217\114\154\73\36\162");
obf_cached_str[2297] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\69\116\169", "\71\124\44\25\204\229");
obf_cached_str[2296] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\53\245\185", "\66\101\90\134\205\211\138\154");
obf_cached_str[2294] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\122\81\34", "\71\147\19\39");
obf_cached_str[2293] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\201\240\217", "\131\27\166\131\173\141\186");
obf_cached_str[2291] = LUAOBFUSACTOR_DECRYPT_STR_0("\221\197\50\187", "\125\153\172\95\222");
obf_cached_str[2290] = LUAOBFUSACTOR_DECRYPT_STR_0("\240\2\50\80\139\196\30\52", "\226\163\118\64\49");
obf_cached_str[2288] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\113\166\225", "\56\186\24\208\132\122\153\114");
obf_cached_str[2287] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\69\152\91\139\227\89\158", "\226\132\49\234\58");
obf_cached_str[2285] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\35\102\84", "\49\146\74\16");
obf_cached_str[2284] = LUAOBFUSACTOR_DECRYPT_STR_0("\12\89\126\240\23", "\99\95\53\31\158");
obf_cached_str[2282] = LUAOBFUSACTOR_DECRYPT_STR_0("\82\39\201\6\87\23", "\180\16\82\165\106\50\99");
obf_cached_str[2281] = LUAOBFUSACTOR_DECRYPT_STR_0("\221\68\116\137\250", "\231\142\40\21");
obf_cached_str[2279] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\46\165\175", "\202\52\71\200");
obf_cached_str[2278] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\233\165\51\17", "\214\140\134\209\19\34\175");
obf_cached_str[2276] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\117\197\88\33", "\232\126\26\177\120\16\169\163");
obf_cached_str[2272] = LUAOBFUSACTOR_DECRYPT_STR_0("\61\205\40\124", "\172\80\172\92\20");
obf_cached_str[2271] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\164\228\239\166\169\233\248\182\147\237\224\188\166\225\248\170\156\201\244\186\182", "\140\211\197\136");
obf_cached_str[2269] = LUAOBFUSACTOR_DECRYPT_STR_0("\234\254\161\173", "\215\135\159\213\197\92");
obf_cached_str[2267] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\214\66\45", "\146\99\183\54\69\98\210");
obf_cached_str[2265] = LUAOBFUSACTOR_DECRYPT_STR_0("\65\77\159\162", "\116\44\44\235\202\87\232");
obf_cached_str[2262] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\171\92\153", "\237\100\196\47");
obf_cached_str[2261] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\92\15\137\58", "\86\173\40\102\229");
obf_cached_str[2260] = LUAOBFUSACTOR_DECRYPT_STR_0("\237\58\53\198\0\61\84\197", "\55\174\85\88\163\98\92");
obf_cached_str[2258] = LUAOBFUSACTOR_DECRYPT_STR_0("\94\85\246\7", "\34\51\52\130\111");
obf_cached_str[2251] = LUAOBFUSACTOR_DECRYPT_STR_0("\155\247\191\187", "\110\211\146\222\223\59\200");
obf_cached_str[2249] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\162\156\171\9", "\145\152\205\232\139\58");
obf_cached_str[2246] = LUAOBFUSACTOR_DECRYPT_STR_0("\20\180\46\151\243", "\211\118\219\90\183\194");
obf_cached_str[2239] = LUAOBFUSACTOR_DECRYPT_STR_0("\232\61\71\241\210\46\93\228", "\144\187\73\53");
obf_cached_str[2232] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\203\199\171\94\229\241\39", "\152\67\190\170\202\48\138");
obf_cached_str[2228] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\196\46\123\190\84\30\189", "\217\66\177\67\26\208\59\119");
obf_cached_str[2224] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\250\90\88\62\77\248\171\12\224\88\77\0\67\227\187", "\207\94\143\55\57\80\34\145");
obf_cached_str[2220] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\173\59\195\232\183\63\198\212\183\57\214\214\185\36\214", "\162\134\216\86");
obf_cached_str[2215] = LUAOBFUSACTOR_DECRYPT_STR_0("\47\83\182\83\70\242\169\239", "\139\103\38\219\50\40\157\192");
obf_cached_str[2208] = LUAOBFUSACTOR_DECRYPT_STR_0("\115\82\14\198\212\182\166\95\117\12\200\206\137\174\73\83", "\207\59\39\99\167\186\217");
obf_cached_str[2205] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\168\114\219\239\4\164\116", "\141\101\199\31\190");
obf_cached_str[2204] = LUAOBFUSACTOR_DECRYPT_STR_0("\77\216\66\140\114", "\224\30\172\43");
obf_cached_str[2203] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\89\61\23\247", "\121\131\53\92");
obf_cached_str[2202] = LUAOBFUSACTOR_DECRYPT_STR_0("\185\124\243\81", "\163\233\19\128\37\70\232\142");
obf_cached_str[2201] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\32\242\193\244\179\60\244", "\157\212\84\128\160");
obf_cached_str[2198] = LUAOBFUSACTOR_DECRYPT_STR_0("\161\126\26\91\98", "\170\195\17\110\123\81\227");
obf_cached_str[2195] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\81\167\254\147", "\222\162\62\211");
obf_cached_str[2191] = LUAOBFUSACTOR_DECRYPT_STR_0("\252\228\104\3", "\107\145\133\28");
obf_cached_str[2189] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\115\250\89", "\49\104\18\142");
obf_cached_str[2148] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\84\83\40\76\243\72\90", "\34\156\33\62\73");
obf_cached_str[2145] = LUAOBFUSACTOR_DECRYPT_STR_0("\82\123\152\65\106", "\209\48\20\236\97\89\37");
obf_cached_str[2142] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\192\253\254\82", "\99\144\175\137\222");
obf_cached_str[2139] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\61\105\97\137", "\234\27\82\29\65\186\72");
obf_cached_str[2137] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\39\233\117\173", "\85\156\72\157");
obf_cached_str[2134] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\42\41\84\234\228\54\32\103\235\228\43\20\84\246\255", "\132\139\95\68\53");
obf_cached_str[2131] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\56\93\15\25\34\89\10\37\34\95\26\39\44\66\26", "\110\119\77\48");
obf_cached_str[2125] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\47\76\249\226", "\142\144\95\47");
obf_cached_str[2121] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\235\171\207\40\194\247\162\252\41\194\234\150\207\52\217", "\70\173\158\198\174");
obf_cached_str[2107] = LUAOBFUSACTOR_DECRYPT_STR_0("\12\15\65\246\253\14\3\24\5", "\98\123\96\51\157\142\126");
obf_cached_str[2105] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\82\69\168", "\116\127\51\49\192");
obf_cached_str[2101] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\58\132\51\206\39\145\52\243\26\132\51\241\32\130\36", "\65\135\73\225");
obf_cached_str[2099] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\20\199\165", "\119\108\117\170\192\74\144\158");
obf_cached_str[2098] = LUAOBFUSACTOR_DECRYPT_STR_0("\194\23\204\113\3\233\244\27\219", "\153\149\120\190\26\112");
obf_cached_str[2096] = LUAOBFUSACTOR_DECRYPT_STR_0("\188\34\18\123", "\26\219\67\127\30\197\83");
obf_cached_str[2095] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\175\133\190\160\189\161\140\182\172\135", "\237\197\201\227");
obf_cached_str[2094] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\67\142\28\153\94\155\27\164\99\142\28\166\89\136\11", "\110\208\48\235");
obf_cached_str[2092] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\21\188\120", "\207\65\116\209\29\226\204");
obf_cached_str[2090] = LUAOBFUSACTOR_DECRYPT_STR_0("\3\57\159\76\8\186\49\3\17", "\96\116\86\237\39\123\202\80");
obf_cached_str[2088] = LUAOBFUSACTOR_DECRYPT_STR_0("\204\9\38\193\4\5\49\224\46\36\207\30\58\57\246\8", "\88\132\124\75\160\106\106");
obf_cached_str[2080] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\34\198\73\47\74\61", "\74\56\78\167\48");
obf_cached_str[2078] = LUAOBFUSACTOR_DECRYPT_STR_0("\31\180\232\185", "\220\120\213\133");
obf_cached_str[2075] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\43\175\19\50\52\188\27\36", "\120\65\68\221");
obf_cached_str[2072] = LUAOBFUSACTOR_DECRYPT_STR_0("\204\96\235\24\55\132\233\102\250\57\27\152\239\122\237\15", "\234\153\19\142\106\126");
obf_cached_str[2070] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\9\0\45", "\160\86\104\109\72\64\77");
obf_cached_str[2067] = LUAOBFUSACTOR_DECRYPT_STR_0("\70\217\195\90\163\122\79\102\222\245\77\152\98\86\112\207", "\63\19\170\166\40\234\20");
obf_cached_str[2065] = LUAOBFUSACTOR_DECRYPT_STR_0("\162\139\221\26", "\177\197\234\176\127\107");
obf_cached_str[2056] = LUAOBFUSACTOR_DECRYPT_STR_0("\171\137\177\163\74\58\189\133\166", "\74\220\230\195\200\57");
obf_cached_str[2053] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\51\17\160\217\32\176\14\33\22\166\208\4\135\21\38", "\230\103\82\99\199\188\84");
obf_cached_str[2048] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\210\6\227", "\128\194\179\116\151\22");
obf_cached_str[2031] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\90\192\30\99\35\108\18\35\122\192\30\92\36\127\2", "\103\87\41\165\108\42\77\28");
obf_cached_str[2029] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\238\188\37", "\64\152\143\209");
obf_cached_str[2027] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\169\243\77\174\31\231\31\163", "\134\124\198\129\38\221\111");
obf_cached_str[2026] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\241\22\250\77\128\68\162\235\22", "\41\199\133\98\155\46\232");
obf_cached_str[2023] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\84\33\195\147\26\90\48\205", "\224\106\59\83\168");
obf_cached_str[2022] = LUAOBFUSACTOR_DECRYPT_STR_0("\32\207\96\183\163\9\214\113\184\180", "\192\97\187\20\214");
obf_cached_str[2019] = LUAOBFUSACTOR_DECRYPT_STR_0("\98\31\47\224\41\101\17\62\238", "\90\21\112\93\139");
obf_cached_str[2018] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\213\175\3", "\110\70\176\206");
obf_cached_str[2012] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\129\255\246\159\167\199\231", "\130\237\200\172");
obf_cached_str[2001] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\9", "\171\42\122\114\113");
obf_cached_str[1987] = LUAOBFUSACTOR_DECRYPT_STR_0("\234\244\96\53\49\230\248\102\36\32\255", "\88\139\157\18\65");
obf_cached_str[1976] = LUAOBFUSACTOR_DECRYPT_STR_0("\161\52\210\170\137\48\197", "\222\224\93\160");
obf_cached_str[1961] = LUAOBFUSACTOR_DECRYPT_STR_0("\40\212\25\69\48\208\3\84\16", "\49\124\177\97");
obf_cached_str[1952] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\91\130\183\131\118\172\160\140\102", "\197\226\18\197");
obf_cached_str[1949] = LUAOBFUSACTOR_DECRYPT_STR_0("\30\172\138\57\171\234\46\151", "\132\75\229\201\86\217");
obf_cached_str[1936] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\5\196\15\192", "\165\235\81\173\98");
obf_cached_str[1930] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\120\119\230\184\173\41\84", "\194\66\49\36\146\202");
obf_cached_str[1919] = LUAOBFUSACTOR_DECRYPT_STR_0("\87\37", "\140\25\74\192\135\110\90\106");
obf_cached_str[1904] = LUAOBFUSACTOR_DECRYPT_STR_0("\232\13\92\232\87\101\213", "\29\161\99\40\188\50");
obf_cached_str[1893] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\195\198\70\248\206\215\83\254\204\208\79\239", "\35\138\173\178");
obf_cached_str[1878] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\215\38\56\251\141\81\215\50", "\236\51\178\94\76\183");
obf_cached_str[1869] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\115\91\204\134\183\196\130\171\78", "\231\197\58\28\190\231\211\173");
obf_cached_str[1866] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\250\219\169\214\227\143\89", "\234\43\179\152\198\164\141");
obf_cached_str[1853] = LUAOBFUSACTOR_DECRYPT_STR_0("\98\134\37\7\60\170\202\99\95\137\51\14\43", "\19\43\232\81\98\78\201\175");
obf_cached_str[1847] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\110\15\32\48\221\73\19", "\34\118\39\92\84\66\178");
obf_cached_str[1836] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\75\172", "\200\110\46\223\81");
obf_cached_str[1822] = LUAOBFUSACTOR_DECRYPT_STR_0("\161\239\188\206\190\59\186\165\150", "\221\226\142\200\173\214\111\223");
obf_cached_str[1811] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\202\228\249\161\202\242\246\172", "\154\201\171\144");
obf_cached_str[1796] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\77\188\101\117\181\93\77\168", "\212\63\40\196\17\57");
obf_cached_str[1787] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\138\46\197\31\40\170\12\217\10", "\126\76\195\105\183");
obf_cached_str[1784] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\196\100\205\254\229\56\255", "\139\93\141\39\162\140");
obf_cached_str[1771] = LUAOBFUSACTOR_DECRYPT_STR_0("\252\51\255\60\43\222\48\231\58", "\67\191\82\139\95");
obf_cached_str[1765] = LUAOBFUSACTOR_DECRYPT_STR_0("\191\103\230\217\152\65\222\200", "\173\234\46\181");
obf_cached_str[1754] = LUAOBFUSACTOR_DECRYPT_STR_0("\92\141\82\28", "\172\24\228\63\121\229\100");
obf_cached_str[1740] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\202\1\142\5\192\29\159", "\235\81\165\101");
obf_cached_str[1729] = LUAOBFUSACTOR_DECRYPT_STR_0("\141\114\26\204", "\169\192\29\126");
obf_cached_str[1714] = LUAOBFUSACTOR_DECRYPT_STR_0("\60\239\234\75\128\49\135\128\4", "\229\104\138\146\63\204\80\229");
obf_cached_str[1705] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\162\131\83\45\143\173\68\34\159", "\33\76\235\196");
obf_cached_str[1702] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\88\37\227\201\127\3\254", "\140\187\17\102");
obf_cached_str[1689] = LUAOBFUSACTOR_DECRYPT_STR_0("\87\213\88\168", "\217\26\186\60\205\31\176\72");
obf_cached_str[1683] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\80\205\62\102\80\114\251", "\20\63\25\158\74");
obf_cached_str[1672] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\67\112\106\83\227\199\100\119\96", "\162\131\49\51\37\23");
obf_cached_str[1658] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\70\212\143\238\83\246\132\249", "\232\139\39\166");
obf_cached_str[1647] = LUAOBFUSACTOR_DECRYPT_STR_0("\180\92\221\18\133\73", "\117\224\61\175");
obf_cached_str[1632] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\203\106\82\160\44\204\119\74", "\236\77\174\18\38");
obf_cached_str[1623] = LUAOBFUSACTOR_DECRYPT_STR_0("\176\215\151\77\73\5\123\4\139\234", "\97\229\158\208\63\40\97\18");
obf_cached_str[1620] = LUAOBFUSACTOR_DECRYPT_STR_0("\247\147\53\54\58\174\11\73", "\59\162\218\118\89\72\192\110");
obf_cached_str[1607] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\83\92\89\32\105", "\198\42\50\46\62\69\29\237");
obf_cached_str[1601] = LUAOBFUSACTOR_DECRYPT_STR_0("\71\58\101\30\231\32\121\22", "\79\18\115\54\106\149");
obf_cached_str[1590] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\64", "\53\166\112\206\56\29\153");
obf_cached_str[1576] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\189\39\93\203\25\167\61", "\185\87\210\80\56");
obf_cached_str[1565] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\86\246\209\61", "\79\51\57\129\180");
obf_cached_str[1551] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\10\227\176\83\49\13\254\168", "\31\80\111\155\196");
obf_cached_str[1542] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\237\232\93\85\72\63\65\254\208", "\36\144\164\175\47\52\44\86");
obf_cached_str[1539] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\45\118\206\61\69\1\71", "\79\43\100\53\161");
obf_cached_str[1526] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\85\4\236", "\65\42\58\115\141\202\27");
obf_cached_str[1515] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\147", "\130\207\166\52\86\143");
obf_cached_str[1501] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\239\130\224\32\16\218\121", "\20\203\129\229\140\69\94\175");
obf_cached_str[1490] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\76\30\254\182", "\87\127\34\121\146\211\129\87");
obf_cached_str[1476] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\68\32\91\211\81\67\61\67", "\159\48\33\88\47");
obf_cached_str[1467] = LUAOBFUSACTOR_DECRYPT_STR_0("\185\198\115\96\252\42\167\65\130\251", "\36\236\143\52\18\157\78\206");
obf_cached_str[1461] = LUAOBFUSACTOR_DECRYPT_STR_0("\129\1\127\31\1\187\35\73", "\115\212\72\44\107");
obf_cached_str[1458] = LUAOBFUSACTOR_DECRYPT_STR_0("\142\45\56\194\169\10\30\223", "\173\219\100\123");
obf_cached_str[1445] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\20\246\14\229", "\164\180\122\145\98\128\233\126");
obf_cached_str[1442] = LUAOBFUSACTOR_DECRYPT_STR_0("\172\174\17\242", "\151\203\207\124");
obf_cached_str[1440] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\238\146\39\137\80\86\103\2", "\18\107\141\224\66\236\62\17");
obf_cached_str[1438] = LUAOBFUSACTOR_DECRYPT_STR_0("\241\130\119\158\214\164\79\143", "\234\164\203\36");
obf_cached_str[1436] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\133\189\80\208\41\142\133\169", "\72\236\224\197\36\156");
obf_cached_str[1434] = LUAOBFUSACTOR_DECRYPT_STR_0("\61\74\94\48\208\28\178\67\5", "\38\105\47\38\68\156\125\208");
obf_cached_str[1432] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\152\154\154\30\183\232\180\179\156", "\211\129\209\221\232\127");
obf_cached_str[1430] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\130\157\51\217\163\94\98", "\16\237\203\222\92\171\205\59");
obf_cached_str[1428] = LUAOBFUSACTOR_DECRYPT_STR_0("\93\82\178\253\61", "\88\27\32\211\144");
obf_cached_str[1426] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\109\208\153\244\169\5\235", "\110\142\36\131\237\134\198");
obf_cached_str[1424] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\200\153\204\7\173\65\200\141", "\204\35\173\225\184\75");
obf_cached_str[1422] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\200\153\248\99\81\207\132\224", "\47\48\173\225\140");
obf_cached_str[1420] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\38\249\182\240\1\6\219\170\229", "\145\101\111\190\196");
obf_cached_str[1418] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\159\225\91\24\184\199\70", "\52\106\214\162");
obf_cached_str[1416] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\29\13\171\246", "\147\117\111\108\198\147\136");
obf_cached_str[1414] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\200\96\47\18\67\234\86", "\96\44\129\51\91");
obf_cached_str[1412] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\33\55\12\55\92\242\180\72", "\209\36\68\79\120\123\61\144");
obf_cached_str[1410] = LUAOBFUSACTOR_DECRYPT_STR_0("\188\10\154\234\235\137\13\135\242", "\167\232\111\226\158");
obf_cached_str[1408] = LUAOBFUSACTOR_DECRYPT_STR_0("\241\168\20\167\221\135\208\126\202\149", "\27\164\225\83\213\188\227\185");
obf_cached_str[1406] = LUAOBFUSACTOR_DECRYPT_STR_0("\180\10\84\42\147\45\114\55", "\69\225\67\23");
obf_cached_str[1404] = LUAOBFUSACTOR_DECRYPT_STR_0("\136\193\20\36\5", "\96\206\179\117\73");
obf_cached_str[1402] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\39\47\77\185\1\23\92", "\57\203\110\124");
obf_cached_str[1400] = LUAOBFUSACTOR_DECRYPT_STR_0("\252\18\30\166\6\26\62\227\196", "\134\168\119\102\210\74\123\92");
obf_cached_str[1398] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\241\56\164\170\12\61\204\167", "\169\203\148\64\208\230\109\95");
obf_cached_str[1396] = LUAOBFUSACTOR_DECRYPT_STR_0("\36\6\63\36\62\21\38\29\56\43", "\95\113\79\120\86");
obf_cached_str[1394] = LUAOBFUSACTOR_DECRYPT_STR_0("\246\159\24\236\50\205\179\41", "\64\163\214\91\131");
obf_cached_str[1392] = LUAOBFUSACTOR_DECRYPT_STR_0("\193\241\214\216\7", "\130\135\131\183\181\98\42");
obf_cached_str[1390] = LUAOBFUSACTOR_DECRYPT_STR_0("\243\10\255\41\161\13\205\38", "\98\166\67\172\93\211");
obf_cached_str[1388] = LUAOBFUSACTOR_DECRYPT_STR_0("\47\112\207\84\164\210\25\112\219", "\179\123\21\183\32\232");
obf_cached_str[1386] = LUAOBFUSACTOR_DECRYPT_STR_0("\150\187\56\187\142\191\34\170\174", "\207\194\222\64");
obf_cached_str[1384] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\243\33\183\45\253\213\212\243\206", "\177\157\186\102\197\76\153\188");
obf_cached_str[1382] = LUAOBFUSACTOR_DECRYPT_STR_0("\12\211\164\143\147\1\60\232", "\111\89\154\231\224\225");
obf_cached_str[1380] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\22\50\73\12", "\46\236\100\83\36\105\134");
obf_cached_str[1378] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\133\135\158\105\193\195\41", "\168\76\204\212\234\27\174");
obf_cached_str[1376] = LUAOBFUSACTOR_DECRYPT_STR_0("\115\177\35\66\135\82\30\61\75", "\88\39\212\91\54\203\51\124");
obf_cached_str[1374] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\194\81\13\250\64\21\194\69", "\33\119\167\41\121\182");
obf_cached_str[1372] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\55\222\14\6\254\80\59\16\237", "\57\94\126\153\124\103\154");
obf_cached_str[1370] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\222\131\17\217\249\165\12", "\126\171\151\192");
obf_cached_str[1368] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\232\125\14\31", "\172\112\154\28\99\122\153");
obf_cached_str[1366] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\247\109\97\129\122\236\196\254", "\142\161\146\21\21\205\27");
obf_cached_str[1364] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\68\242\31\12\190\58\229\77", "\88\128\33\138\107\64\223");
obf_cached_str[1362] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\148\17\199\255\180\180\51\219\234", "\158\208\221\86\181");
obf_cached_str[1360] = LUAOBFUSACTOR_DECRYPT_STR_0("\142\100\138\78\239\180\70\188", "\157\219\45\217\58");
obf_cached_str[1358] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\210\145\183\104\74\73\248", "\44\138\155\210\216\26\36");
obf_cached_str[1356] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\182\1\67\126", "\27\78\196\96\46");
obf_cached_str[1354] = LUAOBFUSACTOR_DECRYPT_STR_0("\196\162\102\254\242\175\83\238\254", "\155\151\193\20");
obf_cached_str[1352] = LUAOBFUSACTOR_DECRYPT_STR_0("\114\0\165\45\235\117\18\178\62\236\69\18", "\133\38\119\192\72");
obf_cached_str[1348] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\201\74\60\55\3", "\102\52\143\56\93\90");
obf_cached_str[1338] = LUAOBFUSACTOR_DECRYPT_STR_0("\145\248\172\129\131\248\173\144", "\228\211\153\223");
obf_cached_str[1336] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\88\122\205\65\86\121\213", "\185\35\55\21");
obf_cached_str[1332] = LUAOBFUSACTOR_DECRYPT_STR_0("\166\170\94\44", "\68\203\203\42");
obf_cached_str[1331] = LUAOBFUSACTOR_DECRYPT_STR_0("\92\216\31\143\235\77\208\12\132\247", "\131\31\185\107\236");
obf_cached_str[1323] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\184\174\121\147\137\224\243", "\157\195\215\221\16\231\224\143");
obf_cached_str[1318] = LUAOBFUSACTOR_DECRYPT_STR_0("\246\73\45\174\236\241\91\58\189\235\193\91", "\130\162\62\72\203");
obf_cached_str[1309] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\81\212\233\32\41\186\44", "\200\88\48\167\140\112\72");
obf_cached_str[1307] = LUAOBFUSACTOR_DECRYPT_STR_0("\50\72\30\75\22\70\29\83", "\63\116\39\113");
obf_cached_str[1303] = LUAOBFUSACTOR_DECRYPT_STR_0("\249\12\24\72", "\30\148\109\108\32\235");
obf_cached_str[1302] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\7\89\178\196\195\15\74\185\216", "\172\145\102\45\209");
obf_cached_str[1292] = LUAOBFUSACTOR_DECRYPT_STR_0("\161\234\186\240\4\0\139\236\166\231", "\82\226\139\206\147\108");
obf_cached_str[1289] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\72\9\84\19\187\50\114\13\93", "\21\101\41\125\55\123\233\91");
obf_cached_str[1286] = LUAOBFUSACTOR_DECRYPT_STR_0("\95\79\226\227\14\117\18\123\70\226", "\123\28\46\150\128\102\39");
obf_cached_str[1283] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\242\146\134\91\150\178\35\251\146", "\219\68\147\230\229\51\196");
obf_cached_str[1279] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\175\218\34", "\136\136\206\174\74\54");
obf_cached_str[1273] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\234\106\40\149\133\49\93", "\67\41\139\25\77\197\228");
obf_cached_str[1271] = LUAOBFUSACTOR_DECRYPT_STR_0("\36\25\3\98\49\3\26\0", "\83\98\118\108\22");
obf_cached_str[1267] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\18\89\250", "\38\105\115\45\146\210");
obf_cached_str[1266] = LUAOBFUSACTOR_DECRYPT_STR_0("\218\42\61\118\241\25\32\114\241\63", "\21\153\75\73");
obf_cached_str[1256] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\10\164\211\57\25\27\12\184\196", "\75\114\107\208\176\81");
obf_cached_str[1253] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\166\222\211\18\149\195\215\18\179", "\176\122\199\170");
obf_cached_str[1250] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\187\82\189\40\199\179\65\182\52", "\64\149\218\38\222");
obf_cached_str[1247] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\76\162\116\139\27\86\52\68\89", "\83\44\45\214\23\227\73\63");
obf_cached_str[1243] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\91\96\57", "\81\190\58\20");
obf_cached_str[1237] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\62\92\37\43\34\210\50", "\160\70\95\47\64\123\67");
obf_cached_str[1235] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\49\38\232\205\218\50\37", "\175\187\94\73\156");
obf_cached_str[1231] = LUAOBFUSACTOR_DECRYPT_STR_0("\71\94\194\245", "\157\42\63\182");
obf_cached_str[1230] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\224\240\42\242\223\43\183\233\240", "\66\208\129\132\73\154\141");
obf_cached_str[1224] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\133\84\132\117\38\74\144", "\71\56\228\39\225\37");
obf_cached_str[1222] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\57\200\7\39\119\58\203", "\69\22\86\167\115");
obf_cached_str[1198] = LUAOBFUSACTOR_DECRYPT_STR_0("\241\224\14\225\166\184", "\95\185\137\122\131\201\192");
obf_cached_str[1196] = LUAOBFUSACTOR_DECRYPT_STR_0("\217\134\66\95", "\115\137\231\48\43\184\104");
obf_cached_str[1183] = LUAOBFUSACTOR_DECRYPT_STR_0("\194\251\89\234\21\20\243\241\79", "\115\129\148\54\134\53");
obf_cached_str[1172] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\218\69\228\184\203", "\134\215\179\49");
obf_cached_str[1169] = LUAOBFUSACTOR_DECRYPT_STR_0("\94\124\207\45\148\65\122\124\76", "\31\41\19\189\70\231\49\27");
obf_cached_str[1166] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\115\218\179\120\118", "\198\25\26\169");
obf_cached_str[1164] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\21\251\221", "\169\72\116\137");
obf_cached_str[1160] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\26\229\203\40\172", "\79\201\127\132\190");
obf_cached_str[1157] = LUAOBFUSACTOR_DECRYPT_STR_0("\58\188\190\36\96", "\53\118\217\217\77\20");
obf_cached_str[1154] = LUAOBFUSACTOR_DECRYPT_STR_0("\163\136\89\182\95\143\144", "\62\225\228\56\194");
obf_cached_str[1151] = LUAOBFUSACTOR_DECRYPT_STR_0("\8\126\173\146\54\122\184", "\231\90\27\202");
obf_cached_str[1141] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\18\181\117\238\248\1\178", "\190\153\115\198\16");
obf_cached_str[1139] = LUAOBFUSACTOR_DECRYPT_STR_0("\59\182\248\24\57\28\181\251", "\91\125\217\151\108");
obf_cached_str[1134] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\233\107\64\113\113\247\254\110\64\96\76\248\244\95\64", "\30\153\154\56\37\18");
obf_cached_str[1133] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\2\46\180\201\68\119\188\178\20\15\131\203\69\126\189", "\216\228\113\125\209\170\43\25");
obf_cached_str[1132] = LUAOBFUSACTOR_DECRYPT_STR_0("\179\242\238\73\236\250\161\28\136\228\207\126\238\251\168\29", "\120\222\129\189\44\143\149\207");
obf_cached_str[1128] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\131\44\57\206\177\227\150", "\208\145\226\95\92\158");
obf_cached_str[1126] = LUAOBFUSACTOR_DECRYPT_STR_0("\0\78\163\175\251\51\29\42", "\113\70\33\204\219\153\82");
obf_cached_str[1121] = LUAOBFUSACTOR_DECRYPT_STR_0("\141\207\208\3\61\190\216", "\81\223\170\183\118");
obf_cached_str[1119] = LUAOBFUSACTOR_DECRYPT_STR_0("\175\217\90\21\200\72", "\157\227\188\59\96\175\45\73");
obf_cached_str[1117] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\198\124\165\43\143\169", "\192\218\170\29\209\74\225\221");
obf_cached_str[1115] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\81\251\194\191", "\171\203\52\156");
obf_cached_str[1113] = LUAOBFUSACTOR_DECRYPT_STR_0("\241\220\226\22\112\37\235", "\112\163\185\133\99\28\68\153");
obf_cached_str[1111] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\125\205\206\213\209", "\180\75\24\172\187\178");
obf_cached_str[1109] = LUAOBFUSACTOR_DECRYPT_STR_0("\109\246\31\35\78\244\10", "\87\47\154\126");
obf_cached_str[1107] = LUAOBFUSACTOR_DECRYPT_STR_0("\31\48\16\172\39", "\197\83\85\119");
obf_cached_str[1105] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\78\114\177\64\13\48", "\53\229\43\21\196\44\108\66");
obf_cached_str[1103] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\41\245\82\219\245", "\188\144\76\148\39");
obf_cached_str[1101] = LUAOBFUSACTOR_DECRYPT_STR_0("\108\161\179\66\241\5\170", "\63\46\205\210\54\144\107\222");
obf_cached_str[1099] = LUAOBFUSACTOR_DECRYPT_STR_0("\218\44\196\143\77", "\91\150\73\163\230\57\114");
obf_cached_str[1098] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\250\94\208\21\185\235", "\97\208\136\39\160");
obf_cached_str[1096] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\139\14\176\232", "\224\94\228\106\213\144\225\84");
obf_cached_str[1094] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\79\56\139\85\133", "\228\161\32\74\234\39");
obf_cached_str[1092] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\39\212\46", "\38\126\78\186\74");
obf_cached_str[1090] = LUAOBFUSACTOR_DECRYPT_STR_0("\78\231\115\6\111\233", "\103\29\136\31");
obf_cached_str[1085] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\181\1\81\134\79\74\244\48\14", "\59\57\212\102\63\227");
obf_cached_str[1083] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\70\51\89\33\28\181\69", "\125\217\41\92\45\67");
obf_cached_str[1081] = LUAOBFUSACTOR_DECRYPT_STR_0("\175\55\77\114\212\233\27\153", "\105\237\86\62\23\132\136");
obf_cached_str[1077] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\122\26\29\167\238\228\124\6\10", "\188\141\27\110\126\207");
obf_cached_str[1068] = LUAOBFUSACTOR_DECRYPT_STR_0("\39\58\118\186\77\164", "\193\115\85\17\221\33");
obf_cached_str[1067] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\226\91\65\40\112\73\228\78\74\41", "\29\32\144\58\47\91");
obf_cached_str[1066] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\216\43\46", "\90\59\185\89");
obf_cached_str[1065] = LUAOBFUSACTOR_DECRYPT_STR_0("\86\2\93\178\188\194\119\19\98\188\189\217\78\22\66\167", "\173\30\119\48\211\210");
obf_cached_str[1061] = LUAOBFUSACTOR_DECRYPT_STR_0("\39\116\198\201\223\238\13\114\218\222", "\188\100\21\178\170\183");
obf_cached_str[1057] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\202\37\176\205\249\56\180\205\223", "\211\165\171\81");
obf_cached_str[1043] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\91\11\21\229\186\23", "\100\165\55\106\108\128\200");
obf_cached_str[1040] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\30\31\44\227\23\181", "\90\91\112\116\66\140\96\219");
obf_cached_str[1038] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\186\255\210\33\27\186", "\78\108\212\148\188");
obf_cached_str[1030] = LUAOBFUSACTOR_DECRYPT_STR_0("\178\244\139\180\51\205", "\221\232\189\229\208\86\181\215");
obf_cached_str[1029] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\223\76\13\223\237\191\119\166\213\110\0\194\250\128", "\30\220\176\62\105\186\159\236");
obf_cached_str[1028] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\120\199\95\41\250\103\218", "\122\147\29\191\43");
obf_cached_str[1027] = LUAOBFUSACTOR_DECRYPT_STR_0("\204\238\56\52\246\50\165\249\244\34\24\219\43\190\255", "\209\141\155\76\91\180\71");
obf_cached_str[1025] = LUAOBFUSACTOR_DECRYPT_STR_0("\217\187\247\71\252\168\251\89\245\190\215\67\247\181\230\31", "\44\155\218\148");
obf_cached_str[1023] = LUAOBFUSACTOR_DECRYPT_STR_0("\102\11\213\188\25\219\192\93\28\158", "\172\50\110\173\200\90\180");
obf_cached_str[1022] = LUAOBFUSACTOR_DECRYPT_STR_0("\236\81\17\92\241\83\198\68\200\81\13", "\52\184\52\105\40\166\33\167");
obf_cached_str[1019] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\183\252\53\206\45\190\237\38\249\1\183\234\53", "\151\108\210\132\65");
obf_cached_str[1016] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\124\38\220\207\50\199\112\57\198\250\22\197\109", "\115\171\25\94\168\151");
obf_cached_str[1013] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\55\35\167\185\26\36\199\33\4\161\174\30", "\80\174\66\87\200\212\123");
obf_cached_str[1012] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\125\182\205", "\228\227\24\206\185\94\42\79");
obf_cached_str[1009] = LUAOBFUSACTOR_DECRYPT_STR_0("\162\237\9\110", "\109\228\130\103\26\59\143\151");
obf_cached_str[1007] = LUAOBFUSACTOR_DECRYPT_STR_0("\12\195\0\66\117\111\29\194\10\68\110", "\29\77\173\99\42\26");
obf_cached_str[1006] = LUAOBFUSACTOR_DECRYPT_STR_0("\27\218\7\117\252\88\232\21\55\223\48\108\250\68\244\16\56\201\1\112\248\83", "\96\89\187\100\30\155\42\135");
obf_cached_str[1005] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\168\107\253\254\190", "\144\202\201\25\152");
obf_cached_str[1003] = LUAOBFUSACTOR_DECRYPT_STR_0("\66\209\45\120", "\235\17\184\87\29\29\178");
obf_cached_str[1001] = LUAOBFUSACTOR_DECRYPT_STR_0("\73\127\216\191\246\201\118\126", "\160\25\16\171\214\130");
obf_cached_str[1000] = LUAOBFUSACTOR_DECRYPT_STR_0("\218\73\71\190\30\251", "\113\149\57\51\215");
obf_cached_str[999] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\121\126\205", "\89\222\24\19\168");
obf_cached_str[998] = LUAOBFUSACTOR_DECRYPT_STR_0("\66\136\96\185\84\152\108\185\121\131", "\205\22\237\24");
obf_cached_str[997] = LUAOBFUSACTOR_DECRYPT_STR_0("\36\3\242\134\207\65\161\90\52\5\246\137\216\65", "\52\71\113\151\231\187\36\232");
obf_cached_str[990] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\30\67\59\243\211\205\30\71\59\227\218", "\163\172\108\34\85\128");
obf_cached_str[989] = LUAOBFUSACTOR_DECRYPT_STR_0("\176\193\118\251\142\228\129\218\108", "\138\228\169\31\152\229");
obf_cached_str[987] = LUAOBFUSACTOR_DECRYPT_STR_0("\164\89\125\215\214", "\40\231\54\17\184\164\23\128");
obf_cached_str[986] = LUAOBFUSACTOR_DECRYPT_STR_0("\17\204\222\79\135\255", "\139\65\173\172\42\233");
obf_cached_str[985] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\143\191\248\161\44\112\95", "\27\58\198\236\140\211\67");
obf_cached_str[984] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\41\205\112\16\62\225\127\23\47\201\127\7\62", "\17\100\91\168");
obf_cached_str[982] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\201\54\167\171\158\147\199\32\160\187\159", "\236\193\166\68\201\206");
obf_cached_str[981] = LUAOBFUSACTOR_DECRYPT_STR_0("\224\77\214\78\137\196", "\231\176\44\164\43");
obf_cached_str[980] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\88\36\68\95\17\131\144", "\230\226\17\103\43\45\127");
obf_cached_str[979] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\54\38\90\240\184\197\16\55\55\90\234\190\233", "\140\126\68\67\59\132\221");
obf_cached_str[977] = LUAOBFUSACTOR_DECRYPT_STR_0("\177\183\74\10\25\143\177\124\7\23\137\162", "\112\225\214\46\110");
obf_cached_str[975] = LUAOBFUSACTOR_DECRYPT_STR_0("\117\36\77\202\76\43\78\226\64\35\93", "\174\37\69\41");
obf_cached_str[973] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\214\13\87\45\237\122\22\216\25", "\29\66\183\105\51\68\131");
obf_cached_str[971] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\131\40\29\64\16\240\123\231\150\56\22\68", "\57\136\226\76\121\41\126\151");
obf_cached_str[970] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\227\206\28\116\71", "\26\51\130\188\121");
obf_cached_str[969] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\47\108\27\225\163\220\84\1", "\181\58\102\60\122\133\199");
obf_cached_str[968] = LUAOBFUSACTOR_DECRYPT_STR_0("\74\56\190\32\14\229\49\71\57\175\32\20\227\29", "\120\41\74\219\65\122\128");
obf_cached_str[965] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\205\197\102\126\228\198\210\96", "\49\150\162\183\18");
obf_cached_str[962] = LUAOBFUSACTOR_DECRYPT_STR_0("\152\225\181\91\10\192\175\162\197\171\70\4\205\163\171\234\179", "\206\206\132\199\47\99\163");
obf_cached_str[959] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\190\63\22\11\9\85\48\15\189\12\19\24\1\85\41\11\191\57", "\68\110\209\77\127\113\102\59");
obf_cached_str[956] = LUAOBFUSACTOR_DECRYPT_STR_0("\217\41\49\14\219\41\47\7\252\52\52\13\241", "\98\159\64\93");
obf_cached_str[955] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\0\81\197\172\218", "\194\174\97\35\160");
obf_cached_str[954] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\53\198\196\22\83\131\29\243\194\16\83", "\39\207\124\138\173\101");
obf_cached_str[953] = LUAOBFUSACTOR_DECRYPT_STR_0("\176\56\128\233\72\21\144\244\160\62\132\230\95\21", "\154\211\74\229\136\60\112\217");
obf_cached_str[952] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\5\169\248\116\31", "\103\17\76\199\156\17");
obf_cached_str[951] = LUAOBFUSACTOR_DECRYPT_STR_0("\69\76\76\54\113\73\90", "\95\19\37\63");
obf_cached_str[950] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\113\100\235\43\88\150\119\108\234\30\67\189\123\122", "\42\197\30\22\143\78");
obf_cached_str[948] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\40\165\69\21\59\169\91\28\45\133\65\30\38\180\29", "\46\114\73\198");
obf_cached_str[945] = LUAOBFUSACTOR_DECRYPT_STR_0("\20\248\57\244\29\78\214\60\238\30\242\10\74", "\162\85\141\77\155\112\47");
obf_cached_str[943] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\6\192\182\81\232\236\7\202\176\74", "\154\188\104\163\222\62");
obf_cached_str[942] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\165\247\181\131\171", "\237\223\196\133\208");
obf_cached_str[940] = LUAOBFUSACTOR_DECRYPT_STR_0("\77\50\242\31", "\122\30\91\136");
obf_cached_str[938] = LUAOBFUSACTOR_DECRYPT_STR_0("\71\202\177\160\227\180\34\248", "\150\23\165\194\201\151\221\77");
obf_cached_str[937] = LUAOBFUSACTOR_DECRYPT_STR_0("\89\101\152\32\26\125\94\122\128\45\16\97", "\19\22\21\236\73\117");
obf_cached_str[936] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\248\250\229", "\128\157\153\151");
obf_cached_str[935] = LUAOBFUSACTOR_DECRYPT_STR_0("\108\108\192\73\127", "\53\42\30\161\36\26\37");
obf_cached_str[934] = LUAOBFUSACTOR_DECRYPT_STR_0("\40\167\179\121\230\46\156\184\107\230\42\187\181\125", "\146\75\213\214\24");
obf_cached_str[932] = LUAOBFUSACTOR_DECRYPT_STR_0("\136\50\238\162\59\203\132\138\58\237\174\38", "\227\216\83\138\198\82\165");
obf_cached_str[930] = LUAOBFUSACTOR_DECRYPT_STR_0("\105\132\26\182\80\139\25\158\92\131\10", "\210\57\229\126");
obf_cached_str[929] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\130\49\244\181\65", "\170\181\227\67\145\219\53");
obf_cached_str[928] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\161\14\195\189\241\226\177\143", "\139\223\232\94\162\217\149");
obf_cached_str[927] = LUAOBFUSACTOR_DECRYPT_STR_0("\84\50\129\185\67\37\173\182\68\52\133\182\84\37", "\216\55\64\228");
obf_cached_str[926] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\218\163\95\30\64", "\208\71\147\205\59\123\56");
obf_cached_str[925] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\127\237\9\48\98\204\4\47\117\207\4\45\117\243", "\109\85\16\159");
obf_cached_str[924] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\23\80\184\243\34\92\9", "\108\125\114\40\204\160\75\38");
obf_cached_str[922] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\164\82\188\13\102\210\69\0\161\114\184\6\123\207\3", "\48\110\197\49\215\106\20\189");
obf_cached_str[920] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\52\7\56\115\62\19\35\66\98", "\76\48\81\127");
obf_cached_str[919] = LUAOBFUSACTOR_DECRYPT_STR_0("\109\92\101\86\19\101\88\73\109\71\32", "\23\57\57\29\34\68");
obf_cached_str[916] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\221\222\220\122\147\212\207\207\77\191\221\200\220", "\35\210\184\166\168");
obf_cached_str[913] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\93\95\109\99\231\84\78\126\85\203\93\73\109", "\59\166\56\39\25");
obf_cached_str[910] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\212\171\31\201\21\104\24\194\140\25\222\17", "\28\113\161\223\112\164\116");
obf_cached_str[908] = LUAOBFUSACTOR_DECRYPT_STR_0("\203\95\159\67", "\169\159\58\231\55\236\169\38");
obf_cached_str[905] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\242\198\95", "\115\85\157\168\43\80");
obf_cached_str[903] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\228\56\186\252\248\11\189\250\228\47", "\210\147\138\91");
obf_cached_str[902] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\193\37\18\26\210\41\12\19\196\18\11\28\206\53\9\28\210\35\23\30\217", "\121\125\160\70");
obf_cached_str[901] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\191\186\19\48\108", "\94\24\222\200\118");
obf_cached_str[899] = LUAOBFUSACTOR_DECRYPT_STR_0("\117\68\84\223", "\110\38\45\46\186\164\210");
obf_cached_str[897] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\81\52\161\41\87\40\166", "\200\93\62\71");
obf_cached_str[896] = LUAOBFUSACTOR_DECRYPT_STR_0("\65\141\12\27\184\46\192\210\70\141\24\10", "\182\18\232\96\126\219\90\165");
obf_cached_str[895] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\166\189\14", "\78\43\199\208\107");
obf_cached_str[894] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\189\175\165\103\50\186\178\189", "\43\83\216\215\209");
obf_cached_str[893] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\39\161\128\54\130\41\53\255\33\165\143\33\130", "\91\140\85\196\225\66\231\96");
obf_cached_str[891] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\215\235\23\76\227\11\225\220\240\12\90", "\89\128\184\153\121\41\145");
obf_cached_str[890] = LUAOBFUSACTOR_DECRYPT_STR_0("\188\255\54\243\20\40", "\33\236\158\68\150\122\92\201");
obf_cached_str[889] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\137\95\123\153\2\49\5", "\84\119\192\28\20\235\108");
obf_cached_str[888] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\53\174\14\79\36\14\165\28\79\32\41\168\10", "\59\65\71\203\111");
obf_cached_str[887] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\134\114\81\59\4", "\31\216\207\28\53\94\124");
obf_cached_str[886] = LUAOBFUSACTOR_DECRYPT_STR_0("\97\31\201\206\129\167\54\214\89\21\235\195\156\176\9", "\191\35\112\187\170\228\213\101");
obf_cached_str[884] = LUAOBFUSACTOR_DECRYPT_STR_0("\80\85\26\247\117\70\22\233\124\80\58\243\126\91\11\175", "\156\18\52\121");
obf_cached_str[881] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\156\234\135\196\201\16\128\253\187\192\210\1", "\168\100\233\158\232\169");
obf_cached_str[879] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\46\181\238\200\50\134\233\206\46\162", "\134\167\64\214");
obf_cached_str[878] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\119\202\177\31\4\121\220\180\28\34\100\200\180\11\6\119\219\191\22\21\111", "\120\118\22\169\218");
obf_cached_str[877] = LUAOBFUSACTOR_DECRYPT_STR_0("\73\123\150\200\119\110", "\173\25\26\228");
obf_cached_str[875] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\19\210\23", "\179\212\122\168\114\112");
obf_cached_str[873] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\222\171\0\27\216\183\7", "\105\111\177\216");
obf_cached_str[872] = LUAOBFUSACTOR_DECRYPT_STR_0("\69\84\54\231\95\193\115\85", "\181\22\49\90\130\60");
obf_cached_str[871] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\138\249\37", "\64\45\235\148");
obf_cached_str[870] = LUAOBFUSACTOR_DECRYPT_STR_0("\205\212\236\140\238", "\225\139\166\141");
obf_cached_str[869] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\108\209\210\0\123\253\221\7\106\213\221\23\123", "\179\116\30\180");
obf_cached_str[868] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\117\193\225\48\74", "\197\87\60\175\133\85\50");
obf_cached_str[867] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\39\101\61\198\97\255\33\109\60\243\122\212\45\123", "\19\172\72\23\89\163");
obf_cached_str[866] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\27\80\222\6\84\8\27", "\61\114\126\40\170\85");
obf_cached_str[864] = LUAOBFUSACTOR_DECRYPT_STR_0("\96\90\35\211\122\80\84\53\214\121\97\84\44\215\111\17", "\29\34\59\64\184");
obf_cached_str[862] = LUAOBFUSACTOR_DECRYPT_STR_0("\6\20\193\18\205\183\62\30\203\85", "\216\82\113\185\102\142");
obf_cached_str[861] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\124\165\186\231\4\214\192\74\124\185", "\176\58\25\221\206\176\118\183");
obf_cached_str[858] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\251\59\236\224\248\55\174\74\240\46\253\215\205", "\199\45\158\67\152\185\185\91");
obf_cached_str[855] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\20\148\107\240\96\123\46\123\31\129\122\198\85", "\71\28\113\236\31\168\33\23");
obf_cached_str[854] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\29\108\23\7\6\175\243\249\28", "\159\156\120\20\99\84\101\206");
obf_cached_str[852] = LUAOBFUSACTOR_DECRYPT_STR_0("\46\3\152\179", "\78\122\102\224\199");
obf_cached_str[849] = LUAOBFUSACTOR_DECRYPT_STR_0("\118\59\65\233", "\111\48\84\47\157\63\199");
obf_cached_str[847] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\170\124\11\57\182\79\12\63\170\107", "\99\86\196\31");
obf_cached_str[846] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\161\233\7\14\241\58\181\228\8\61\241\52\174\249\28\8\241\48\174\233\21", "\131\85\192\138\108\105");
obf_cached_str[845] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\188\170\13\229\182", "\31\99\221\216\104\139\194\16");
obf_cached_str[843] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\29\36\201", "\120\204\116\94\172\215");
obf_cached_str[841] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\227\191\133\46\13\227\162", "\90\100\140\204\236");
obf_cached_str[840] = LUAOBFUSACTOR_DECRYPT_STR_0("\81\249\13\29\186\71\98\123\223\11\25\178\77", "\21\21\139\98\109\222\40");
obf_cached_str[839] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\77\223\173", "\154\82\44\178\200\37\201");
obf_cached_str[838] = LUAOBFUSACTOR_DECRYPT_STR_0("\108\81\193\240\157\141\215\93\88", "\181\56\52\185\132\209\236");
obf_cached_str[837] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\0\11\206\193\254\6\28\29\219\212\245\44\23", "\155\79\114\110\175\181");
obf_cached_str[836] = LUAOBFUSACTOR_DECRYPT_STR_0("\131\100\86\72\95\78\60\179\178\120\84\95", "\193\215\22\55\38\44\62\93");
obf_cached_str[835] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\27\72\67\162\82\65\0\82", "\60\36\115\33\32\201");
obf_cached_str[833] = LUAOBFUSACTOR_DECRYPT_STR_0("\164\21\33\162\164", "\177\231\122\77\205\214");
obf_cached_str[832] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\73\77\231\34\7", "\76\115\40\63\130");
obf_cached_str[831] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\192\136\183\189\178\180\185", "\223\220\137\219\195\207\221");
obf_cached_str[830] = LUAOBFUSACTOR_DECRYPT_STR_0("\43\185\29\184\14\95\26\38\184\12\184\20\89\54", "\83\72\203\120\217\122\58");
obf_cached_str[828] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\162\26\122\92\191\58\117\93\164\29\103", "\20\57\205\104");
obf_cached_str[827] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\68\33\56\141\252", "\227\136\37\83\93");
obf_cached_str[826] = LUAOBFUSACTOR_DECRYPT_STR_0("\247\24\132\64\146\204\52\181", "\224\162\81\199\47");
obf_cached_str[825] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\93\87\254\14\210\102\92\236\14\214\65\81\250", "\122\183\47\50\159");
obf_cached_str[824] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\9\35\34\250\56", "\70\159\64\77");
obf_cached_str[823] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\152\169\122\33\41\211\153\178\123\32\51\203\130\175", "\92\167\237\221\21\99");
obf_cached_str[822] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\127\83\116\251\20\233\14\246\117\113\121\230\3\214", "\103\140\16\33\16\158\102\186");
obf_cached_str[820] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\61\82\80\249\3\51\68\85\250\50\51\93\84\236\66", "\158\113\92\49\59");
obf_cached_str[819] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\218\30\129\32\201\18\159\41\223\41\152\38\213\14\154\38\201\24\132\36\194", "\234\71\187\125");
obf_cached_str[818] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\14\83\199\225\237", "\162\84\111\33\162\143\153\217");
obf_cached_str[816] = LUAOBFUSACTOR_DECRYPT_STR_0("\101\57\13\167", "\178\54\80\119\194");
obf_cached_str[814] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\211\95\0\24\166\46\179", "\221\101\188\44\105\108\207\65");
obf_cached_str[813] = LUAOBFUSACTOR_DECRYPT_STR_0("\246\151\120\8\193\223\165\24", "\118\178\229\23\120\165\176\210");
obf_cached_str[812] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\246\115\32", "\109\127\151\30\69\130");
obf_cached_str[811] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\54\77\220\217\25\89\207\200\52\66", "\187\188\91\44");
obf_cached_str[810] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\7\51\73\92\122\95\192\12\1\55\70\75\122", "\174\127\117\86\40\40\31\22");
obf_cached_str[808] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\31\95\85\202\81\228\26", "\113\217\126\51\57\168\48\135");
obf_cached_str[806] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\38\247\249\193\165\54", "\203\69\86\131\144\174");
obf_cached_str[805] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\56\230\76", "\41\220\87\136");
obf_cached_str[803] = LUAOBFUSACTOR_DECRYPT_STR_0("\92\125\254\231\35\45\108", "\65\24\24\152\134\86");
obf_cached_str[802] = LUAOBFUSACTOR_DECRYPT_STR_0("\16\212\120\169\141\59\209\121", "\233\84\166\23\217");
obf_cached_str[801] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\88\13\78\221", "\91\198\49\121\34\184");
obf_cached_str[796] = LUAOBFUSACTOR_DECRYPT_STR_0("\93\75\11\58\196\35\36\119\75\11", "\80\30\36\101\84\161\64");
obf_cached_str[794] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\66\48\122\207\167\89\55\123\196", "\170\196\45\94\20");
obf_cached_str[793] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\133\52\90\38\49\244\160\133\52", "\128\201\234\90\52\67\82");
obf_cached_str[788] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\248\136\123\196\229\17\254\137\123", "\134\101\151\230\21\161");
obf_cached_str[762] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\29\172\11", "\195\178\116\214\110");
obf_cached_str[757] = LUAOBFUSACTOR_DECRYPT_STR_0("\153\151\169\5", "\99\188\185\152");
obf_cached_str[755] = LUAOBFUSACTOR_DECRYPT_STR_0("\137\135\189\69", "\76\172\169\141\35\29");
obf_cached_str[753] = LUAOBFUSACTOR_DECRYPT_STR_0("\172\245\62\211\119\186\255\34", "\26\216\154\80\166");
obf_cached_str[751] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\98\187\12", "\52\32\76\138\106\32");
obf_cached_str[749] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\231\41\247", "\79\34\201\25\145\189\94\36");
obf_cached_str[747] = LUAOBFUSACTOR_DECRYPT_STR_0("\174\181\36\16\115\175\247\76", "\62\218\218\74\101\30\205\146");
obf_cached_str[726] = LUAOBFUSACTOR_DECRYPT_STR_0("\58\77\94\72\177\11\112\77\66\189\12\81", "\212\121\34\44\38");
obf_cached_str[725] = LUAOBFUSACTOR_DECRYPT_STR_0("\149\49\146\119\75\177", "\37\197\80\224\18");
obf_cached_str[724] = LUAOBFUSACTOR_DECRYPT_STR_0("\178\25\250\164\235\83\136\149", "\237\231\80\185\203\153\61");
obf_cached_str[723] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\176\252\196\28\167\208\203\27\182\248\203\11\167", "\165\104\194\153");
obf_cached_str[722] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\162\180\132\82\173", "\213\142\235\218\224\55");
obf_cached_str[721] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\44\99\206\28\183\4\13\57\116\250\16\189\50\8", "\87\100\67\17\170\121\197");
obf_cached_str[719] = LUAOBFUSACTOR_DECRYPT_STR_0("\98\132\24\245\196\44\213\85\139\31\221\204\50\213\82\214", "\186\32\229\123\158\163\94");
obf_cached_str[718] = LUAOBFUSACTOR_DECRYPT_STR_0("\69\13\179\172\12\157", "\105\21\108\193\201\98\233");
obf_cached_str[716] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\60\87\91", "\62\205\85\45");
obf_cached_str[714] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\176\230\8\104\59\176\251", "\28\82\223\149\97");
obf_cached_str[713] = LUAOBFUSACTOR_DECRYPT_STR_0("\233\71\71\162\9\149\33\219\66\64", "\108\186\43\46\198\108\231");
obf_cached_str[712] = LUAOBFUSACTOR_DECRYPT_STR_0("\165\231\248\113", "\16\235\134\149\20");
obf_cached_str[711] = LUAOBFUSACTOR_DECRYPT_STR_0("\213\63\118\18\246", "\127\147\77\23");
obf_cached_str[710] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\1\87\237\188\77\58\92\255\188\73\29\81\233", "\200\40\115\50\140");
obf_cached_str[708] = LUAOBFUSACTOR_DECRYPT_STR_0("\113\84\81\17\194\64\105\66\27\206\71\72", "\167\50\59\35\127");
obf_cached_str[707] = LUAOBFUSACTOR_DECRYPT_STR_0("\97\64\144\118\169\69", "\199\49\33\226\19");
obf_cached_str[706] = LUAOBFUSACTOR_DECRYPT_STR_0("\191\18\165\134\152\53\131\155", "\233\234\91\230");
obf_cached_str[705] = LUAOBFUSACTOR_DECRYPT_STR_0("\203\151\188\173\43\205\172\183\191\43\201\139\186\169", "\95\168\229\217\204");
obf_cached_str[704] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\126\33\231\53\105", "\17\85\55\79\131\80");
obf_cached_str[703] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\217\4\66\71\52\120\129\29\211\38\79\90\35\71", "\232\103\182\118\38\34\70\43");
obf_cached_str[701] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\196\30\234\192\18\202\8\239\195\35\202\17\238\213\83", "\167\96\165\125\129");
obf_cached_str[699] = LUAOBFUSACTOR_DECRYPT_STR_0("\207\225\237\22\200\160\144\49\231\225\250", "\94\142\143\142\126\167\210\192");
obf_cached_str[698] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\135\11\247\164\146", "\146\202\230\121");
obf_cached_str[696] = LUAOBFUSACTOR_DECRYPT_STR_0("\97\160\8\255", "\28\50\201\114\154\128\183\138");
obf_cached_str[694] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\230\9\125\25\223\230\20", "\109\182\137\122\20");
obf_cached_str[693] = LUAOBFUSACTOR_DECRYPT_STR_0("\153\204\186\74\50\65\144\190\169\203", "\223\202\160\211\46\87\51\210");
obf_cached_str[692] = LUAOBFUSACTOR_DECRYPT_STR_0("\96\9\137\170", "\225\46\104\228\207\156");
obf_cached_str[691] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\19\221\61\212", "\167\201\97\188\80\177\225\67");
obf_cached_str[690] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\234\202\18\73\88\31\246\220\7\92\83\53\253", "\61\86\152\175\115\61");
obf_cached_str[689] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\105\29\9\127\206", "\206\134\32\115\109\26\182\133");
obf_cached_str[688] = LUAOBFUSACTOR_DECRYPT_STR_0("\227\67\4\182\227\45\242\69\12\183\214\54\217\73\26", "\95\161\44\118\210\134");
obf_cached_str[687] = LUAOBFUSACTOR_DECRYPT_STR_0("\149\249\244\194\146\245\246\211", "\182\193\156\140");
obf_cached_str[685] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\241\191\120\132\76\213\229\178\119\160\81\214\255\174\32", "\62\186\144\220\19\227");
obf_cached_str[683] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\194\249\222\52\200\237\197\5\148", "\170\119\167\129");
obf_cached_str[682] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\26\229\204\207\153\119\89\15\248\220", "\22\41\127\157\184\152\235");
obf_cached_str[679] = LUAOBFUSACTOR_DECRYPT_STR_0("\67\17\20\36\230\4\183\240\112\26\1\53\209\49", "\153\23\116\108\80\191\69\219");
obf_cached_str[676] = LUAOBFUSACTOR_DECRYPT_STR_0("\213\85\21\37\75\99\4\193\230\94\0\52\125\86", "\168\129\48\109\81\19\34\104");
obf_cached_str[675] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\67\245\200\17\69\236\208\39\66", "\188\66\38\141");
obf_cached_str[673] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\245\170\65", "\233\169\144\210\53\87");
obf_cached_str[670] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\117\170\218", "\37\150\26\196\174\228");
obf_cached_str[668] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\33\254\61\54\13\199\208\211\33\233", "\191\186\79\157\85\89\127\151");
obf_cached_str[667] = LUAOBFUSACTOR_DECRYPT_STR_0("\17\239\133\216\52\252\137\198\61\234\178\193\50\224\149\195\50\252\131\221\48\247", "\179\83\142\230");
obf_cached_str[666] = LUAOBFUSACTOR_DECRYPT_STR_0("\6\58\246\209\165\188", "\215\86\91\132\180\203\200\118");
obf_cached_str[664] = LUAOBFUSACTOR_DECRYPT_STR_0("\27\53\196\32", "\69\72\92\190");
obf_cached_str[662] = LUAOBFUSACTOR_DECRYPT_STR_0("\187\37\160\184\0\130\37\189", "\116\235\74\211\209");
obf_cached_str[661] = LUAOBFUSACTOR_DECRYPT_STR_0("\181\142\14\1\216\32\178\139\19\9\216", "\82\230\226\103\101\189");
obf_cached_str[660] = LUAOBFUSACTOR_DECRYPT_STR_0("\47\222\114\248", "\23\97\191\31\157");
obf_cached_str[659] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\49\210\230\103\202\235\241\56", "\137\148\84\170\146\43\171");
obf_cached_str[658] = LUAOBFUSACTOR_DECRYPT_STR_0("\89\227\243\40\197\177\46\0\73\229\247\39\210\177", "\110\58\145\150\73\177\212\103");
obf_cached_str[657] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\174\53\187\221\234", "\146\192\231\91\223\184");
obf_cached_str[656] = LUAOBFUSACTOR_DECRYPT_STR_0("\151\69\105\236\70\167\121\114\242\70\133\67\99\237\79", "\35\213\42\27\136");
obf_cached_str[655] = LUAOBFUSACTOR_DECRYPT_STR_0("\155\243\250\182\148\166\236\231", "\199\207\150\130\194");
obf_cached_str[653] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\188\119\174\54\50\175\168\122\161\18\47\172\178\102\246", "\64\192\221\20\197\81");
obf_cached_str[651] = LUAOBFUSACTOR_DECRYPT_STR_0("\64\25\188\147\46\123\16\171\149\94", "\109\20\124\196\231");
obf_cached_str[650] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\177\236\43\230\87\255\164\228\58\213", "\37\158\212\148\95\177");
obf_cached_str[647] = LUAOBFUSACTOR_DECRYPT_STR_0("\191\57\252\45\219\149\16\142\140\50\233\60\236\160", "\231\235\92\132\89\130\212\124");
obf_cached_str[644] = LUAOBFUSACTOR_DECRYPT_STR_0("\5\87\248\101\195\247\228\55\54\92\237\116\245\194", "\94\81\50\128\17\155\182\136");
obf_cached_str[643] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\55\88\35\76\137\5\112\55\68", "\100\28\82\32\87\31\234");
obf_cached_str[641] = LUAOBFUSACTOR_DECRYPT_STR_0("\73\198\50\85", "\95\29\163\74\33\67");
obf_cached_str[638] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\217\13\92", "\79\188\182\99\40\116\208\201");
obf_cached_str[636] = LUAOBFUSACTOR_DECRYPT_STR_0("\201\112\11\224\70\104\146\231\119\6\252", "\194\136\30\104\136\41\26");
obf_cached_str[635] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\140\130\34\7\224\130\148\39\4\198\159\128\39\19\226\140\147\44\14\241\148", "\96\146\237\225\73");
obf_cached_str[634] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\205\233\63\68\56", "\42\76\172\155\90");
obf_cached_str[632] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\73\111\52", "\229\27\32\21\81\162\217\210");
obf_cached_str[630] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\199\210\131\206\254\242\1", "\157\111\168\161\234\186\151");
obf_cached_str[629] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\176\75\57\59\174\99\48\49\169\76\41", "\93\94\220\34");
obf_cached_str[628] = LUAOBFUSACTOR_DECRYPT_STR_0("\151\227\205\202", "\219\217\130\160\175\143");
obf_cached_str[627] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\132\193\246\168\121\2", "\122\146\225\185\130\234\22");
obf_cached_str[626] = LUAOBFUSACTOR_DECRYPT_STR_0("\218\64\178\138\15\39\129\215\65\163\138\21\33\173", "\200\185\50\215\235\123\66");
obf_cached_str[625] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\196\45\37\84\208\200\211\211\34\40\94", "\169\161\182\76\75\39\160");
obf_cached_str[624] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\13\31\35\191\237\14\22\5", "\131\107\101\118\64\212");
obf_cached_str[622] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\0\30\200\91", "\185\156\111\114\167\41\226\29");
obf_cached_str[621] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\218\41\0\197\48", "\68\173\187\91\101\171");
obf_cached_str[620] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\173\198\65\94\139\254\80", "\53\44\228\149");
obf_cached_str[619] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\29\200\228\187\130\46\143\28\217\228\161\132\2", "\103\225\111\173\133\207\231");
obf_cached_str[617] = LUAOBFUSACTOR_DECRYPT_STR_0("\233\38\255\64\93\250\127\203\45\228\91\75", "\45\170\73\141\46\56\136");
obf_cached_str[616] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\222\18\160\209\203", "\197\191\191\96");
obf_cached_str[615] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\103\6\14\63\64\32\19", "\97\77\46\69");
obf_cached_str[614] = LUAOBFUSACTOR_DECRYPT_STR_0("\234\252\116\189\58\215\106\231\253\101\189\32\209\70", "\35\137\142\17\220\78\178");
obf_cached_str[613] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\108\190\78\245\53\55\109\165\79\244\47\47\118\184", "\64\67\25\202\33\183");
obf_cached_str[612] = LUAOBFUSACTOR_DECRYPT_STR_0("\247\235\167\95\179\174", "\214\173\162\201\59\214");
obf_cached_str[611] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\202\246\243\25\240\146\32\223\225\199\21\250\164\37", "\193\73\165\132\151\124\130");
obf_cached_str[609] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\0\130\201\208\19\142\215\217\5\162\205\219\14\147\145", "\162\183\97\225");
obf_cached_str[608] = LUAOBFUSACTOR_DECRYPT_STR_0("\86\210\246\167\166\102\220\224\162\165\64\193\244\162\178\100\210\231\169\175\119\202", "\193\20\179\149\204");
obf_cached_str[607] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\193\95\84\134\74", "\232\62\160\45\49");
obf_cached_str[605] = LUAOBFUSACTOR_DECRYPT_STR_0("\120\247\91\131", "\189\43\158\33\230\222\32\119");
obf_cached_str[603] = LUAOBFUSACTOR_DECRYPT_STR_0("\194\218\240\69\40\251\218\237", "\92\146\181\131\44");
obf_cached_str[602] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\230\125\127\212\167", "\132\167\138\20\27\177\213\220");
obf_cached_str[601] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\50\182\86", "\165\200\83\219\51");
obf_cached_str[600] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\121\73\57\116\220\197\237\96\71\48", "\176\153\20\40\94\17\158");
obf_cached_str[599] = LUAOBFUSACTOR_DECRYPT_STR_0("\93\201\9\196\191\91\242\2\214\191\95\213\15\192", "\203\62\187\108\165");
obf_cached_str[598] = LUAOBFUSACTOR_DECRYPT_STR_0("\156\184\0\72\186\180\26\79\176\185\29", "\38\223\215\110");
obf_cached_str[596] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\33\60\26\165\14\58\43", "\111\89\64\80\118\199");
obf_cached_str[594] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\193\209", "\182\145\160\169");
obf_cached_str[592] = LUAOBFUSACTOR_DECRYPT_STR_0("\175\22\221", "\158\226\127\179\236\215");
obf_cached_str[590] = LUAOBFUSACTOR_DECRYPT_STR_0("\224\22\31\40\211", "\93\182\119\115");
obf_cached_str[588] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\37\83\136\40\39\192", "\180\122\64\53\233\93\75");
obf_cached_str[587] = LUAOBFUSACTOR_DECRYPT_STR_0("\240\221\9\122\198\195", "\30\163\177\96");
obf_cached_str[586] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\132\144\27\249", "\119\156\237\228");
obf_cached_str[577] = LUAOBFUSACTOR_DECRYPT_STR_0("\235\135\27\195\206\148\23\221\199\130\59\199\197\137\10\155", "\168\169\230\120");
obf_cached_str[570] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\185\240\120\93\231\242\173\253\119\121\250\241\183\225\32", "\149\157\216\147\19\58");
obf_cached_str[563] = LUAOBFUSACTOR_DECRYPT_STR_0("\212\18\187\25\240\20\167\30", "\112\132\125\200");
obf_cached_str[556] = LUAOBFUSACTOR_DECRYPT_STR_0("\217\68\207\138\105\49\29\231", "\114\137\43\188\227\29\88");
obf_cached_str[549] = LUAOBFUSACTOR_DECRYPT_STR_0("\102\215\91\120\171\86\217\77\125\168\103\217\84\124\190\23", "\204\36\182\56\19");
obf_cached_str[542] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\179\38\57\189\88\29\0\188\33\17\181\70\29\7\225", "\114\117\210\69\82\218\42");
obf_cached_str[529] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\71\34\251\136\89\74\212\76\65\37\230", "\181\40\40\80\149\237\43\24");
obf_cached_str[528] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\215\60\167\42\176", "\101\100\182\78\194\68\196");
obf_cached_str[527] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\137\111\94\185\64\38\178", "\46\67\192\44\49\203");
obf_cached_str[526] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\226\234\204\170\229\18\53\227\251\204\176\227\62", "\91\91\144\143\173\222\128");
obf_cached_str[525] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\169\65\63\170\227", "\147\102\200\51\90\196\151\233");
obf_cached_str[524] = LUAOBFUSACTOR_DECRYPT_STR_0("\134\76\47\205\183\31\150\29\179\86\48", "\124\199\63\95\168\212\107\196");
obf_cached_str[523] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\39\109\76\225\168\44\26\126\94\229\164\32\45\67\81\226\185\61\15\69\81\229", "\205\79\110\44\63\145");
obf_cached_str[522] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\254\143\202\211\21\122\197\57\248\139\197\196\21", "\171\74\140\234\171\167\112\51");
obf_cached_str[521] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\217\19\80\44\168", "\73\208\144\125\52");
obf_cached_str[520] = LUAOBFUSACTOR_DECRYPT_STR_0("\201\34\111\70\238\63\78\75\241\40\77\75\243\40\113", "\34\139\77\29");
obf_cached_str[518] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\11\244\139\209\225\65\249\4\243\163\217\255\65\254\89", "\46\140\106\151\224\182\147");
obf_cached_str[516] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\73\76\251\119\78\55\72\70\253\108", "\60\103\39\47\147\24");
obf_cached_str[515] = LUAOBFUSACTOR_DECRYPT_STR_0("\135\14\162\17\66\9", "\125\215\111\208\116\44");
obf_cached_str[513] = LUAOBFUSACTOR_DECRYPT_STR_0("\149\56\10\33", "\68\198\81\112");
obf_cached_str[511] = LUAOBFUSACTOR_DECRYPT_STR_0("\224\39\74\123\250\217\39\87", "\142\176\72\57\18");
obf_cached_str[510] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\204\41\238\207\147\113", "\140\144\162\70");
obf_cached_str[509] = LUAOBFUSACTOR_DECRYPT_STR_0("\118\217\24\9", "\95\56\184\117\108\142");
obf_cached_str[508] = LUAOBFUSACTOR_DECRYPT_STR_0("\10\169\164\59\30", "\123\76\219\197\86");
obf_cached_str[507] = LUAOBFUSACTOR_DECRYPT_STR_0("\43\42\31\74\153\60\1\54\9\95\140\55\43\61", "\89\72\88\122\43\237");
obf_cached_str[505] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\135\155\218\5\225\186\136\208\9\230\155", "\96\147\232\233\180");
obf_cached_str[504] = LUAOBFUSACTOR_DECRYPT_STR_0("\61\244\145\91\3\225", "\62\109\149\227");
obf_cached_str[503] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\195\147\213\229\199\163\17", "\198\99\138\208\186\151\169");
obf_cached_str[502] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\205\220\33\249\218\240\46\254\203\216\46\238\218", "\64\141\191\185");
obf_cached_str[501] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\236\23\238\243\189", "\197\53\165\121\138\150");
obf_cached_str[500] = LUAOBFUSACTOR_DECRYPT_STR_0("\139\137\2\179\80\57\239\249\179\131\32\190\77\46\208", "\144\201\230\112\215\53\75\188");
obf_cached_str[498] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\129\116\184\32\89\120\167\142\115\144\40\71\120\160\211", "\23\210\224\23\211\71\43");
obf_cached_str[496] = LUAOBFUSACTOR_DECRYPT_STR_0("\213\120\222\57\63\214\244\251\127\211\37", "\164\148\22\189\81\80\164");
obf_cached_str[495] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\128\25\133\0\149", "\224\110\225\107");
obf_cached_str[493] = LUAOBFUSACTOR_DECRYPT_STR_0("\0\165\90\35", "\70\83\204\32");
obf_cached_str[491] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\164\245\226\234\228\250\203", "\149\165\203\134\139\158\141");
obf_cached_str[490] = LUAOBFUSACTOR_DECRYPT_STR_0("\69\145\242\73\22\8\35\39\211", "\124\22\230\155\61\117\96");
obf_cached_str[489] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\168\165\206", "\116\196\201\200\171\42\19\181");
obf_cached_str[488] = LUAOBFUSACTOR_DECRYPT_STR_0("\234\9\199\85\229", "\34\172\123\166\56\128\196");
obf_cached_str[487] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\26\225\185\172\49\37\6\247\172\185\58\15\13", "\84\108\104\132\216\216");
obf_cached_str[486] = LUAOBFUSACTOR_DECRYPT_STR_0("\32\38\161\30\65\2", "\36\122\111\207\122");
obf_cached_str[485] = LUAOBFUSACTOR_DECRYPT_STR_0("\39\228\254\160\79\173\228\176\31\238\220\173\82\186\219", "\217\101\139\140\196\42\223\183");
obf_cached_str[484] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\81\0\150\176\93\2\135", "\226\227\52\120");
obf_cached_str[482] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\251\66\79\135\178\245\84\74\132\131\245\77\75\146\243", "\224\192\154\33\36");
obf_cached_str[480] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\131\215\102\46\248\138\192\96\94", "\109\151\230\175\18");
obf_cached_str[479] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\218\238\244\216\155\50\207\230\229\235", "\233\83\191\150\128\143");
obf_cached_str[476] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\241\158\168\10\8\248\143\187\61\36\241\136\168", "\83\73\148\230\220");
obf_cached_str[473] = LUAOBFUSACTOR_DECRYPT_STR_0("\121\181\226\210\60\222\169\68\183\244\203\1\241\177", "\197\45\208\154\166\100\159");
obf_cached_str[472] = LUAOBFUSACTOR_DECRYPT_STR_0("\231\196\90\169\128\22\210\205\71\185", "\117\179\161\34\221\211");
obf_cached_str[470] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\213\43\16", "\100\134\176\83");
obf_cached_str[467] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\213\82\190", "\145\145\186\60\202");
obf_cached_str[465] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\213\49\112\203\201\2\119\205\213\38", "\24\164\187\82");
obf_cached_str[464] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\52\162\12\226\60\91\11\28\49\149\21\228\32\71\14\19\39\164\9\230\55", "\126\114\85\193\103\133\78\52");
obf_cached_str[463] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\218\93\227\84\57", "\58\77\187\47\134");
obf_cached_str[461] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\39\228\247", "\146\56\78\158");
obf_cached_str[459] = LUAOBFUSACTOR_DECRYPT_STR_0("\193\1\235\173\229\7\247\170", "\196\145\110\152");
obf_cached_str[458] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\112\140\95\64\4\75\130\76\64\4\64\218\12", "\44\97\31\235\56");
obf_cached_str[457] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\2\123\40", "\167\179\99\22\77\60\161\207");
obf_cached_str[456] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\166\72\197\236\202\161\85\221", "\160\171\195\48\177");
obf_cached_str[455] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\29\201\193\251\135\204\69\28\216\193\225\129\224", "\133\43\111\172\160\143\226");
obf_cached_str[454] = LUAOBFUSACTOR_DECRYPT_STR_0("\1\3\33\183\38\1\33\171\48\31\35\160", "\217\85\113\64");
obf_cached_str[453] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\94\84\24\170\240\83\78\8", "\193\158\54\61\123");
obf_cached_str[451] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\46\126\175\103", "\21\185\65\18\192");
obf_cached_str[450] = LUAOBFUSACTOR_DECRYPT_STR_0("\128\169\216\79\61\217", "\214\208\200\170\42\83\173");
obf_cached_str[449] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\234\101\49\73\204\93\32", "\69\59\163\54");
obf_cached_str[448] = LUAOBFUSACTOR_DECRYPT_STR_0("\123\28\193\192\230\187\85\118\29\208\192\252\189\121", "\28\24\110\164\161\146\222");
obf_cached_str[446] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\1\99\133\22\212\187\15\117\130\6\213", "\166\233\110\17\235\115");
obf_cached_str[445] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\183\200\253\5\22", "\95\174\214\186\152\107\98");
obf_cached_str[444] = LUAOBFUSACTOR_DECRYPT_STR_0("\52\51\220\48\75\242\4\8", "\156\97\122\159\95\57");
obf_cached_str[443] = LUAOBFUSACTOR_DECRYPT_STR_0("\86\181\28\251\224\90\49\0\70\179\24\244\247\90", "\110\53\199\121\154\148\63\120");
obf_cached_str[442] = LUAOBFUSACTOR_DECRYPT_STR_0("\92\174\242\113\95\174\242\106\114\181\197\113\113\180\244", "\30\29\219\134");
obf_cached_str[441] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\48\117\55\47\37", "\74\93\121\27\83");
obf_cached_str[440] = LUAOBFUSACTOR_DECRYPT_STR_0("\222\165\24\74\210\24\207\163\16\75\231\3\228\175\6", "\106\156\202\106\46\183");
obf_cached_str[438] = LUAOBFUSACTOR_DECRYPT_STR_0("\170\238\41\79\161\207\135\250\36\64\133\210\132\224\56\23", "\189\232\143\74\36\198");
obf_cached_str[437] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\52\114\30\29\39\126\0\20\49\69\7\27\59\98\5\27\39\116\27\25\44", "\117\122\85\17");
obf_cached_str[436] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\86\196\81\222\186", "\92\178\55\182\52\176\206");
obf_cached_str[434] = LUAOBFUSACTOR_DECRYPT_STR_0("\138\29\104\78", "\28\217\116\18\43");
obf_cached_str[432] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\235\9\77\24\72\79\234", "\33\32\132\122\36\108");
obf_cached_str[431] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\253\244\178\203\197", "\160\174\146\147\213\167");
obf_cached_str[430] = LUAOBFUSACTOR_DECRYPT_STR_0("\39\4\18\51", "\150\105\101\127\86\47\200");
obf_cached_str[429] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\192\186\184\253\137\80\173\217\180\177", "\37\217\173\219\223\152\203");
obf_cached_str[428] = LUAOBFUSACTOR_DECRYPT_STR_0("\83\46\92\251\36\168\238\245\67\40\88\244\51\168", "\155\48\92\57\154\80\205\167");
obf_cached_str[426] = LUAOBFUSACTOR_DECRYPT_STR_0("\62\23\3\166\112\28\21\4", "\18\125\118\111\202");
obf_cached_str[424] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\37\195\122\234\68\89", "\45\177\64\165\27\159\40");
obf_cached_str[422] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\83\247\4\243", "\219\29\50\155\113\150\230\92");
obf_cached_str[421] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\140\242\2\92\52", "\81\199\227\149\101\48");
obf_cached_str[420] = LUAOBFUSACTOR_DECRYPT_STR_0("\77\9\11\241\124", "\157\25\96\127");
obf_cached_str[410] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\40\46\5\235\245\135\79\42\61\81", "\232\35\69\79\98\142\182");
obf_cached_str[403] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\76\186\59\101\41\166\241\169\26", "\158\219\41\194\79\38\70\202");
obf_cached_str[397] = LUAOBFUSACTOR_DECRYPT_STR_0("\219\196\227\128\254\215\239\158\247\193\212\153\248\203\243\155\248\215\229\133\250\220", "\235\153\165\128");
obf_cached_str[387] = LUAOBFUSACTOR_DECRYPT_STR_0("\24\189\118\241\52\147\120\250\62\162\36", "\150\81\208\23");
obf_cached_str[380] = LUAOBFUSACTOR_DECRYPT_STR_0("\147\19\249\210\218\2\171\25\243\149", "\109\199\118\129\166\153");
obf_cached_str[374] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\181\22\36\33\166\26\58\40\176\33\61\39\186\6\63\39\166\16\33\37\173", "\79\70\212\117");
obf_cached_str[363] = LUAOBFUSACTOR_DECRYPT_STR_0("\114\145\200\163\93\80", "\56\40\216\166\199");
obf_cached_str[362] = LUAOBFUSACTOR_DECRYPT_STR_0("\87\227\165\191\112\254\132\178\111\233\135\178\109\233\187", "\219\21\140\215");
obf_cached_str[361] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\180\190\103\254\117\171\163", "\173\28\209\198\19");
obf_cached_str[359] = LUAOBFUSACTOR_DECRYPT_STR_0("\153\2\237\242\18\211\180\22\224\253\54\206\183\12\252\170", "\161\219\99\142\153\117");
obf_cached_str[357] = LUAOBFUSACTOR_DECRYPT_STR_0("\122\5\64\41\45\140\165\65\18\11", "\201\46\96\56\93\110\227");
obf_cached_str[356] = LUAOBFUSACTOR_DECRYPT_STR_0("\43\15\217\207\235\53\170", "\123\125\102\170\166\137\89\207");
obf_cached_str[355] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\176\14\73\26\91\139\229\71\176\18", "\149\55\213\118\61\77\41\234");
obf_cached_str[354] = LUAOBFUSACTOR_DECRYPT_STR_0("\99\124\204\252\35\84\109\219", "\119\49\21\175\148");
obf_cached_str[351] = LUAOBFUSACTOR_DECRYPT_STR_0("\231\192\7\225\6\248\223\204\24\251\50\220\221\209", "\185\179\165\127\149\95");
obf_cached_str[348] = LUAOBFUSACTOR_DECRYPT_STR_0("\79\203\1\47\98\110\206\114\201\23\54\95\65\214", "\162\27\174\121\91\58\47");
obf_cached_str[347] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\250\78\182\152\204\254\90\167\175", "\203\175\159\54\194");
obf_cached_str[344] = LUAOBFUSACTOR_DECRYPT_STR_0("\32\72\106\81", "\37\116\45\18");
obf_cached_str[341] = LUAOBFUSACTOR_DECRYPT_STR_0("\83\34\182\149", "\41\21\77\216\225");
obf_cached_str[340] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\194\88\48\61\230\117\231\66\199\111\41\59\250\105\226\77\209\94\53\57\237", "\146\44\163\59\91\90\148\26");
obf_cached_str[339] = LUAOBFUSACTOR_DECRYPT_STR_0("\187\186\40\53\4\62", "\74\235\219\90\80\106");
obf_cached_str[337] = LUAOBFUSACTOR_DECRYPT_STR_0("\180\232\6\74", "\170\231\129\124\47\181\210\201");
obf_cached_str[335] = LUAOBFUSACTOR_DECRYPT_STR_0("\217\13\46\185\47\195\21\231", "\122\137\98\93\208\91\170");
obf_cached_str[334] = LUAOBFUSACTOR_DECRYPT_STR_0("\246\24\72\62", "\220\166\121\60\86\171\103");
obf_cached_str[333] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\62\83\200", "\173\74\95\62");
obf_cached_str[332] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\53\155\5\124\166\47\53\143", "\199\77\80\227\113\48");
obf_cached_str[331] = LUAOBFUSACTOR_DECRYPT_STR_0("\178\182\226\187\193\215\137\252\162\176\230\180\214\215", "\146\209\196\135\218\181\178\192");
obf_cached_str[329] = LUAOBFUSACTOR_DECRYPT_STR_0("\58\140\192\93\169\115\13\185\203\73", "\29\106\237\164\57\192");
obf_cached_str[328] = LUAOBFUSACTOR_DECRYPT_STR_0("\16\190\53\206\70\189", "\73\64\223\71\171\40\201\64");
obf_cached_str[327] = LUAOBFUSACTOR_DECRYPT_STR_0("\232\148\222\215\39\75\212\179\233", "\47\189\221\142\182\67");
obf_cached_str[326] = LUAOBFUSACTOR_DECRYPT_STR_0("\64\11\37\20\87\28\9\27\80\13\33\27\64\28", "\117\35\121\64");
obf_cached_str[323] = LUAOBFUSACTOR_DECRYPT_STR_0("\252\89\22\229\87\244\11\202\68", "\111\175\54\100\145\24\134");
obf_cached_str[320] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\203\180\149\89\209\0\194\135\141\89\213\15\195\163\143\68", "\178\97\174\198\225\48");
obf_cached_str[317] = LUAOBFUSACTOR_DECRYPT_STR_0("\113\188\152\115\178\190\87\167\139\118\137\189\80\180\132\119\173\191\77", "\209\57\211\234\26\200");
obf_cached_str[314] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\33\11\252\217\208\58\2\243\233\208\39\9", "\157\185\72\103\144");
obf_cached_str[312] = LUAOBFUSACTOR_DECRYPT_STR_0("\178\222\216\39\137\170\165", "\76\226\191\188\67\224\196\194");
obf_cached_str[311] = LUAOBFUSACTOR_DECRYPT_STR_0("\148\57\94\15\170\48", "\48\196\88\44\106\196\68\181");
obf_cached_str[310] = LUAOBFUSACTOR_DECRYPT_STR_0("\3\37\91\54\18\24\228\34\47\3\98\43", "\67\86\108\23\95\97\108\168");
obf_cached_str[309] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\24\73\229\33\31\128\232\25\88\229\59\25\172", "\201\134\106\44\132\85\122");
obf_cached_str[308] = LUAOBFUSACTOR_DECRYPT_STR_0("\189\254\22\227\130\207", "\135\231\183\120");
obf_cached_str[307] = LUAOBFUSACTOR_DECRYPT_STR_0("\47\83\26\69\95\179\99\214\23\89\56\72\66\164\92", "\191\109\60\104\33\58\193\48");
obf_cached_str[304] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\64\17\179\184\125\65\92\6\159\180\114\67\84\22\143\188\102\80", "\28\53\53\101\220\213");
obf_cached_str[302] = LUAOBFUSACTOR_DECRYPT_STR_0("\98\68\175\61\90\219\32\88\78\65\143\57\81\198\61\30", "\45\32\37\204\86\61\169\79");
obf_cached_str[301] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\194\52\181\165\127\249", "\62\30\171\71\220\199\19\156");
obf_cached_str[300] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\58\176\30\225\192\77\37\186\11\252\224\73\56\173\29", "\132\40\86\217\110\146");
obf_cached_str[299] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\193\23\255\214\117\166\195\23\196\210\112\135\201\11\245\201\106", "\25\228\162\101\144\186");
obf_cached_str[298] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\197\193\30\215\214\205\0\222\192\246\7\209\202\209\5\209\214\199\27\211\221", "\117\176\164\162");
obf_cached_str[297] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\9\84\36\221\174", "\176\128\104\38\65\179\218\181");
obf_cached_str[295] = LUAOBFUSACTOR_DECRYPT_STR_0("\195\37\5\233", "\91\144\76\127\140");
obf_cached_str[293] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\95\97\41\219\198\113\43", "\30\69\48\18\64\175\175");
obf_cached_str[292] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\51\166\55\37\33", "\65\68\82\200");
obf_cached_str[291] = LUAOBFUSACTOR_DECRYPT_STR_0("\166\214\23\165", "\159\232\183\122\192\179");
obf_cached_str[290] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\59\94\64\56\115\208\39\63\106\93\53\114\220", "\185\73\88\44\47\84\31");
obf_cached_str[289] = LUAOBFUSACTOR_DECRYPT_STR_0("\196\24\224\183\211\15\204\184\212\30\228\184\196\15", "\214\167\106\133");
obf_cached_str[288] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\14\11\84\27\59", "\81\168\111\121\49\117\79\56");
obf_cached_str[287] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\195\50\4\122\15\235\209\54\8\118", "\123\185\176\66\97\25");
obf_cached_str[286] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\173\155\80\243\28\135\174\113\226\13\141\181\96\236\23\151\174\81\226\16\138\174", "\131\121\228\218\35");
obf_cached_str[285] = LUAOBFUSACTOR_DECRYPT_STR_0("\189\226\30\0\67\117\22\176\227\15\0\89\115\58", "\95\222\144\123\97\55\16");
obf_cached_str[284] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\63\205\181\189\154", "\216\226\118\163\209");
obf_cached_str[283] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\225\22\187\198\252\55\182\217\235\52\182\219\235\8", "\223\163\142\100");
obf_cached_str[281] = LUAOBFUSACTOR_DECRYPT_STR_0("\141\16\55\51\18", "\201\196\125\86\84\119\30");
obf_cached_str[279] = LUAOBFUSACTOR_DECRYPT_STR_0("\106\70\62\58\43\14\136\236\76\89\108", "\128\35\43\95\93\78\77\231");
obf_cached_str[277] = LUAOBFUSACTOR_DECRYPT_STR_0("\49\62\160\11\73\221\49\6\49\167\35\65\195\49\1\108", "\94\115\95\195\96\46\175");
obf_cached_str[276] = LUAOBFUSACTOR_DECRYPT_STR_0("\120\1\232\92\242\245\223\33\84\4\223\69\244\233\195\36\91\18\238\89\246\254", "\84\58\96\139\55\149\135\176");
obf_cached_str[275] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\66\97\228\20\234", "\225\154\35\19\129\122\158");
obf_cached_str[273] = LUAOBFUSACTOR_DECRYPT_STR_0("\107\55\56\94", "\123\56\94\66\59\175");
obf_cached_str[271] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\140\54\164\171\137\6\140", "\226\173\227\69\205\223\224\105");
obf_cached_str[270] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\222\31\254", "\169\111\189\112\144\90");
obf_cached_str[269] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\184\254\242", "\160\188\217\147\151\135\172\128");
obf_cached_str[268] = LUAOBFUSACTOR_DECRYPT_STR_0("\86\212\247\15\122\245\247\10\122\213", "\104\31\185\150");
obf_cached_str[267] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\154\55\117\227\1\161\60\103\227\5\134\49\113", "\151\100\232\82\20");
obf_cached_str[266] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\43\124\207\175\88", "\32\72\98\18\171\202");
obf_cached_str[265] = LUAOBFUSACTOR_DECRYPT_STR_0("\60\230\234\215\218\204\45\224\226\214\239\215\6\236\244", "\190\126\137\152\179\191");
obf_cached_str[264] = LUAOBFUSACTOR_DECRYPT_STR_0("\70\177\14\15\48\1\66\119", "\56\18\212\118\123\99\104");
obf_cached_str[262] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\41\232\141\63\58\228\147\54\44\200\137\52\39\249\213", "\230\88\72\139");
obf_cached_str[260] = LUAOBFUSACTOR_DECRYPT_STR_0("\46\184\32\111\21\68\40\113\8\238", "\30\122\221\88\27\86\43\68");
obf_cached_str[259] = LUAOBFUSACTOR_DECRYPT_STR_0("\58\128\163\14\72\103\64\249\30\128\191", "\137\110\229\219\122\31\21\33");
obf_cached_str[256] = LUAOBFUSACTOR_DECRYPT_STR_0("\205\85\19\24\78\98\122\240\87\5\1\114\77\98", "\22\153\48\107\108\23\35");
obf_cached_str[253] = LUAOBFUSACTOR_DECRYPT_STR_0("\194\188\200\243\123\215\181\217\224\77\251\188\222\243", "\35\150\217\176\135");
obf_cached_str[252] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\211\34\255\11\87\82\218\63\239", "\52\51\182\90\139\88");
obf_cached_str[251] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\162\112", "\38\131\195\18\198\145");
obf_cached_str[250] = LUAOBFUSACTOR_DECRYPT_STR_0("\141\236\235\210", "\166\217\137\147");
obf_cached_str[247] = LUAOBFUSACTOR_DECRYPT_STR_0("\200\224\62\219", "\210\142\143\80\175\92");
obf_cached_str[245] = LUAOBFUSACTOR_DECRYPT_STR_0("\96\60\226\219\47\221\113\61\232\221\52", "\175\33\82\129\179\64");
obf_cached_str[244] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\71\179\29\71\254\67\73\195\66\132\4\65\226\95\76\204\84\181\24\67\245", "\60\173\38\208\118\32\140\44");
obf_cached_str[243] = LUAOBFUSACTOR_DECRYPT_STR_0("\117\117\155\137\54\51", "\71\37\20\233\236\88");
obf_cached_str[241] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\193\34\143", "\212\131\168\88\234\21\26");
obf_cached_str[239] = LUAOBFUSACTOR_DECRYPT_STR_0("\130\37\234\169\226\187\37\247", "\150\210\74\153\192");
obf_cached_str[238] = LUAOBFUSACTOR_DECRYPT_STR_0("\76\210\94\220\214\101\92\241", "\148\24\179\60\136\191\17\48");
obf_cached_str[237] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\119\17\198", "\55\69\22\124\163");
obf_cached_str[236] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\64\204\9\45\185\57\64\216", "\216\91\37\180\125\97");
obf_cached_str[235] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\32\61\79\244\70\84\70\33\44\79\238\64\120", "\29\40\82\88\46\128\35");
obf_cached_str[233] = LUAOBFUSACTOR_DECRYPT_STR_0("\30\83\13\117\38\78\235\227\57\85\10\104", "\130\93\60\127\27\67\60\185");
obf_cached_str[232] = LUAOBFUSACTOR_DECRYPT_STR_0("\179\223\46\29\141\202", "\120\227\190\92");
obf_cached_str[231] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\113\143\168\187\163\209\74", "\205\180\56\204\199\201");
obf_cached_str[230] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\187\68\119\212\20\128\79\101\212\16\167\66\115", "\160\113\201\33\22");
obf_cached_str[229] = LUAOBFUSACTOR_DECRYPT_STR_0("\211\143\76\125\121\87", "\105\137\198\34\25\28\47");
obf_cached_str[228] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\75\191\51\132\18\119\164\45\132\48\77\181\50\141", "\225\96\36\205\87");
obf_cached_str[226] = LUAOBFUSACTOR_DECRYPT_STR_0("\103\61\84\93\220\168\62\80\50\83\117\212\182\62\87\111", "\81\37\92\55\54\187\218");
obf_cached_str[225] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\171\16\13\121\73\226\170\11\12\120\83\250\177\22", "\60\150\222\100\98\59");
obf_cached_str[224] = LUAOBFUSACTOR_DECRYPT_STR_0("\109\177\76\73\227\252\64\165\65\70\208\252\78\190\92\82\229\252\74\190\76\91", "\142\47\208\47\34\132");
obf_cached_str[223] = LUAOBFUSACTOR_DECRYPT_STR_0("\222\51\148\231\249\20", "\96\142\82\230\130\151");
obf_cached_str[221] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\205\247\36", "\153\118\164\141\65\20");
obf_cached_str[219] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\50\240\248\168\252\20\195", "\123\173\93\131\145\220\149");
obf_cached_str[218] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\223\247", "\231\203\190\149");
obf_cached_str[217] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\188\56\183", "\168\152\221\85\210\195");
obf_cached_str[216] = LUAOBFUSACTOR_DECRYPT_STR_0("\215\245\191\65\222\19\42\234\236\177\72", "\95\158\152\222\38\187\81");
obf_cached_str[215] = LUAOBFUSACTOR_DECRYPT_STR_0("\204\155\112\21\219\140\92\26\220\157\116\26\204\140", "\116\175\233\21");
obf_cached_str[213] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\217\178\16\138\45", "\228\73\184\192\117\228\89\148");
obf_cached_str[212] = LUAOBFUSACTOR_DECRYPT_STR_0("\3\109\32\92\33\106\2\88\54\119\63", "\57\66\30\80");
obf_cached_str[211] = LUAOBFUSACTOR_DECRYPT_STR_0("\235\146\39\251\55\206\168\95\236\186\18\225\40\232\164\69\205\175\20\233\46\197\191", "\43\190\219\102\136\71\171\203");
obf_cached_str[210] = LUAOBFUSACTOR_DECRYPT_STR_0("\133\85\48\120\167\20\175\73\38\109\178\31\133\66", "\113\230\39\85\25\211");
obf_cached_str[209] = LUAOBFUSACTOR_DECRYPT_STR_0("\112\173\164\87\78\184", "\50\32\204\214");
obf_cached_str[208] = LUAOBFUSACTOR_DECRYPT_STR_0("\216\198\227\23\255\225\197\10", "\120\141\143\160");
obf_cached_str[207] = LUAOBFUSACTOR_DECRYPT_STR_0("\132\152\201\12\34\240\151\137\153\216\12\56\246\187", "\222\231\234\172\109\86\149");
obf_cached_str[204] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\235\252\165\220\88\60\201\42", "\172\88\132\142\209\147\42\88");
obf_cached_str[201] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\47\102\242\167\219\43\120\199\162\209\45\122\235\171\214\62", "\206\184\74\20\134");
obf_cached_str[198] = LUAOBFUSACTOR_DECRYPT_STR_0("\82\130\42\85\96\130\54\72\123\129\25\80\115\138\54\81\127\131\44", "\60\26\237\88");
obf_cached_str[195] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\141\7\166\129\95\202\76\18\144\2\165\171", "\41\113\228\107\202\197\54\184");
obf_cached_str[193] = LUAOBFUSACTOR_DECRYPT_STR_0("\254\166\180\235\119\2\189", "\214\174\199\208\143\30\108\218");
obf_cached_str[192] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\6\180\170\37\56", "\211\105\103\198\207\75\76\215");
obf_cached_str[191] = LUAOBFUSACTOR_DECRYPT_STR_0("\66\33\213\47\28\109\51\118\17\246\51\27", "\127\23\104\153\70\111\25");
obf_cached_str[190] = LUAOBFUSACTOR_DECRYPT_STR_0("\20\203\30\168\70\164\62\215\8\189\83\175\20\220", "\193\119\185\123\201\50");
obf_cached_str[189] = LUAOBFUSACTOR_DECRYPT_STR_0("\132\139\224\10\187\186", "\110\222\194\142");
obf_cached_str[188] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\246\253\200\178\194\16\27\227\234\252\190\200\38\30", "\67\114\153\143\172\215\176");
obf_cached_str[187] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\61\27\35\242\49\25\50", "\87\161\88\99");
obf_cached_str[185] = LUAOBFUSACTOR_DECRYPT_STR_0("\30\206\4\198\34\28\19\41\193\3\238\42\2\19\46\156", "\124\92\175\103\173\69\110");
obf_cached_str[183] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\9\200\230\194\24\0\223\224\178", "\129\119\108\176\146");
obf_cached_str[182] = LUAOBFUSACTOR_DECRYPT_STR_0("\17\177\248\69\18\166\225\65\53\177\228", "\49\69\212\128");
obf_cached_str[181] = LUAOBFUSACTOR_DECRYPT_STR_0("\55\117\210\38\49\121\201\58", "\78\101\28\177");
obf_cached_str[178] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\209\35\234\24\197\216\50\249\47\233\209\53\234", "\65\132\180\91\158");
obf_cached_str[175] = LUAOBFUSACTOR_DECRYPT_STR_0("\46\54\187\56\186\9\190\170\29\61\174\41\140\60", "\195\122\83\195\76\226\72\210");
obf_cached_str[174] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\87\145\83\111\81\136\75\89\86", "\39\60\50\233");
obf_cached_str[172] = LUAOBFUSACTOR_DECRYPT_STR_0("\197\175\192\77", "\61\145\202\184\57\229\64\203");
obf_cached_str[169] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\44\29\56", "\58\136\67\115\76");
obf_cached_str[168] = LUAOBFUSACTOR_DECRYPT_STR_0("\154\200\191\245\48\212\37\173\199\184\202\37\199\36\171\217\189\236\50\200\41\161", "\74\216\169\220\158\87\166");
obf_cached_str[167] = LUAOBFUSACTOR_DECRYPT_STR_0("\225\43\247\28\169\197", "\199\177\74\133\121");
obf_cached_str[165] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\233\106\129", "\199\153\128\16\228");
obf_cached_str[163] = LUAOBFUSACTOR_DECRYPT_STR_0("\78\124\191\92\106\122\163\91", "\53\30\19\204");
obf_cached_str[162] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\245\246\209\178", "\91\182\156\130\189\215");
obf_cached_str[161] = LUAOBFUSACTOR_DECRYPT_STR_0("\26\253\83\186", "\223\84\156\62");
obf_cached_str[160] = LUAOBFUSACTOR_DECRYPT_STR_0("\19\140\102\66\92\209\207\184\43", "\221\71\233\30\54\16\176\173");
obf_cached_str[159] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\153\30\184\25\142\50\183\30\159\26\183\14\142", "\217\109\235\123");
obf_cached_str[158] = LUAOBFUSACTOR_DECRYPT_STR_0("\144\33\70\235\142\178", "\235\202\104\40\143");
obf_cached_str[157] = LUAOBFUSACTOR_DECRYPT_STR_0("\50\182\30\248\165\196\35\176\22\249\144\223\8\188\0", "\182\112\217\108\156\192");
obf_cached_str[155] = LUAOBFUSACTOR_DECRYPT_STR_0("\22\204\90\214\60\38\194\76\211\63\23\194\85\210\41\103", "\91\84\173\57\189");
obf_cached_str[154] = LUAOBFUSACTOR_DECRYPT_STR_0("\83\196\216\175\73\232\188\36\115\205\223\187\91\194\173\36", "\87\16\168\177\223\58\172\217");
obf_cached_str[153] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\6\145\198\58\208\105\93\23\183\193\63\223\64\82\0\144\218", "\43\60\101\227\169\86\188");
obf_cached_str[152] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\128\184\62\199\147\180\32\206\133\143\39\193\143\168\37\193\147\190\59\195\152", "\85\160\225\219");
obf_cached_str[151] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\182\146\190\2\158", "\234\182\215\224\219\108");
obf_cached_str[149] = LUAOBFUSACTOR_DECRYPT_STR_0("\245\168\194\176", "\99\166\193\184\213");
obf_cached_str[147] = LUAOBFUSACTOR_DECRYPT_STR_0("\237\58\188\194\29\244\210\59", "\157\189\85\207\171\105");
obf_cached_str[146] = LUAOBFUSACTOR_DECRYPT_STR_0("\14\170\59\82\160\19\62\174\43", "\127\90\203\89\26\207");
obf_cached_str[145] = LUAOBFUSACTOR_DECRYPT_STR_0("\54\65\50\77", "\40\120\32\95");
obf_cached_str[144] = LUAOBFUSACTOR_DECRYPT_STR_0("\74\163\167\72\80\219\17\119\167\147\85\93\218\29", "\120\25\192\213\39\60\183");
obf_cached_str[143] = LUAOBFUSACTOR_DECRYPT_STR_0("\44\245\250\166\179\176\157\33\244\235\166\169\182\177", "\212\79\135\159\199\199\213");
obf_cached_str[142] = LUAOBFUSACTOR_DECRYPT_STR_0("\16\87\203\127\0\191", "\132\74\30\165\27\101\199\122");
obf_cached_str[141] = LUAOBFUSACTOR_DECRYPT_STR_0("\53\245\50\132\215\220\36\243\58\133\226\199\15\255\44", "\174\119\154\64\224\178");
obf_cached_str[139] = LUAOBFUSACTOR_DECRYPT_STR_0("\117\121\85\201\88\1\199\66\118\82\225\80\31\199\69\43", "\168\55\24\54\162\63\115");
obf_cached_str[138] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\74\239\49\167\90", "\46\143\43\157\84\201");
obf_cached_str[136] = LUAOBFUSACTOR_DECRYPT_STR_0("\237\175\103\213", "\27\190\198\29\176\77");
obf_cached_str[134] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\4\48\89\23\2\44\94", "\48\99\107\67");
obf_cached_str[133] = LUAOBFUSACTOR_DECRYPT_STR_0("\166\236\149\58\208\30\26\211\218\210", "\104\226\133\227\83\180\123");
obf_cached_str[132] = LUAOBFUSACTOR_DECRYPT_STR_0("\29\202\251\233", "\152\83\171\150\140\41");
obf_cached_str[131] = LUAOBFUSACTOR_DECRYPT_STR_0("\148\214\255\23\188", "\63\210\164\158\122\217\150");
obf_cached_str[130] = LUAOBFUSACTOR_DECRYPT_STR_0("\193\158\245\229\157\199\165\254\247\157\195\130\243\225", "\233\162\236\144\132");
obf_cached_str[129] = LUAOBFUSACTOR_DECRYPT_STR_0("\238\244\47\61\30\204", "\123\180\189\65\89");
obf_cached_str[128] = LUAOBFUSACTOR_DECRYPT_STR_0("\104\80\3\74\220\88\108\24\84\220\122\86\9\75\213", "\185\42\63\113\46");
obf_cached_str[126] = LUAOBFUSACTOR_DECRYPT_STR_0("\220\39\135\171\117\182\241\51\138\164\81\171\242\41\150\243", "\196\158\70\228\192\18");
obf_cached_str[125] = LUAOBFUSACTOR_DECRYPT_STR_0("\98\252\255\216\121\161", "\213\50\157\141\189\23");
obf_cached_str[123] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\246\79\209", "\158\174\159\53\180\211\189");
obf_cached_str[121] = LUAOBFUSACTOR_DECRYPT_STR_0("\156\236\170\50\184\234\182\53", "\91\204\131\217");
obf_cached_str[120] = LUAOBFUSACTOR_DECRYPT_STR_0("\34\16\107\17\2\28\111\73", "\120\102\121\29");
obf_cached_str[119] = LUAOBFUSACTOR_DECRYPT_STR_0("\163\14\225\165", "\140\237\111\140\192");
obf_cached_str[118] = LUAOBFUSACTOR_DECRYPT_STR_0("\37\239\212\247\6", "\154\99\157\181");
obf_cached_str[117] = LUAOBFUSACTOR_DECRYPT_STR_0("\65\233\208\36\225\71\210\219\54\225\67\245\214\32", "\149\34\155\181\69");
obf_cached_str[116] = LUAOBFUSACTOR_DECRYPT_STR_0("\214\13\198\172\242\186", "\194\140\68\168\200\151");
obf_cached_str[115] = LUAOBFUSACTOR_DECRYPT_STR_0("\227\168\6\1\228\241\236\171\219\162\36\12\249\230\211", "\194\161\199\116\101\129\131\191");
obf_cached_str[113] = LUAOBFUSACTOR_DECRYPT_STR_0("\205\28\83\89\128\204\11\184\225\25\115\93\139\209\22\254", "\205\143\125\48\50\231\190\100");
obf_cached_str[112] = LUAOBFUSACTOR_DECRYPT_STR_0("\251\37\0\40\118\223", "\24\171\68\114\77");
obf_cached_str[110] = LUAOBFUSACTOR_DECRYPT_STR_0("\105\69\175\235", "\76\58\44\213\142\177");
obf_cached_str[108] = LUAOBFUSACTOR_DECRYPT_STR_0("\193\234\226\89\229\236\254\94", "\48\145\133\145");
obf_cached_str[107] = LUAOBFUSACTOR_DECRYPT_STR_0("\4\127\200\237", "\224\73\30\161\131\149\202");
obf_cached_str[106] = LUAOBFUSACTOR_DECRYPT_STR_0("\90\213\42\83", "\229\20\180\71\54\196\235");
obf_cached_str[105] = LUAOBFUSACTOR_DECRYPT_STR_0("\166\103\59\66\235", "\142\224\21\90\47");
obf_cached_str[104] = LUAOBFUSACTOR_DECRYPT_STR_0("\25\154\142\209\14\141\162\222\9\156\138\222\25\141", "\176\122\232\235");
obf_cached_str[103] = LUAOBFUSACTOR_DECRYPT_STR_0("\7\29\42\207\217\90\193\199\37\10", "\147\68\104\88\189\188\52\181");
obf_cached_str[94] = LUAOBFUSACTOR_DECRYPT_STR_0("\196\254\56\217\8\246\234\226\244", "\173\151\157\74\188\109\152");
obf_cached_str[51] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\205\103\33\185\8\230\59", "\85\95\162\20\72\205\97\137");
obf_cached_str[43] = LUAOBFUSACTOR_DECRYPT_STR_0("\3\59\251\5\30\40", "\108\112\79\137");
obf_cached_str[39] = LUAOBFUSACTOR_DECRYPT_STR_0("\42\241\237\164", "\171\103\144\132\202\32");
obf_cached_str[31] = LUAOBFUSACTOR_DECRYPT_STR_0("\57\21\136\32\246", "\159\127\103\233\77\147\153\175");
obf_cached_str[29] = LUAOBFUSACTOR_DECRYPT_STR_0("\100\28\207\188\30\228\83\61\220\172", "\138\39\105\189\206\123");
obf_cached_str[11] = LUAOBFUSACTOR_DECRYPT_STR_0("\71\122\38\31\238\57\214\178\125", "\199\20\25\84\122\139\87\145");
obf_cached_str[7] = LUAOBFUSACTOR_DECRYPT_STR_0("\140\125\161\23\185\99\179", "\110\220\17\192");
obf_cached_str[5] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\90\24\10\99\178\209\92\9\43\79\174\215\64\30\29", "\220\161\41\125\120\42");
obf_cached_str[3] = LUAOBFUSACTOR_DECRYPT_STR_0("\206\190\37\62\164\177\255\187\54\50\169\135", "\226\154\201\64\91\202");
obf_cached_str[1] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\75\61\122\137\93\72\58\74\137", "\236\47\62\83\41");
do
	local Ocean = {};
	local RS = game:GetService(obf_cached_str[1]);
	local TS = game:GetService(obf_cached_str[3]);
	local UIS = game:GetService(obf_cached_str[5]);
	local Mouse = game:GetService(obf_cached_str[7]).LocalPlayer:GetMouse();
	local TyrantUI = Instance.new(obf_cached_str[11], (RS:IsStudio() and game.Players.LocalPlayer.PlayerGui) or gethui());
	TyrantUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	local guiVisible = true;
	UIS.InputBegan:Connect(function(input, gameProcessed)
		local FlatIdent_820C8 = 0;
		local FlatIdent_398FF;
		while true do
			if (FlatIdent_820C8 == 0) then
				FlatIdent_398FF = 0;
				while true do
					if (FlatIdent_398FF == 0) then
						if gameProcessed then
							return;
						end
						if ((input.KeyCode == Enum.KeyCode.LeftControl) or (input.KeyCode == Enum.KeyCode.RightControl)) then
							local FlatIdent_2584C = 0;
							while true do
								if (FlatIdent_2584C == 0) then
									guiVisible = not guiVisible;
									TyrantUI.Enabled = guiVisible;
									break;
								end
							end
						end
						break;
					end
				end
				break;
			end
		end
	end);
	Ocean.NewWindow = function(self)
		local FlatIdent_757F = 0;
		local FlatIdent_4B329;
		local Window;
		local Main;
		while true do
			if (FlatIdent_757F == 0) then
				FlatIdent_4B329 = 0;
				Window = nil;
				FlatIdent_757F = 1;
			end
			if (FlatIdent_757F == 1) then
				Main = nil;
				while true do
					local FlatIdent_29130 = 0;
					while true do
						if (FlatIdent_29130 == 0) then
							if (FlatIdent_4B329 == 0) then
								local FlatIdent_4527F = 0;
								while true do
									if (1 == FlatIdent_4527F) then
										FlatIdent_4B329 = 1;
										break;
									end
									if (FlatIdent_4527F == 0) then
										Window = {[obf_cached_str[29]]=nil};
										Main = Instance.new(obf_cached_str[31], TyrantUI);
										FlatIdent_4527F = 1;
									end
								end
							end
							if (FlatIdent_4B329 == 4) then
								return Window;
							end
							FlatIdent_29130 = 1;
						end
						if (FlatIdent_29130 == 2) then
							if (FlatIdent_4B329 == 2) then
								Main.Size = UDim2.fromScale(0.35, 0.55);
								Main.BackgroundColor3 = Color3.fromRGB(9, 8, 8);
								FlatIdent_4B329 = 3;
							end
							break;
						end
						if (1 == FlatIdent_29130) then
							if (FlatIdent_4B329 == 3) then
								Main.BorderSizePixel = 0;
								Main.ZIndex = 1;
								FlatIdent_4B329 = 4;
							end
							if (FlatIdent_4B329 == 1) then
								Main.Name = obf_cached_str[39];
								Main.Position = UDim2.fromScale(0.248, 0.22);
								FlatIdent_4B329 = 2;
							end
							FlatIdent_29130 = 2;
						end
					end
				end
				break;
			end
		end
	end;
	function createInstance(className, properties)
		local FlatIdent_378D0 = 0;
		local instance;
		while true do
			local FlatIdent_6F79E = 0;
			while true do
				if (FlatIdent_6F79E == 0) then
					if (FlatIdent_378D0 == 0) then
						local FlatIdent_1D95C = 0;
						while true do
							if (FlatIdent_1D95C == 0) then
								instance = Instance.new(className);
								for k, v in pairs(properties) do
									local FlatIdent_5525C = 0;
									local FlatIdent_10BCC;
									while true do
										if (FlatIdent_5525C == 0) then
											FlatIdent_10BCC = 0;
											while true do
												if (0 == FlatIdent_10BCC) then
													if (typeof(k) ~= obf_cached_str[43]) then
														continue;
													end
													instance[k] = v;
													break;
												end
											end
											break;
										end
									end
								end
								FlatIdent_1D95C = 1;
							end
							if (FlatIdent_1D95C == 1) then
								FlatIdent_378D0 = 1;
								break;
							end
						end
					end
					if (FlatIdent_378D0 == 1) then
						return instance;
					end
					break;
				end
			end
		end
	end
	local function CreateDrag(gui)
		local FlatIdent_7E46E = 0;
		local dragging;
		local dragInput;
		local dragStart;
		local startPos;
		local update;
		local lastEnd;
		local lastMoved;
		local con;
		while true do
			if (FlatIdent_7E46E == 0) then
				local FlatIdent_50ED1 = 0;
				while true do
					if (FlatIdent_50ED1 == 0) then
						dragging = nil;
						dragInput = nil;
						FlatIdent_50ED1 = 1;
					end
					if (FlatIdent_50ED1 == 1) then
						dragStart = nil;
						FlatIdent_7E46E = 1;
						break;
					end
				end
			end
			if (1 == FlatIdent_7E46E) then
				local FlatIdent_37F61 = 0;
				while true do
					if (FlatIdent_37F61 == 1) then
						function update(input)
							local FlatIdent_47A9C = 0;
							local delta;
							while true do
								if (FlatIdent_47A9C == 0) then
									delta = input.Position - dragStart;
									TS:Create(gui, TweenInfo.new(0.16, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {[obf_cached_str[51]]=UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)}):Play();
									break;
								end
							end
						end
						FlatIdent_7E46E = 2;
						break;
					end
					if (FlatIdent_37F61 == 0) then
						startPos = nil;
						update = nil;
						FlatIdent_37F61 = 1;
					end
				end
			end
			if (FlatIdent_7E46E == 3) then
				gui.InputBegan:Connect(function(input)
					if ((input.UserInputType == Enum.UserInputType.MouseButton1) or (input.UserInputType == Enum.UserInputType.Touch)) then
						local FlatIdent_28724 = 0;
						local FlatIdent_63487;
						while true do
							if (FlatIdent_28724 == 0) then
								FlatIdent_63487 = 0;
								while true do
									if (FlatIdent_63487 == 0) then
										dragging = true;
										dragStart = input.Position;
										FlatIdent_63487 = 1;
									end
									if (FlatIdent_63487 == 1) then
										startPos = gui.Position;
										break;
									end
								end
								break;
							end
						end
					end
				end);
				UIS.InputEnded:Connect(function(input)
					if ((input.UserInputType == Enum.UserInputType.MouseButton1) or (input.UserInputType == Enum.UserInputType.Touch)) then
						dragging = false;
					end
				end);
				gui.InputChanged:Connect(function(input)
					if ((input.UserInputType == Enum.UserInputType.MouseMovement) or (input.UserInputType == Enum.UserInputType.Touch)) then
						dragInput = input;
						lastMoved = os.clock();
					end
				end);
				FlatIdent_7E46E = 4;
			end
			if (FlatIdent_7E46E == 4) then
				UIS.InputChanged:Connect(function(input)
					if ((input == dragInput) and dragging) then
						update(input);
					end
				end);
				break;
			end
			if (FlatIdent_7E46E == 2) then
				local FlatIdent_2876E = 0;
				while true do
					if (0 == FlatIdent_2876E) then
						lastEnd = 0;
						lastMoved = 0;
						FlatIdent_2876E = 1;
					end
					if (FlatIdent_2876E == 1) then
						con = nil;
						FlatIdent_7E46E = 3;
						break;
					end
				end
			end
		end
	end
	local TyrantUI = Instance.new(obf_cached_str[94], (RS:IsStudio() and game.Players.LocalPlayer.PlayerGui) or gethui());
	TyrantUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
	Ocean.NewWindow = function(self)
		local Window = {[obf_cached_str[103]]=nil};
		local Main = _G[obf_cached_str[104]](obf_cached_str[105], {[obf_cached_str[106]]=obf_cached_str[107],[obf_cached_str[108]]=UDim2.fromScale(0.248, 0.22),[obf_cached_str[110]]=UDim2.fromScale(0.35, 0.55),[obf_cached_str[112]]=TyrantUI,[obf_cached_str[113]]=Color3.fromRGB(9, 8, 8),[obf_cached_str[115]]=0,[obf_cached_str[116]]=1});
		local Divider1 = _G[obf_cached_str[117]](obf_cached_str[118], {[obf_cached_str[119]]=obf_cached_str[120],[obf_cached_str[121]]=UDim2.fromScale(0.311, 0),[obf_cached_str[123]]=UDim2.new(0, 2, 1, 0),[obf_cached_str[125]]=Main,[obf_cached_str[126]]=Color3.fromRGB(82, 81, 81),[obf_cached_str[128]]=0,[obf_cached_str[129]]=2});
		local Divider1_1 = _G[obf_cached_str[130]](obf_cached_str[131], {[obf_cached_str[132]]=obf_cached_str[133],[obf_cached_str[134]]=UDim2.fromScale(0.311, 0.13),[obf_cached_str[136]]=UDim2.new(0.689, 0, 0, 2),[obf_cached_str[138]]=Main,[obf_cached_str[139]]=Color3.fromRGB(82, 81, 81),[obf_cached_str[141]]=0,[obf_cached_str[142]]=2});
		local TabHolder = _G[obf_cached_str[143]](obf_cached_str[144], {[obf_cached_str[145]]=obf_cached_str[146],[obf_cached_str[147]]=UDim2.fromScale(0, 0.2),[obf_cached_str[149]]=UDim2.fromScale(0.311, 0.8),[obf_cached_str[151]]=Main,[obf_cached_str[152]]=1,[obf_cached_str[153]]=0,[obf_cached_str[154]]=true,[obf_cached_str[155]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[157]]=0,[obf_cached_str[158]]=3});
		local Title = _G[obf_cached_str[159]](obf_cached_str[160], {[obf_cached_str[161]]=obf_cached_str[162],[obf_cached_str[163]]=UDim2.fromScale(0.029, 0.03),[obf_cached_str[165]]=UDim2.fromScale(0.25, 0.1),[obf_cached_str[167]]=Main,[obf_cached_str[168]]=1,[obf_cached_str[169]]=Enum.Font.GothamBold,[obf_cached_str[172]]='<font color="#FFFFFF">Amiri</font>',[obf_cached_str[174]]=true,[obf_cached_str[175]]=Enum.TextXAlignment.Center,[obf_cached_str[178]]=Enum.TextYAlignment.Center,[obf_cached_str[181]]=true,[obf_cached_str[182]]=true,[obf_cached_str[183]]=Color3.fromRGB(28, 28, 28),[obf_cached_str[185]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[187]]=18,[obf_cached_str[188]]=0,[obf_cached_str[189]]=4});
		local TabLayout = _G[obf_cached_str[190]](obf_cached_str[191], {[obf_cached_str[192]]=TabHolder,[obf_cached_str[193]]=UDim.new(0, 5),[obf_cached_str[195]]=Enum.FillDirection.Vertical,[obf_cached_str[198]]=Enum.HorizontalAlignment.Center,[obf_cached_str[201]]=Enum.VerticalAlignment.Top,[obf_cached_str[204]]=Enum.SortOrder.LayoutOrder});
		local MainCorner = _G[obf_cached_str[207]](obf_cached_str[208], {[obf_cached_str[209]]=Main});
		local MainConstraint = _G[obf_cached_str[210]](obf_cached_str[211], {[obf_cached_str[212]]=1.251,[obf_cached_str[213]]=Main});
		CreateDrag(Main);
		Window.Tab = function(self, Title, ImageID)
			local tab = {};
			local Tab = _G[obf_cached_str[215]](obf_cached_str[216], {[obf_cached_str[217]]=obf_cached_str[218],[obf_cached_str[219]]=UDim2.fromScale(0, 0),[obf_cached_str[221]]=UDim2.fromScale(0.8, 0.04),[obf_cached_str[223]]=TabHolder,[obf_cached_str[224]]=1,[obf_cached_str[225]]=false,[obf_cached_str[226]]=Color3.fromRGB(0, 128, 0),[obf_cached_str[228]]=0,[obf_cached_str[229]]=1});
			local TabCorner = _G[obf_cached_str[230]](obf_cached_str[231], {[obf_cached_str[232]]=Tab,[obf_cached_str[233]]=UDim.new(0, 6)});
			local TabTitle = _G[obf_cached_str[235]](obf_cached_str[236], {[obf_cached_str[237]]=obf_cached_str[238],[obf_cached_str[239]]=UDim2.fromScale(0.3, 0.5),[obf_cached_str[241]]=UDim2.fromScale(0.7, 0.6),[obf_cached_str[243]]=Tab,[obf_cached_str[244]]=1,[obf_cached_str[245]]=Vector2.new(0, 0.5),[obf_cached_str[247]]=Enum.Font.SourceSans,[obf_cached_str[250]]=(Title or obf_cached_str[251]),[obf_cached_str[252]]=true,[obf_cached_str[253]]=Enum.TextXAlignment.Left,[obf_cached_str[256]]=Enum.TextYAlignment.Center,[obf_cached_str[259]]=true,[obf_cached_str[260]]=Color3.fromRGB(153, 153, 153),[obf_cached_str[262]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[264]]=14,[obf_cached_str[265]]=0,[obf_cached_str[266]]=1});
			local Icon = _G[obf_cached_str[267]](obf_cached_str[268], {[obf_cached_str[269]]=obf_cached_str[270],[obf_cached_str[271]]=UDim2.fromScale(0.044, 0.2),[obf_cached_str[273]]=UDim2.fromScale(0.6, 0.6),[obf_cached_str[275]]=Tab,[obf_cached_str[276]]=1,[obf_cached_str[277]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[279]]=Color3.fromRGB(153, 153, 153),[obf_cached_str[281]]=("rbxassetid://" .. ImageID),[obf_cached_str[283]]=0,[obf_cached_str[284]]=1});
			local IconConstraint = _G[obf_cached_str[285]](obf_cached_str[286], {[obf_cached_str[287]]=1,[obf_cached_str[288]]=Icon});
			local Canvas = _G[obf_cached_str[289]](obf_cached_str[290], {[obf_cached_str[291]]=obf_cached_str[292],[obf_cached_str[293]]=UDim2.fromScale(0.311, 0.15),[obf_cached_str[295]]=UDim2.fromScale(0.689, 0.85),[obf_cached_str[297]]=Main,[obf_cached_str[298]]=1,[obf_cached_str[299]]=0,[obf_cached_str[300]]=true,[obf_cached_str[301]]=false,[obf_cached_str[302]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[304]]=Enum.AutomaticSize.Y,[obf_cached_str[307]]=0,[obf_cached_str[308]]=1});
			local CanvasLayout = _G[obf_cached_str[309]](obf_cached_str[310], {[obf_cached_str[311]]=Canvas,[obf_cached_str[312]]=UDim.new(0, 10),[obf_cached_str[314]]=Enum.FillDirection.Vertical,[obf_cached_str[317]]=Enum.HorizontalAlignment.Center,[obf_cached_str[320]]=Enum.VerticalAlignment.Top,[obf_cached_str[323]]=Enum.SortOrder.LayoutOrder});
			local CanvasPad = _G[obf_cached_str[326]](obf_cached_str[327], {[obf_cached_str[328]]=Canvas,[obf_cached_str[329]]=UDim.new(0, 5)});
			local Path = _G[obf_cached_str[331]](obf_cached_str[332], {[obf_cached_str[333]]=obf_cached_str[334],[obf_cached_str[335]]=UDim2.fromScale(0.35, 0.045),[obf_cached_str[337]]=UDim2.fromScale(0.7, 0.055),[obf_cached_str[339]]=Main,[obf_cached_str[340]]=1,[obf_cached_str[341]]=Enum.Font.GothamBold,[obf_cached_str[344]]=('Amiri / FF2 / <font color="#FFFFFF">' .. Title .. "</font>"),[obf_cached_str[347]]=true,[obf_cached_str[348]]=Enum.TextXAlignment.Left,[obf_cached_str[351]]=Enum.TextYAlignment.Center,[obf_cached_str[354]]=true,[obf_cached_str[355]]=true,[obf_cached_str[356]]=false,[obf_cached_str[357]]=Color3.fromRGB(102, 102, 102),[obf_cached_str[359]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[361]]=18,[obf_cached_str[362]]=0,[obf_cached_str[363]]=1});
			tab.Activate = function(self)
				local FlatIdent_1BF3A = 0;
				while true do
					if (FlatIdent_1BF3A == 0) then
						if (Window.CurrentTab ~= nil) then
							Window.CurrentTab:Deactivate();
						end
						Window.CurrentTab = tab;
						FlatIdent_1BF3A = 1;
					end
					if (FlatIdent_1BF3A == 3) then
						Canvas.Visible = true;
						break;
					end
					if (FlatIdent_1BF3A == 1) then
						TS:Create(Tab, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {[obf_cached_str[374]]=0.5}):Play();
						TS:Create(TabTitle, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {[obf_cached_str[380]]=Color3.fromRGB(0, 128, 0)}):Play();
						FlatIdent_1BF3A = 2;
					end
					if (FlatIdent_1BF3A == 2) then
						TS:Create(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {[obf_cached_str[387]]=Color3.fromRGB(0, 128, 0)}):Play();
						Path.Visible = true;
						FlatIdent_1BF3A = 3;
					end
				end
			end;
			tab.Deactivate = function(self)
				local FlatIdent_8E500 = 0;
				local FlatIdent_8199B;
				while true do
					if (FlatIdent_8E500 == 0) then
						FlatIdent_8199B = 0;
						while true do
							if (FlatIdent_8199B == 2) then
								Canvas.Visible = false;
								break;
							end
							if (FlatIdent_8199B == 0) then
								TS:Create(Tab, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {[obf_cached_str[397]]=1}):Play();
								TS:Create(TabTitle, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {[obf_cached_str[403]]=Color3.fromRGB(153, 153, 153)}):Play();
								FlatIdent_8199B = 1;
							end
							if (1 == FlatIdent_8199B) then
								TS:Create(Icon, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {[obf_cached_str[410]]=Color3.fromRGB(153, 153, 153)}):Play();
								Path.Visible = false;
								FlatIdent_8199B = 2;
							end
						end
						break;
					end
				end
			end;
			Tab.MouseButton1Down:Connect(function()
				tab:Activate();
			end);
			if (Window.CurrentTab == nil) then
				tab:Activate();
			end
			tab.Toggle = function(self, Title, Options)
				local Settings = {[obf_cached_str[420]]=(Title or obf_cached_str[421]),[obf_cached_str[422]]=(Options.Default or false),[obf_cached_str[424]]=(Options.Default or false),[obf_cached_str[426]]=(Options.Callback or function()
				end)};
				local Toggle = _G[obf_cached_str[428]](obf_cached_str[429], {[obf_cached_str[430]]=obf_cached_str[431],[obf_cached_str[432]]=UDim2.fromScale(0, 0),[obf_cached_str[434]]=UDim2.fromScale(0.9, 0.1),[obf_cached_str[436]]=Canvas,[obf_cached_str[437]]=0.8999999761581421,[obf_cached_str[438]]=Color3.fromRGB(0, 128, 0),[obf_cached_str[440]]=0,[obf_cached_str[441]]=1,[obf_cached_str[442]]=false});
				local ToggleCorner_12 = _G[obf_cached_str[443]](obf_cached_str[444], {[obf_cached_str[445]]=Toggle,[obf_cached_str[446]]=UDim.new(0, 6)});
				local ToggleStroke_13 = _G[obf_cached_str[448]](obf_cached_str[449], {[obf_cached_str[450]]=Toggle,[obf_cached_str[451]]=Color3.fromRGB(169, 169, 169),[obf_cached_str[453]]=1,[obf_cached_str[454]]=0.5});
				local ToggleTitle_14 = _G[obf_cached_str[455]](obf_cached_str[456], {[obf_cached_str[457]]=obf_cached_str[458],[obf_cached_str[459]]=UDim2.fromScale(0.03, 0.5),[obf_cached_str[461]]=UDim2.fromScale(0.9, 0.5),[obf_cached_str[463]]=Toggle,[obf_cached_str[464]]=1,[obf_cached_str[465]]=Vector2.new(0, 0.5),[obf_cached_str[467]]=Enum.Font.SourceSans,[obf_cached_str[470]]=Settings.Title,[obf_cached_str[472]]=true,[obf_cached_str[473]]=Enum.TextXAlignment.Left,[obf_cached_str[476]]=Enum.TextYAlignment.Center,[obf_cached_str[479]]=true,[obf_cached_str[480]]=Color3.fromRGB(188, 188, 188),[obf_cached_str[482]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[484]]=14,[obf_cached_str[485]]=0,[obf_cached_str[486]]=1});
				local Switch_15 = _G[obf_cached_str[487]](obf_cached_str[488], {[obf_cached_str[489]]=obf_cached_str[490],[obf_cached_str[491]]=UDim2.fromScale(0.85, 0.5),[obf_cached_str[493]]=UDim2.fromScale(0.1, 0.3),[obf_cached_str[495]]=Toggle,[obf_cached_str[496]]=Vector2.new(0, 0.5),[obf_cached_str[498]]=Color3.fromRGB(56, 56, 56),[obf_cached_str[500]]=0,[obf_cached_str[501]]=1});
				local SwitchCorner_16 = _G[obf_cached_str[502]](obf_cached_str[503], {[obf_cached_str[504]]=Switch_15,[obf_cached_str[505]]=UDim.new(1, 0)});
				local Knob_17 = _G[obf_cached_str[507]](obf_cached_str[508], {[obf_cached_str[509]]=obf_cached_str[510],[obf_cached_str[511]]=UDim2.fromScale(-0.15, 0.5),[obf_cached_str[513]]=UDim2.fromScale(1.1, 1.5),[obf_cached_str[515]]=Switch_15,[obf_cached_str[516]]=Vector2.new(0, 0.5),[obf_cached_str[518]]=Color3.fromRGB(171, 171, 171),[obf_cached_str[520]]=0,[obf_cached_str[521]]=1});
				local KnobConstraint_18 = _G[obf_cached_str[522]](obf_cached_str[523], {[obf_cached_str[524]]=1,[obf_cached_str[525]]=Knob_17});
				local KnobCorner_19 = _G[obf_cached_str[526]](obf_cached_str[527], {[obf_cached_str[528]]=Knob_17,[obf_cached_str[529]]=UDim.new(1, 0)});
				Settings.Toggle = function(self, v)
					local FlatIdent_31905 = 0;
					while true do
						if (0 == FlatIdent_31905) then
							if (v ~= nil) then
								Settings.Callback(v);
							else
								Settings.Value = not Settings.Value;
								Settings.Callback(Settings.Value);
							end
							if Settings.Value then
								local FlatIdent_7A5E1 = 0;
								local FlatIdent_51F42;
								while true do
									if (FlatIdent_7A5E1 == 0) then
										FlatIdent_51F42 = 0;
										while true do
											if (FlatIdent_51F42 == 0) then
												TS:Create(Switch_15, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {[obf_cached_str[542]]=Color3.fromRGB(52, 51, 74)}):Play();
												TS:Create(Knob_17, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {[obf_cached_str[549]]=Color3.fromRGB(0, 128, 0)}):Play();
												FlatIdent_51F42 = 1;
											end
											if (FlatIdent_51F42 == 1) then
												TS:Create(Knob_17, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {[obf_cached_str[556]]=UDim2.fromScale(0.55, 0.5)}):Play();
												break;
											end
										end
										break;
									end
								end
							else
								local FlatIdent_7C7D6 = 0;
								local FlatIdent_E652;
								while true do
									if (FlatIdent_7C7D6 == 0) then
										FlatIdent_E652 = 0;
										while true do
											if (FlatIdent_E652 == 1) then
												TS:Create(Knob_17, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {[obf_cached_str[563]]=UDim2.fromScale(-0.15, 0.5)}):Play();
												break;
											end
											if (0 == FlatIdent_E652) then
												TS:Create(Switch_15, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {[obf_cached_str[570]]=Color3.fromRGB(56, 56, 56)}):Play();
												TS:Create(Knob_17, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {[obf_cached_str[577]]=Color3.fromRGB(171, 171, 171)}):Play();
												FlatIdent_E652 = 1;
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end;
				Settings:Toggle(Settings.Default);
				Toggle.MouseButton1Down:Connect(function()
					Settings:Toggle();
				end);
				return Settings;
			end;
			tab.Slider = function(self, Title, Options)
				local Settings = {[obf_cached_str[586]]=(Title or obf_cached_str[587]),[obf_cached_str[588]]=(Options.Default or 0),[obf_cached_str[590]]=Options.Default,[obf_cached_str[592]]=(Options.Min or 0),[obf_cached_str[594]]=(Options.Max or 100),[obf_cached_str[596]]=(Options.Callback or function()
				end),[obf_cached_str[598]]={}};
				local Slider = _G[obf_cached_str[599]](obf_cached_str[600], {[obf_cached_str[601]]=obf_cached_str[602],[obf_cached_str[603]]=UDim2.new(0, 0, 0, 0),[obf_cached_str[605]]=UDim2.new(0.9, 0, 0.15, 0),[obf_cached_str[607]]=Canvas,[obf_cached_str[608]]=0.8999999761581421,[obf_cached_str[609]]=Color3.fromRGB(192, 192, 192),[obf_cached_str[611]]=0,[obf_cached_str[612]]=1,[obf_cached_str[613]]=false});
				local SliderCorner = _G[obf_cached_str[614]](obf_cached_str[615], {[obf_cached_str[616]]=Slider,[obf_cached_str[617]]=UDim.new(0, 6)});
				local SliderStroke = _G[obf_cached_str[619]](obf_cached_str[620], {[obf_cached_str[621]]=Slider,[obf_cached_str[622]]=Color3.fromRGB(192, 192, 192),[obf_cached_str[624]]=1,[obf_cached_str[625]]=0.5});
				local SliderAmount = _G[obf_cached_str[626]](obf_cached_str[627], {[obf_cached_str[628]]=obf_cached_str[629],[obf_cached_str[630]]=UDim2.new(0.88, 0, 0.3, 0),[obf_cached_str[632]]=UDim2.new(0.1, 0, 0.35, 0),[obf_cached_str[634]]=Slider,[obf_cached_str[635]]=1,[obf_cached_str[636]]=Vector2.new(0, 0.5),[obf_cached_str[638]]=Enum.Font.SourceSans,[obf_cached_str[641]]=Settings.Default,[obf_cached_str[643]]=true,[obf_cached_str[644]]=Enum.TextXAlignment.Center,[obf_cached_str[647]]=Enum.TextYAlignment.Center,[obf_cached_str[650]]=true,[obf_cached_str[651]]=Color3.fromRGB(188, 188, 188),[obf_cached_str[653]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[655]]=14,[obf_cached_str[656]]=0,[obf_cached_str[657]]=1});
				local SliderTitle = _G[obf_cached_str[658]](obf_cached_str[659], {[obf_cached_str[660]]=obf_cached_str[661],[obf_cached_str[662]]=UDim2.new(0.03, 0, 0.3, 0),[obf_cached_str[664]]=UDim2.new(0.9, 0, 0.35, 0),[obf_cached_str[666]]=Slider,[obf_cached_str[667]]=1,[obf_cached_str[668]]=Vector2.new(0, 0.5),[obf_cached_str[670]]=Enum.Font.SourceSans,[obf_cached_str[673]]=Settings.Title,[obf_cached_str[675]]=true,[obf_cached_str[676]]=Enum.TextXAlignment.Left,[obf_cached_str[679]]=Enum.TextYAlignment.Center,[obf_cached_str[682]]=true,[obf_cached_str[683]]=Color3.fromRGB(188, 188, 188),[obf_cached_str[685]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[687]]=14,[obf_cached_str[688]]=0,[obf_cached_str[689]]=1});
				local SliderBack = _G[obf_cached_str[690]](obf_cached_str[691], {[obf_cached_str[692]]=obf_cached_str[693],[obf_cached_str[694]]=UDim2.new(0.5, 0, 0.7, 0),[obf_cached_str[696]]=UDim2.new(0.93, 0, 0, 4),[obf_cached_str[698]]=Slider,[obf_cached_str[699]]=Vector2.new(0.5, 0),[obf_cached_str[701]]=Color3.fromRGB(59, 59, 59),[obf_cached_str[703]]=0,[obf_cached_str[704]]=1});
				local BackCorner = _G[obf_cached_str[705]](obf_cached_str[706], {[obf_cached_str[707]]=SliderBack,[obf_cached_str[708]]=UDim.new(1, 0)});
				local SliderMain = _G[obf_cached_str[710]](obf_cached_str[711], {[obf_cached_str[712]]=obf_cached_str[713],[obf_cached_str[714]]=UDim2.new(0, 0, 0, 0),[obf_cached_str[716]]=UDim2.new(0.431, 0, 0, 4),[obf_cached_str[718]]=SliderBack,[obf_cached_str[719]]=Color3.fromRGB(192, 192, 192),[obf_cached_str[721]]=0,[obf_cached_str[722]]=1});
				local SMCorner = _G[obf_cached_str[723]](obf_cached_str[724], {[obf_cached_str[725]]=SliderMain,[obf_cached_str[726]]=UDim.new(1, 0)});
				Settings.Callback(Settings.Value);
				Settings.GetValue = function(self)
					return tonumber(SliderAmount.Text);
				end;
				Settings.SetValue = function(self, v)
					local FlatIdent_822B5 = 0;
					while true do
						if (FlatIdent_822B5 == 1) then
							Settings.Value = SliderAmount.Text;
							break;
						end
						if (FlatIdent_822B5 == 0) then
							if not v then
								local FlatIdent_99740 = 0;
								local FlatIdent_6053C;
								local percent;
								local Value;
								while true do
									if (FlatIdent_99740 == 1) then
										Value = nil;
										while true do
											if (FlatIdent_6053C == 0) then
												local FlatIdent_43D4D = 0;
												while true do
													if (0 == FlatIdent_43D4D) then
														percent = math.clamp((Mouse.X - SliderBack.AbsolutePosition.X) / SliderBack.AbsoluteSize.X, 0, 1);
														Value = ((Settings.Max - Settings.Min) * percent) + Settings.Min;
														FlatIdent_43D4D = 1;
													end
													if (FlatIdent_43D4D == 1) then
														FlatIdent_6053C = 1;
														break;
													end
												end
											end
											if (FlatIdent_6053C == 1) then
												SliderMain.Size = UDim2.fromScale(percent, 1);
												SliderAmount.Text = _G[obf_cached_str[747]]((((Value % 1) == 0) and string.format(obf_cached_str[749], Value)) or string.format(obf_cached_str[751], Value));
												break;
											end
										end
										break;
									end
									if (FlatIdent_99740 == 0) then
										FlatIdent_6053C = 0;
										percent = nil;
										FlatIdent_99740 = 1;
									end
								end
							else
								local FlatIdent_4029F = 0;
								while true do
									if (FlatIdent_4029F == 0) then
										SliderAmount.Text = _G[obf_cached_str[753]]((((v % 1) == 0) and string.format(obf_cached_str[755], v)) or string.format(obf_cached_str[757], v));
										TS:Create(SliderMain, TweenInfo.new(0.15, Enum.EasingStyle.Sine), {[obf_cached_str[762]]=UDim2.fromScale((v - Settings.Min) / (Settings.Max - Settings.Min), 1)}):Play();
										break;
									end
								end
							end
							Settings.Callback(Settings:GetValue());
							FlatIdent_822B5 = 1;
						end
					end
				end;
				SliderAmount.FocusLost:Connect(function()
					Settings:SetValue(math.clamp(SliderAmount.Text, Settings.Min, Settings.Max));
				end);
				table.insert(Settings.Connections, UIS.InputEnded:Connect(function(input, gpe)
					if ((input.UserInputType == Enum.UserInputType.MouseButton1) or (input.UserInputType == Enum.UserInputType.Touch)) then
						if Connection then
							local FlatIdent_99389 = 0;
							while true do
								if (FlatIdent_99389 == 0) then
									Connection:Disconnect();
									_G[obf_cached_str[788]] = nil;
									break;
								end
							end
						end
					end
				end));
				table.insert(Settings.Connections, Slider.MouseButton1Down:Connect(function()
					local FlatIdent_413A0 = 0;
					while true do
						if (FlatIdent_413A0 == 0) then
							if _G[obf_cached_str[793]] then
								_G[obf_cached_str[794]]:Disconnect();
							end
							_G[obf_cached_str[796]] = RS.Heartbeat:Connect(function()
								Settings:SetValue();
							end);
							break;
						end
					end
				end));
				return Settings;
			end;
			tab.Dropdown = function(self, Title, Options)
				local Settings = {[obf_cached_str[801]]=(Title or obf_cached_str[802]),[obf_cached_str[803]]=(Options.Default or obf_cached_str[805]),[obf_cached_str[806]]=(Options.Options or {}),[obf_cached_str[808]]=(Options.Callback or function()
				end)};
				local Dropdown = _G[obf_cached_str[810]](obf_cached_str[811], {[obf_cached_str[812]]=obf_cached_str[813],[obf_cached_str[814]]=UDim2.new(0, 0, 0, 0),[obf_cached_str[816]]=UDim2.fromScale(0.9, 0.1),[obf_cached_str[818]]=Canvas,[obf_cached_str[819]]=0.8999999761581421,[obf_cached_str[820]]=Color3.fromRGB(169, 169, 169),[obf_cached_str[822]]=0,[obf_cached_str[823]]=false,[obf_cached_str[824]]=20});
				local DropdownCorner = _G[obf_cached_str[825]](obf_cached_str[826], {[obf_cached_str[827]]=Dropdown,[obf_cached_str[828]]=UDim.new(0, 6)});
				local DropdownStroke = _G[obf_cached_str[830]](obf_cached_str[831], {[obf_cached_str[832]]=Dropdown,[obf_cached_str[833]]=Color3.fromRGB(169, 169, 169),[obf_cached_str[835]]=1,[obf_cached_str[836]]=0.5});
				local DropdownTitle = _G[obf_cached_str[837]](obf_cached_str[838], {[obf_cached_str[839]]=obf_cached_str[840],[obf_cached_str[841]]=UDim2.new(0.03, 0, 0.5, 0),[obf_cached_str[843]]=UDim2.new(0, 200, 0.5, 0),[obf_cached_str[845]]=Dropdown,[obf_cached_str[846]]=1,[obf_cached_str[847]]=Vector2.new(0, 0.5),[obf_cached_str[849]]=Enum.Font.SourceSans,[obf_cached_str[852]]=Settings.Title,[obf_cached_str[854]]=true,[obf_cached_str[855]]=Enum.TextXAlignment.Left,[obf_cached_str[858]]=Enum.TextYAlignment.Center,[obf_cached_str[861]]=true,[obf_cached_str[862]]=Color3.fromRGB(188, 188, 188),[obf_cached_str[864]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[866]]=14,[obf_cached_str[867]]=0,[obf_cached_str[868]]=1});
				local Selected = _G[obf_cached_str[869]](obf_cached_str[870], {[obf_cached_str[871]]=obf_cached_str[872],[obf_cached_str[873]]=UDim2.new(0.95, 0, 0.5, 0),[obf_cached_str[875]]=UDim2.new(0.1, 0, 0.5, 0),[obf_cached_str[877]]=Dropdown,[obf_cached_str[878]]=0.5,[obf_cached_str[879]]=Vector2.new(1, 0.5),[obf_cached_str[881]]=Enum.AutomaticSize.X,[obf_cached_str[884]]=Color3.fromRGB(0, 0, 0),[obf_cached_str[886]]=0,[obf_cached_str[887]]=1});
				local SelectedCorner = _G[obf_cached_str[888]](obf_cached_str[889], {[obf_cached_str[890]]=Selected,[obf_cached_str[891]]=UDim.new(0, 6)});
				local SelectedText = _G[obf_cached_str[893]](obf_cached_str[894], {[obf_cached_str[895]]=obf_cached_str[896],[obf_cached_str[897]]=UDim2.new(0, 0, 0.5, 0),[obf_cached_str[899]]=UDim2.new(1, 0, 1, 0),[obf_cached_str[901]]=Selected,[obf_cached_str[902]]=1,[obf_cached_str[903]]=Vector2.new(0, 0.5),[obf_cached_str[905]]=Enum.Font.SourceSans,[obf_cached_str[908]]=Settings.Default,[obf_cached_str[910]]=Enum.AutomaticSize.X,[obf_cached_str[913]]=Enum.TextXAlignment.Center,[obf_cached_str[916]]=Enum.TextYAlignment.Center,[obf_cached_str[919]]=true,[obf_cached_str[920]]=Color3.fromRGB(188, 188, 188),[obf_cached_str[922]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[924]]=14,[obf_cached_str[925]]=0,[obf_cached_str[926]]=1});
				local SelectedPad = _G[obf_cached_str[927]](obf_cached_str[928], {[obf_cached_str[929]]=Selected,[obf_cached_str[930]]=UDim.new(0, 10),[obf_cached_str[932]]=UDim.new(0, 10)});
				local OptionHolder = _G[obf_cached_str[934]](obf_cached_str[935], {[obf_cached_str[936]]=obf_cached_str[937],[obf_cached_str[938]]=UDim2.new(0.95, 0, 0.9, 0),[obf_cached_str[940]]=UDim2.new(0.1, 0, 0, 0),[obf_cached_str[942]]=Dropdown,[obf_cached_str[943]]=Vector2.new(1, 0),[obf_cached_str[945]]=Enum.AutomaticSize.XY,[obf_cached_str[948]]=Color3.fromRGB(10, 12, 19),[obf_cached_str[950]]=0,[obf_cached_str[951]]=false,[obf_cached_str[952]]=1});
				local OptionLayout = _G[obf_cached_str[953]](obf_cached_str[954], {[obf_cached_str[955]]=OptionHolder,[obf_cached_str[956]]=Enum.FillDirection.Vertical,[obf_cached_str[959]]=Enum.HorizontalAlignment.Center,[obf_cached_str[962]]=Enum.VerticalAlignment.Top,[obf_cached_str[965]]=Enum.SortOrder.LayoutOrder});
				local OptionPad = _G[obf_cached_str[968]](obf_cached_str[969], {[obf_cached_str[970]]=OptionHolder,[obf_cached_str[971]]=UDim.new(0, 5),[obf_cached_str[973]]=UDim.new(0, 5),[obf_cached_str[975]]=UDim.new(0, 10),[obf_cached_str[977]]=UDim.new(0, 10)});
				local OptionsCorner = _G[obf_cached_str[979]](obf_cached_str[980], {[obf_cached_str[981]]=OptionHolder,[obf_cached_str[982]]=UDim.new(0, 6)});
				local DropdownStroke_1 = _G[obf_cached_str[984]](obf_cached_str[985], {[obf_cached_str[986]]=OptionHolder,[obf_cached_str[987]]=Color3.fromRGB(169, 169, 169),[obf_cached_str[989]]=1,[obf_cached_str[990]]=0.5});
				Dropdown.MouseButton1Down:Connect(function()
					OptionHolder.Visible = not OptionHolder.Visible;
				end);
				table.foreach(Settings.Options, function(i, v)
					local Option = _G[obf_cached_str[997]](obf_cached_str[998], {[obf_cached_str[999]]=obf_cached_str[1000],[obf_cached_str[1001]]=UDim2.new(0, 0, 0.5, 0),[obf_cached_str[1003]]=UDim2.new(0.195, 0, 0, 20),[obf_cached_str[1005]]=OptionHolder,[obf_cached_str[1006]]=1,[obf_cached_str[1007]]=Vector2.new(0, 0.5),[obf_cached_str[1009]]=Enum.Font.SourceSans,[obf_cached_str[1012]]=v,[obf_cached_str[1013]]=Enum.AutomaticSize.X,[obf_cached_str[1016]]=Enum.TextXAlignment.Center,[obf_cached_str[1019]]=Enum.TextYAlignment.Center,[obf_cached_str[1022]]=true,[obf_cached_str[1023]]=Color3.fromRGB(188, 188, 188),[obf_cached_str[1025]]=Color3.fromRGB(255, 255, 255),[obf_cached_str[1027]]=false,[obf_cached_str[1028]]=14,[obf_cached_str[1029]]=0,[obf_cached_str[1030]]=21});
					Option.MouseButton1Down:Connect(function()
						local FlatIdent_804DA = 0;
						local FlatIdent_8CEDF;
						while true do
							if (0 == FlatIdent_804DA) then
								FlatIdent_8CEDF = 0;
								while true do
									if (FlatIdent_8CEDF == 1) then
										Settings.Callback(Option.Text);
										break;
									end
									if (FlatIdent_8CEDF == 0) then
										SelectedText.Text = Option.Text;
										OptionHolder.Visible = false;
										FlatIdent_8CEDF = 1;
									end
								end
								break;
							end
						end
					end);
				end);
				return Settings;
			end;
			return tab;
		end;
		return Window;
	end;
	local on2;
	local on = false;
	local legmagdist = 10;
	local bldist = 25;
	local regdist = 20;
	local leaugdist = 4;
	local magType = obf_cached_str[1038];
	local tprange = 0;
	getgenv().msVersion = obf_cached_str[1040];
	getgenv().msSecondVerRange = 15;
	local Players = game:GetService(obf_cached_str[1043]);
	local LocalPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait();
	local Character = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait();
	local NewC;
	local CatchRight;
	task.spawn(function()
		while task.wait() do
			local FlatIdent_56C55 = 0;
			while true do
				if (FlatIdent_56C55 == 0) then
					Character.ChildRemoved:Connect(function(child)
						if (child.Name == obf_cached_str[1057]) then
							CatchRight = nil;
						end
					end);
					Character.ChildAdded:Connect(function(child)
						if (child.Name == obf_cached_str[1061]) then
							CatchRight = child;
						end
					end);
					break;
				end
			end
		end
	end);
	LocalPlayer.CharacterAdded:Connect(function(character)
		local FlatIdent_775F1 = 0;
		while true do
			if (FlatIdent_775F1 == 0) then
				wait();
				Character = character;
				break;
			end
		end
	end);
	local HumanoidRootPart = Character and Character:FindFirstChild(obf_cached_str[1065]);
	local CustomFireTouchInterest = function(_G[obf_cached_str[1066]], _G[obf_cached_str[1067]], _G[obf_cached_str[1068]])
		if (on and Transmitter and Part) then
			if (Toggle == 1) then
				local FlatIdent_6DDFB = 0;
				local FlatIdent_1B1BA;
				local Direction;
				local Calculation;
				while true do
					if (FlatIdent_6DDFB == 0) then
						FlatIdent_1B1BA = 0;
						Direction = nil;
						FlatIdent_6DDFB = 1;
					end
					if (FlatIdent_6DDFB == 1) then
						Calculation = nil;
						while true do
							if (FlatIdent_1B1BA == 0) then
								local FlatIdent_5BBF = 0;
								while true do
									if (1 == FlatIdent_5BBF) then
										FlatIdent_1B1BA = 1;
										break;
									end
									if (0 == FlatIdent_5BBF) then
										Direction = (Part.Position - Transmitter.Position).Unit;
										Calculation = Direction + Vector3.new(1, 1, 1);
										FlatIdent_5BBF = 1;
									end
								end
							end
							if (FlatIdent_1B1BA == 1) then
								Transmitter.CFrame = Part.CFrame + Calculation;
								break;
							end
						end
						break;
					end
				end
			else
				return;
			end
		else
			return;
		end
	end;
	task.spawn(function()
		CatchRight = Character:WaitForChild(obf_cached_str[1077]);
		while task.wait() do
			if on then
				for Index, Object in next, workspace:GetChildren() do
					if on then
						if (Object:IsA(obf_cached_str[1081]) and (Object.Name == obf_cached_str[1083])) then
							if (getgenv().msVersion == obf_cached_str[1085]) then
								local Distance = (HumanoidRootPart.Position - Object.Position).Magnitude;
								if (string.find(getexecutorname(), obf_cached_str[1090]) or string.find(getexecutorname(), obf_cached_str[1092]) or string.find(getexecutorname(), obf_cached_str[1094]) or string.find(getexecutorname(), obf_cached_str[1096]) or string.find(getexecutorname(), obf_cached_str[1098])) then
									if (magType == obf_cached_str[1099]) then
										if (Distance <= legmagdist) then
											local FlatIdent_8DCA9 = 0;
											while true do
												if (FlatIdent_8DCA9 == 0) then
													CustomFireTouchInterest(CatchRight, Object, 1);
													CustomFireTouchInterest(CatchRight, Object, 1);
													FlatIdent_8DCA9 = 1;
												end
												if (FlatIdent_8DCA9 == 2) then
													CustomFireTouchInterest(CatchRight, Object, 0);
													break;
												end
												if (FlatIdent_8DCA9 == 1) then
													task.wait();
													CustomFireTouchInterest(CatchRight, Object, 0);
													FlatIdent_8DCA9 = 2;
												end
											end
										end
									elseif (magType == obf_cached_str[1101]) then
										if (Distance <= bldist) then
											local FlatIdent_7A777 = 0;
											while true do
												if (0 == FlatIdent_7A777) then
													CustomFireTouchInterest(CatchRight, Object, 1);
													CustomFireTouchInterest(CatchRight, Object, 1);
													FlatIdent_7A777 = 1;
												end
												if (FlatIdent_7A777 == 2) then
													CustomFireTouchInterest(CatchRight, Object, 0);
													break;
												end
												if (FlatIdent_7A777 == 1) then
													task.wait();
													CustomFireTouchInterest(CatchRight, Object, 0);
													FlatIdent_7A777 = 2;
												end
											end
										end
									elseif (magType == obf_cached_str[1103]) then
										if (Distance <= leaugdist) then
											local FlatIdent_3A3CE = 0;
											while true do
												if (FlatIdent_3A3CE == 0) then
													CustomFireTouchInterest(CatchRight, Object, 1);
													CustomFireTouchInterest(CatchRight, Object, 1);
													FlatIdent_3A3CE = 1;
												end
												if (1 == FlatIdent_3A3CE) then
													task.wait();
													CustomFireTouchInterest(CatchRight, Object, 0);
													FlatIdent_3A3CE = 2;
												end
												if (FlatIdent_3A3CE == 2) then
													CustomFireTouchInterest(CatchRight, Object, 0);
													break;
												end
											end
										end
									elseif (magType == obf_cached_str[1105]) then
										if (Distance <= regdist) then
											local FlatIdent_3CB5D = 0;
											while true do
												if (1 == FlatIdent_3CB5D) then
													task.wait();
													CustomFireTouchInterest(CatchRight, Object, 0);
													FlatIdent_3CB5D = 2;
												end
												if (FlatIdent_3CB5D == 2) then
													CustomFireTouchInterest(CatchRight, Object, 0);
													break;
												end
												if (0 == FlatIdent_3CB5D) then
													CustomFireTouchInterest(CatchRight, Object, 1);
													CustomFireTouchInterest(CatchRight, Object, 1);
													FlatIdent_3CB5D = 1;
												end
											end
										end
									end
								elseif not firetouchinterest then
									if (magType == obf_cached_str[1107]) then
										if (Distance <= legmagdist) then
											local FlatIdent_4DC63 = 0;
											local FlatIdent_324DE;
											while true do
												if (FlatIdent_4DC63 == 0) then
													FlatIdent_324DE = 0;
													while true do
														if (FlatIdent_324DE == 1) then
															task.wait();
															CustomFireTouchInterest(CatchRight, Object, 0);
															FlatIdent_324DE = 2;
														end
														if (0 == FlatIdent_324DE) then
															CustomFireTouchInterest(CatchRight, Object, 1);
															CustomFireTouchInterest(CatchRight, Object, 1);
															FlatIdent_324DE = 1;
														end
														if (FlatIdent_324DE == 2) then
															CustomFireTouchInterest(CatchRight, Object, 0);
															break;
														end
													end
													break;
												end
											end
										end
									elseif (magType == obf_cached_str[1109]) then
										if (Distance <= bldist) then
											local FlatIdent_2C73A = 0;
											local FlatIdent_287B5;
											while true do
												if (FlatIdent_2C73A == 0) then
													FlatIdent_287B5 = 0;
													while true do
														if (FlatIdent_287B5 == 1) then
															task.wait();
															CustomFireTouchInterest(CatchRight, Object, 0);
															FlatIdent_287B5 = 2;
														end
														if (FlatIdent_287B5 == 2) then
															CustomFireTouchInterest(CatchRight, Object, 0);
															break;
														end
														if (FlatIdent_287B5 == 0) then
															CustomFireTouchInterest(CatchRight, Object, 1);
															CustomFireTouchInterest(CatchRight, Object, 1);
															FlatIdent_287B5 = 1;
														end
													end
													break;
												end
											end
										end
									elseif (magType == obf_cached_str[1111]) then
										if (Distance <= leaugdist) then
											local FlatIdent_113C4 = 0;
											local FlatIdent_5346B;
											while true do
												if (FlatIdent_113C4 == 0) then
													FlatIdent_5346B = 0;
													while true do
														if (FlatIdent_5346B == 0) then
															CustomFireTouchInterest(CatchRight, Object, 1);
															CustomFireTouchInterest(CatchRight, Object, 1);
															FlatIdent_5346B = 1;
														end
														if (2 == FlatIdent_5346B) then
															CustomFireTouchInterest(CatchRight, Object, 0);
															break;
														end
														if (1 == FlatIdent_5346B) then
															task.wait();
															CustomFireTouchInterest(CatchRight, Object, 0);
															FlatIdent_5346B = 2;
														end
													end
													break;
												end
											end
										end
									elseif (magType == obf_cached_str[1113]) then
										if (Distance <= regdist) then
											local FlatIdent_1A2AA = 0;
											while true do
												if (FlatIdent_1A2AA == 2) then
													CustomFireTouchInterest(CatchRight, Object, 0);
													break;
												end
												if (1 == FlatIdent_1A2AA) then
													task.wait();
													CustomFireTouchInterest(CatchRight, Object, 0);
													FlatIdent_1A2AA = 2;
												end
												if (FlatIdent_1A2AA == 0) then
													CustomFireTouchInterest(CatchRight, Object, 1);
													CustomFireTouchInterest(CatchRight, Object, 1);
													FlatIdent_1A2AA = 1;
												end
											end
										end
									end
								elseif (magType == obf_cached_str[1115]) then
									if (Distance <= legmagdist) then
										local FlatIdent_89237 = 0;
										while true do
											if (FlatIdent_89237 == 0) then
												firetouchinterest(CatchRight, Object, 1);
												firetouchinterest(CatchRight, Object, 1);
												FlatIdent_89237 = 1;
											end
											if (FlatIdent_89237 == 2) then
												firetouchinterest(CatchRight, Object, 0);
												break;
											end
											if (FlatIdent_89237 == 1) then
												task.wait();
												firetouchinterest(CatchRight, Object, 0);
												FlatIdent_89237 = 2;
											end
										end
									end
								elseif (magType == obf_cached_str[1117]) then
									if (Distance <= bldist) then
										local FlatIdent_95909 = 0;
										local FlatIdent_58C4D;
										while true do
											if (FlatIdent_95909 == 0) then
												FlatIdent_58C4D = 0;
												while true do
													if (FlatIdent_58C4D == 0) then
														firetouchinterest(CatchRight, Object, 1);
														firetouchinterest(CatchRight, Object, 1);
														FlatIdent_58C4D = 1;
													end
													if (FlatIdent_58C4D == 1) then
														task.wait();
														firetouchinterest(CatchRight, Object, 0);
														FlatIdent_58C4D = 2;
													end
													if (FlatIdent_58C4D == 2) then
														firetouchinterest(CatchRight, Object, 0);
														break;
													end
												end
												break;
											end
										end
									end
								elseif (magType == obf_cached_str[1119]) then
									if (Distance <= leaugdist) then
										local FlatIdent_7E7C2 = 0;
										local FlatIdent_5998C;
										while true do
											if (FlatIdent_7E7C2 == 0) then
												FlatIdent_5998C = 0;
												while true do
													if (FlatIdent_5998C == 0) then
														firetouchinterest(CatchRight, Object, 1);
														firetouchinterest(CatchRight, Object, 1);
														FlatIdent_5998C = 1;
													end
													if (FlatIdent_5998C == 2) then
														firetouchinterest(CatchRight, Object, 0);
														break;
													end
													if (1 == FlatIdent_5998C) then
														task.wait();
														firetouchinterest(CatchRight, Object, 0);
														FlatIdent_5998C = 2;
													end
												end
												break;
											end
										end
									end
								elseif (magType == obf_cached_str[1121]) then
									if (Distance <= regdist) then
										local FlatIdent_84BDB = 0;
										local FlatIdent_4D434;
										while true do
											if (FlatIdent_84BDB == 0) then
												FlatIdent_4D434 = 0;
												while true do
													if (FlatIdent_4D434 == 0) then
														firetouchinterest(CatchRight, Object, 1);
														firetouchinterest(CatchRight, Object, 1);
														FlatIdent_4D434 = 1;
													end
													if (FlatIdent_4D434 == 2) then
														firetouchinterest(CatchRight, Object, 0);
														break;
													end
													if (FlatIdent_4D434 == 1) then
														task.wait();
														firetouchinterest(CatchRight, Object, 0);
														FlatIdent_4D434 = 2;
													end
												end
												break;
											end
										end
									end
								end
							else
								workspace.ChildAdded:Connect(function(child)
									if ((child.Name == obf_cached_str[1126]) and child:IsA(obf_cached_str[1128]) and on) then
										local FlatIdent_3B7A2 = 0;
										local FlatIdent_22216;
										while true do
											if (FlatIdent_3B7A2 == 0) then
												FlatIdent_22216 = 0;
												while true do
													if (0 == FlatIdent_22216) then
														child.CanCollide = false;
														child.Size = Vector3.new(_G[obf_cached_str[1132]], _G[obf_cached_str[1133]], _G[obf_cached_str[1134]]);
														break;
													end
												end
												break;
											end
										end
									end
								end);
							end
						end
					end
				end
			end
		end
	end);
	local on3;
	task.spawn(function()
		workspace.ChildAdded:Connect(function(c)
			if ((c.Name == obf_cached_str[1139]) and c:IsA(obf_cached_str[1141])) then
				local FlatIdent_DFF4 = 0;
				local part;
				local upd;
				while true do
					if (FlatIdent_DFF4 == 4) then
						task.spawn(upd);
						task.delay(10, function()
							if (part and part.Parent) then
								part:Destroy();
							end
						end);
						break;
					end
					if (FlatIdent_DFF4 == 2) then
						part.Transparency = 0.5;
						part.CanCollide = false;
						FlatIdent_DFF4 = 3;
					end
					if (FlatIdent_DFF4 == 3) then
						local FlatIdent_5ED0F = 0;
						while true do
							if (FlatIdent_5ED0F == 1) then
								FlatIdent_DFF4 = 4;
								break;
							end
							if (FlatIdent_5ED0F == 0) then
								upd = nil;
								function upd()
									while on3 and on do
										local FlatIdent_217CE = 0;
										local FlatIdent_197AE;
										while true do
											if (FlatIdent_217CE == 0) then
												FlatIdent_197AE = 0;
												while true do
													if (FlatIdent_197AE == 1) then
														part.CFrame = c.CFrame;
														break;
													end
													if (FlatIdent_197AE == 0) then
														task.wait();
														if (magType == obf_cached_str[1151]) then
															part.Size = Vector3.new(regdist, regdist, regdist);
														elseif (magType == obf_cached_str[1154]) then
															part.Size = Vector3.new(bldist, bldist, bldist);
														elseif (magType == obf_cached_str[1157]) then
															part.Size = Vector3.new(legmagdist, legmagdist, legmagdist);
														elseif (magType == obf_cached_str[1160]) then
															part.Size = Vector3.new(leaugdist, leaugdist, leaugdist);
														end
														FlatIdent_197AE = 1;
													end
												end
												break;
											end
										end
									end
								end
								FlatIdent_5ED0F = 1;
							end
						end
					end
					if (FlatIdent_DFF4 == 0) then
						local FlatIdent_10988 = 0;
						while true do
							if (FlatIdent_10988 == 1) then
								FlatIdent_DFF4 = 1;
								break;
							end
							if (FlatIdent_10988 == 0) then
								part = Instance.new(obf_cached_str[1164]);
								part.Name = obf_cached_str[1166];
								FlatIdent_10988 = 1;
							end
						end
					end
					if (FlatIdent_DFF4 == 1) then
						part.Anchored = false;
						part.Parent = _G[obf_cached_str[1169]];
						FlatIdent_DFF4 = 2;
					end
				end
			end
		end);
	end);
	local function createOrUpdateHitbox(football)
		local FlatIdent_8D26F = 0;
		local hitbox;
		while true do
			if (FlatIdent_8D26F == 1) then
				hitbox = football.Parent:FindFirstChild(obf_cached_str[1172]);
				if hitbox then
					hitbox.Size = Vector3.new(getgenv().ToggleSettings.HitboxSize, getgenv().ToggleSettings.HitboxSize, getgenv().ToggleSettings.HitboxSize);
				else
					local FlatIdent_2C966 = 0;
					local FlatIdent_67691;
					while true do
						if (FlatIdent_2C966 == 0) then
							FlatIdent_67691 = 0;
							while true do
								if (FlatIdent_67691 == 3) then
									hitbox.BrickColor = BrickColor.new(obf_cached_str[1183]);
									hitbox.Parent = football.Parent;
									break;
								end
								if (FlatIdent_67691 == 1) then
									hitbox.Size = Vector3.new(getgenv().ToggleSettings.HitboxSize, getgenv().ToggleSettings.HitboxSize, getgenv().ToggleSettings.HitboxSize);
									hitbox.Anchored = true;
									FlatIdent_67691 = 2;
								end
								if (FlatIdent_67691 == 0) then
									hitbox = Instance.new(obf_cached_str[1196]);
									hitbox.Name = obf_cached_str[1198];
									FlatIdent_67691 = 1;
								end
								if (FlatIdent_67691 == 2) then
									hitbox.CanCollide = false;
									hitbox.Transparency = (getgenv().ToggleSettings.HitboxVisible and getgenv().ToggleSettings.HitboxTransparency) or 1;
									FlatIdent_67691 = 3;
								end
							end
							break;
						end
					end
				end
				FlatIdent_8D26F = 2;
			end
			if (FlatIdent_8D26F == 2) then
				hitbox.CFrame = CFrame.new(football.Position);
				spawn(function()
					local FlatIdent_3C22B = 0;
					while true do
						if (FlatIdent_3C22B == 0) then
							wait(getgenv().ToggleSettings.HitboxDuration);
							hitbox:Destroy();
							break;
						end
					end
				end);
				break;
			end
			if (FlatIdent_8D26F == 0) then
				football.CanCollide = false;
				football.Size = Vector3.new(getgenv().ToggleSettings.HitboxSize, getgenv().ToggleSettings.HitboxSize, getgenv().ToggleSettings.HitboxSize);
				FlatIdent_8D26F = 1;
			end
		end
	end
	local function updateHitboxes()
		for _, football in ipairs(Workspace:GetChildren()) do
			if ((football.Name == obf_cached_str[1222]) and football:IsA(obf_cached_str[1224])) then
				createOrUpdateHitbox(football);
			end
		end
	end
	local function regularCatch()
		if getgenv().ToggleSettings.AllMags then
			local catchRight = Players.LocalPlayer.Character:FindFirstChild(obf_cached_str[1230]);
			if not catchRight then
				return;
			end
			local closestFootball = nil;
			local closestDistance = _G[obf_cached_str[1231]].huge;
			for _, football in ipairs(Workspace:GetChildren()) do
				if ((football.Name == obf_cached_str[1235]) and football:IsA(obf_cached_str[1237])) then
					local FlatIdent_5431F = 0;
					local distance;
					while true do
						if (FlatIdent_5431F == 0) then
							distance = (football.Position - catchRight.Position).Magnitude;
							if ((distance < closestDistance) and (distance <= getgenv().ToggleSettings.unvCrange)) then
								local FlatIdent_70B9A = 0;
								while true do
									if (FlatIdent_70B9A == 0) then
										closestFootball = football;
										closestDistance = distance;
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
			if closestFootball then
				local FlatIdent_E0FA = 0;
				local FlatIdent_7E707;
				local chance;
				local delay;
				while true do
					if (FlatIdent_E0FA == 1) then
						delay = nil;
						while true do
							if (FlatIdent_7E707 == 1) then
								if (_G[obf_cached_str[1243]].random(100, 100) <= chance) then
									local FlatIdent_95B21 = 0;
									while true do
										if (FlatIdent_95B21 == 2) then
											firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1247]], closestFootball, 1);
											break;
										end
										if (FlatIdent_95B21 == 1) then
											firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1250]], closestFootball, 0);
											firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1253]], closestFootball, 1);
											FlatIdent_95B21 = 2;
										end
										if (FlatIdent_95B21 == 0) then
											wait(delay);
											firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1256]], closestFootball, 0);
											FlatIdent_95B21 = 1;
										end
									end
								end
								break;
							end
							if (FlatIdent_7E707 == 0) then
								local FlatIdent_8F8DB = 0;
								while true do
									if (FlatIdent_8F8DB == 0) then
										chance = getgenv().ToggleSettings.ActivationChance;
										delay = getgenv().ToggleSettings.Delay;
										FlatIdent_8F8DB = 1;
									end
									if (1 == FlatIdent_8F8DB) then
										FlatIdent_7E707 = 1;
										break;
									end
								end
							end
						end
						break;
					end
					if (FlatIdent_E0FA == 0) then
						FlatIdent_7E707 = 0;
						chance = nil;
						FlatIdent_E0FA = 1;
					end
				end
			end
		end
	end
	local function LegitCatch()
		if getgenv().ToggleSettings.AllMags then
			local catchRight = Players.LocalPlayer.Character:FindFirstChild(obf_cached_str[1266]);
			if not catchRight then
				return;
			end
			local closestFootball = nil;
			local closestDistance = _G[obf_cached_str[1267]].huge;
			for _, football in ipairs(Workspace:GetChildren()) do
				if ((football.Name == obf_cached_str[1271]) and football:IsA(obf_cached_str[1273])) then
					local FlatIdent_24BE7 = 0;
					local distance;
					while true do
						if (FlatIdent_24BE7 == 0) then
							distance = (football.Position - catchRight.Position).Magnitude;
							if ((distance < closestDistance) and (distance <= getgenv().ToggleSettings.unvCrange)) then
								local FlatIdent_4C4BD = 0;
								local FlatIdent_68856;
								while true do
									if (FlatIdent_4C4BD == 0) then
										FlatIdent_68856 = 0;
										while true do
											if (FlatIdent_68856 == 0) then
												closestFootball = football;
												closestDistance = distance;
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
			if closestFootball then
				local FlatIdent_25C44 = 0;
				local FlatIdent_42BD8;
				local chance;
				local delay;
				while true do
					if (FlatIdent_25C44 == 0) then
						FlatIdent_42BD8 = 0;
						chance = nil;
						FlatIdent_25C44 = 1;
					end
					if (FlatIdent_25C44 == 1) then
						delay = nil;
						while true do
							if (FlatIdent_42BD8 == 1) then
								if (_G[obf_cached_str[1279]].random(100, 100) <= chance) then
									local FlatIdent_66893 = 0;
									local FlatIdent_900D9;
									while true do
										if (FlatIdent_66893 == 0) then
											FlatIdent_900D9 = 0;
											while true do
												if (FlatIdent_900D9 == 1) then
													firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1283]], closestFootball, 0);
													firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1286]], closestFootball, 1);
													FlatIdent_900D9 = 2;
												end
												if (FlatIdent_900D9 == 0) then
													wait(delay);
													firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1289]], closestFootball, 0);
													FlatIdent_900D9 = 1;
												end
												if (FlatIdent_900D9 == 2) then
													firetouchinterest(Players.LocalPlayer.Character[obf_cached_str[1292]], closestFootball, 1);
													break;
												end
											end
											break;
										end
									end
								end
								break;
							end
							if (FlatIdent_42BD8 == 0) then
								local FlatIdent_71B69 = 0;
								while true do
									if (FlatIdent_71B69 == 1) then
										FlatIdent_42BD8 = 1;
										break;
									end
									if (FlatIdent_71B69 == 0) then
										chance = getgenv().ToggleSettings.ActivationChance;
										delay = getgenv().ToggleSettings.Delay;
										FlatIdent_71B69 = 1;
									end
								end
							end
						end
						break;
					end
				end
			end
		end
	end
	local function LeagueCatch()
		if getgenv().ToggleSettings.AllMags then
			local catchRight = Players.LocalPlayer.Character:FindFirstChild(obf_cached_str[1302]);
			if not catchRight then
				return;
			end
			local closestFootball = nil;
			local closestDistance = _G[obf_cached_str[1303]].huge;
			for _, football in ipairs(Workspace:GetChildren()) do
				if ((football.Name == obf_cached_str[1307]) and football:IsA(obf_cached_str[1309])) then
					local FlatIdent_53124 = 0;
					local distance;
					while true do
						if (FlatIdent_53124 == 0) then
							distance = (football.Position - catchRight.Position).Magnitude;
							if ((distance < closestDistance) and (distance <= getgenv().ToggleSettings.unvCrange)) then
								local FlatIdent_5F110 = 0;
								local FlatIdent_44603;
								while true do
									if (FlatIdent_5F110 == 0) then
										FlatIdent_44603 = 0;
										while true do
											if (FlatIdent_44603 == 0) then
												closestFootball = football;
												closestDistance = distance;
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
			if closestFootball then
				local distanceAdjustment = getgenv().ToggleSettings.HitboxSize;
				local tweenService = game:GetService(obf_cached_str[1318]);
				local tweenInfo = TweenInfo.new(0, Enum.EasingStyle.Linear);
				tweenService:Create(closestFootball, tweenInfo, {[obf_cached_str[1323]]=catchRight.Position}):Play();
			end
		end
	end
	local function BlatantCatch()
		if getgenv().ToggleSettings.AllMags then
			local catchRight = Players.LocalPlayer.Character:FindFirstChild(obf_cached_str[1331]);
			if not catchRight then
				return;
			end
			local closestFootball = nil;
			local closestDistance = _G[obf_cached_str[1332]].huge;
			for _, football in ipairs(Workspace:GetChildren()) do
				if ((football.Name == obf_cached_str[1336]) and football:IsA(obf_cached_str[1338])) then
					local FlatIdent_74291 = 0;
					local distance;
					while true do
						if (FlatIdent_74291 == 0) then
							distance = (football.Position - catchRight.Position).Magnitude;
							if ((distance < closestDistance) and (distance <= getgenv().ToggleSettings.BCrange)) then
								local FlatIdent_5724B = 0;
								while true do
									if (0 == FlatIdent_5724B) then
										closestFootball = football;
										closestDistance = distance;
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
			if closestFootball then
				for _ = 1, 30 do
					local FlatIdent_8E5B4 = 0;
					local tweenService;
					local tweenInfo;
					while true do
						if (FlatIdent_8E5B4 == 2) then
							wait();
							break;
						end
						if (FlatIdent_8E5B4 == 1) then
							local FlatIdent_1E025 = 0;
							while true do
								if (FlatIdent_1E025 == 1) then
									FlatIdent_8E5B4 = 2;
									break;
								end
								if (FlatIdent_1E025 == 0) then
									tweenInfo = TweenInfo.new(0, Enum.EasingStyle.Linear);
									tweenService:Create(closestFootball, tweenInfo, {[obf_cached_str[1348]]=catchRight.CFrame}):Play();
									FlatIdent_1E025 = 1;
								end
							end
						end
						if (FlatIdent_8E5B4 == 0) then
							wait();
							tweenService = game:GetService(obf_cached_str[1352]);
							FlatIdent_8E5B4 = 1;
						end
					end
				end
			end
		end
	end
	local ScreenGui = Instance.new(obf_cached_str[1354]);
	local Angle = Instance.new(obf_cached_str[1356]);
	local UICorner = Instance.new(obf_cached_str[1358]);
	local UIStroke = Instance.new(obf_cached_str[1360]);
	local UIGradient = Instance.new(obf_cached_str[1362]);
	local TextLabel = Instance.new(obf_cached_str[1364]);
	local AngleNum = Instance.new(obf_cached_str[1366]);
	local Powa = Instance.new(obf_cached_str[1368]);
	local UICorner_2 = Instance.new(obf_cached_str[1370]);
	local UIGradient_2 = Instance.new(obf_cached_str[1372]);
	local TextLabel_2 = Instance.new(obf_cached_str[1374]);
	local PowerNum = Instance.new(obf_cached_str[1376]);
	local UIStroke_2 = Instance.new(obf_cached_str[1378]);
	local Target = Instance.new(obf_cached_str[1380]);
	local UICorner_3 = Instance.new(obf_cached_str[1382]);
	local UIGradient_3 = Instance.new(obf_cached_str[1384]);
	local TextLabel_3 = Instance.new(obf_cached_str[1386]);
	local TargetPlr = Instance.new(obf_cached_str[1388]);
	local UIStroke_3 = Instance.new(obf_cached_str[1390]);
	local Mode = Instance.new(obf_cached_str[1392]);
	local UICorner_4 = Instance.new(obf_cached_str[1394]);
	local UIGradient_4 = Instance.new(obf_cached_str[1396]);
	local TextLabel_4 = Instance.new(obf_cached_str[1398]);
	local ModeText = Instance.new(obf_cached_str[1400]);
	local UIStroke_4 = Instance.new(obf_cached_str[1402]);
	local Catchable = Instance.new(obf_cached_str[1404]);
	local UICorner_5 = Instance.new(obf_cached_str[1406]);
	local UIGradient_5 = Instance.new(obf_cached_str[1408]);
	local TextLabel_5 = Instance.new(obf_cached_str[1410]);
	local CatchText = Instance.new(obf_cached_str[1412]);
	local UIStroke_5 = Instance.new(obf_cached_str[1414]);
	local Interceptable = Instance.new(obf_cached_str[1416]);
	local UICorner_6 = Instance.new(obf_cached_str[1418]);
	local UIGradient_6 = Instance.new(obf_cached_str[1420]);
	local TextLabel_6 = Instance.new(obf_cached_str[1422]);
	local IntText = Instance.new(obf_cached_str[1424]);
	local UIStroke_6 = Instance.new(obf_cached_str[1426]);
	local ATime = Instance.new(obf_cached_str[1428]);
	local UICorner_7 = Instance.new(obf_cached_str[1430]);
	local UIGradient_7 = Instance.new(obf_cached_str[1432]);
	local TextLabel_7 = Instance.new(obf_cached_str[1434]);
	local airtimetext = Instance.new(obf_cached_str[1436]);
	local UIStroke_7 = Instance.new(obf_cached_str[1438]);
	ScreenGui.Name = obf_cached_str[1440];
	ScreenGui.Parent = _G[obf_cached_str[1442]].CoreGui;
	Angle.Name = obf_cached_str[1445];
	Angle.Size = UDim2.new(0, 115, 0, 106);
	Angle.BorderColor3 = Color3.fromRGB(0, 0, 0);
	Angle.BackgroundTransparency = 0.44999998807907104;
	Angle.Position = UDim2.new(0.216752619, 0, -0.00772987632, 0);
	Angle.BorderSizePixel = 0;
	Angle.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	Angle.Parent = ScreenGui;
	UICorner.Name = obf_cached_str[1458];
	UICorner.Parent = Angle;
	UIStroke.Name = obf_cached_str[1461];
	UIStroke.Color = Color3.fromRGB(165, 170, 167);
	UIStroke.Thickness = 1.2000000476837158;
	UIStroke.Parent = Angle;
	UIGradient.Name = obf_cached_str[1467];
	UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient.Parent = Angle;
	TextLabel.Name = obf_cached_str[1476];
	TextLabel.Size = UDim2.new(0, 150, 0, 42);
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel.BackgroundTransparency = 1;
	TextLabel.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel.BorderSizePixel = 0;
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel.Text = obf_cached_str[1490];
	TextLabel.TextSize = 28;
	TextLabel.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel.Parent = Angle;
	AngleNum.Name = obf_cached_str[1501];
	AngleNum.Size = UDim2.new(0, 115, 0, 50);
	AngleNum.BorderColor3 = Color3.fromRGB(0, 0, 0);
	AngleNum.BackgroundTransparency = 1;
	AngleNum.Position = UDim2.new(0, 0, 0.132075474, 0);
	AngleNum.BorderSizePixel = 0;
	AngleNum.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	AngleNum.TextColor3 = Color3.fromRGB(220, 13, 13);
	AngleNum.Text = obf_cached_str[1515];
	AngleNum.TextSize = 66;
	AngleNum.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	AngleNum.Parent = Angle;
	Powa.Name = obf_cached_str[1526];
	Powa.Size = UDim2.new(0, 115, 0, 106);
	Powa.BorderColor3 = Color3.fromRGB(0, 0, 0);
	Powa.BackgroundTransparency = 0.44999998807907104;
	Powa.Position = UDim2.new(0.717355251, 0, -0.00802642666, 0);
	Powa.BorderSizePixel = 0;
	Powa.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	Powa.Parent = ScreenGui;
	UICorner_2.Name = obf_cached_str[1539];
	UICorner_2.Parent = Powa;
	UIGradient_2.Name = obf_cached_str[1542];
	UIGradient_2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient_2.Parent = Powa;
	TextLabel_2.Name = obf_cached_str[1551];
	TextLabel_2.Size = UDim2.new(0, 150, 0, 42);
	TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel_2.BackgroundTransparency = 1;
	TextLabel_2.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel_2.BorderSizePixel = 0;
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel_2.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel_2.Text = obf_cached_str[1565];
	TextLabel_2.TextSize = 28;
	TextLabel_2.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel_2.Parent = Powa;
	PowerNum.Name = obf_cached_str[1576];
	PowerNum.Size = UDim2.new(0, 115, 0, 50);
	PowerNum.BorderColor3 = Color3.fromRGB(0, 0, 0);
	PowerNum.BackgroundTransparency = 1;
	PowerNum.Position = UDim2.new(0, 0, 0.132075474, 0);
	PowerNum.BorderSizePixel = 0;
	PowerNum.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	PowerNum.TextColor3 = Color3.fromRGB(220, 13, 13);
	PowerNum.Text = obf_cached_str[1590];
	PowerNum.TextSize = 70;
	PowerNum.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	PowerNum.Parent = Powa;
	UIStroke_2.Name = obf_cached_str[1601];
	UIStroke_2.Color = Color3.fromRGB(165, 170, 167);
	UIStroke_2.Thickness = 1.2000000476837158;
	UIStroke_2.Parent = Powa;
	Target.Name = obf_cached_str[1607];
	Target.Size = UDim2.new(0, 115, 0, 106);
	Target.BorderColor3 = Color3.fromRGB(0, 0, 0);
	Target.BackgroundTransparency = 0.44999998807907104;
	Target.Position = UDim2.new(0.550999999, 0, -0.00800000038, 0);
	Target.BorderSizePixel = 0;
	Target.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	Target.Parent = ScreenGui;
	UICorner_3.Name = obf_cached_str[1620];
	UICorner_3.Parent = Target;
	UIGradient_3.Name = obf_cached_str[1623];
	UIGradient_3.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient_3.Parent = Target;
	TextLabel_3.Name = obf_cached_str[1632];
	TextLabel_3.Size = UDim2.new(0, 150, 0, 42);
	TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel_3.BackgroundTransparency = 1;
	TextLabel_3.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel_3.BorderSizePixel = 0;
	TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel_3.RichText = true;
	TextLabel_3.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel_3.Text = obf_cached_str[1647];
	TextLabel_3.TextSize = 28;
	TextLabel_3.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel_3.Parent = Target;
	TargetPlr.Name = obf_cached_str[1658];
	TargetPlr.Size = UDim2.new(0, 115, 0, 50);
	TargetPlr.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TargetPlr.BackgroundTransparency = 1;
	TargetPlr.Position = UDim2.new(0, 0, 0.207547173, 0);
	TargetPlr.BorderSizePixel = 0;
	TargetPlr.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TargetPlr.TextColor3 = Color3.fromRGB(220, 13, 13);
	TargetPlr.Text = obf_cached_str[1672];
	TargetPlr.TextSize = 19;
	TargetPlr.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TargetPlr.Parent = Target;
	UIStroke_3.Name = obf_cached_str[1683];
	UIStroke_3.Color = Color3.fromRGB(165, 170, 167);
	UIStroke_3.Thickness = 1.2000000476837158;
	UIStroke_3.Parent = Target;
	Mode.Name = obf_cached_str[1689];
	Mode.Size = UDim2.new(0, 115, 0, 106);
	Mode.BorderColor3 = Color3.fromRGB(0, 0, 0);
	Mode.BackgroundTransparency = 0.44999998807907104;
	Mode.Position = UDim2.new(0.298999995, 0, -0.00800000038, 0);
	Mode.BorderSizePixel = 0;
	Mode.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	Mode.Parent = ScreenGui;
	UICorner_4.Name = obf_cached_str[1702];
	UICorner_4.Parent = Mode;
	UIGradient_4.Name = obf_cached_str[1705];
	UIGradient_4.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient_4.Parent = Mode;
	TextLabel_4.Name = obf_cached_str[1714];
	TextLabel_4.Size = UDim2.new(0, 150, 0, 42);
	TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel_4.BackgroundTransparency = 1;
	TextLabel_4.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel_4.BorderSizePixel = 0;
	TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel_4.RichText = true;
	TextLabel_4.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel_4.Text = obf_cached_str[1729];
	TextLabel_4.TextSize = 28;
	TextLabel_4.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel_4.Parent = Mode;
	ModeText.Name = obf_cached_str[1740];
	ModeText.Size = UDim2.new(0, 115, 0, 50);
	ModeText.BorderColor3 = Color3.fromRGB(0, 0, 0);
	ModeText.BackgroundTransparency = 1;
	ModeText.Position = UDim2.new(0, 0, 0.198113203, 0);
	ModeText.BorderSizePixel = 0;
	ModeText.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	ModeText.TextColor3 = Color3.fromRGB(220, 13, 13);
	ModeText.Text = obf_cached_str[1754];
	ModeText.TextSize = 52;
	ModeText.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	ModeText.Parent = Mode;
	UIStroke_4.Name = obf_cached_str[1765];
	UIStroke_4.Color = Color3.fromRGB(165, 170, 167);
	UIStroke_4.Thickness = 1.2000000476837158;
	UIStroke_4.Parent = Mode;
	Catchable.Name = obf_cached_str[1771];
	Catchable.Size = UDim2.new(0, 115, 0, 106);
	Catchable.BorderColor3 = Color3.fromRGB(0, 0, 0);
	Catchable.BackgroundTransparency = 0.44999998807907104;
	Catchable.Position = UDim2.new(0.381919622, 0, -0.00773477927, 0);
	Catchable.BorderSizePixel = 0;
	Catchable.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	Catchable.Parent = ScreenGui;
	UICorner_5.Name = obf_cached_str[1784];
	UICorner_5.Parent = Catchable;
	UIGradient_5.Name = obf_cached_str[1787];
	UIGradient_5.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient_5.Parent = Catchable;
	TextLabel_5.Name = obf_cached_str[1796];
	TextLabel_5.Size = UDim2.new(0, 150, 0, 42);
	TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel_5.BackgroundTransparency = 1;
	TextLabel_5.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel_5.BorderSizePixel = 0;
	TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel_5.RichText = true;
	TextLabel_5.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel_5.Text = obf_cached_str[1811];
	TextLabel_5.TextSize = 28;
	TextLabel_5.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel_5.Parent = Catchable;
	CatchText.Name = obf_cached_str[1822];
	CatchText.Size = UDim2.new(0, 115, 0, 50);
	CatchText.BorderColor3 = Color3.fromRGB(0, 0, 0);
	CatchText.BackgroundTransparency = 1;
	CatchText.Position = UDim2.new(0, 0, 0.179245278, 0);
	CatchText.BorderSizePixel = 0;
	CatchText.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	CatchText.TextColor3 = Color3.fromRGB(220, 13, 13);
	CatchText.Text = obf_cached_str[1836];
	CatchText.TextSize = 67;
	CatchText.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	CatchText.Parent = Catchable;
	UIStroke_5.Name = obf_cached_str[1847];
	UIStroke_5.Color = Color3.fromRGB(165, 170, 167);
	UIStroke_5.Thickness = 1.2000000476837158;
	UIStroke_5.Parent = Catchable;
	Interceptable.Name = obf_cached_str[1853];
	Interceptable.Size = UDim2.new(0, 115, 0, 106);
	Interceptable.BorderColor3 = Color3.fromRGB(0, 0, 0);
	Interceptable.BackgroundTransparency = 0.44999998807907104;
	Interceptable.Position = UDim2.new(0.465902418, 0, -0.00773796486, 0);
	Interceptable.BorderSizePixel = 0;
	Interceptable.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	Interceptable.Parent = ScreenGui;
	UICorner_6.Name = obf_cached_str[1866];
	UICorner_6.Parent = Interceptable;
	UIGradient_6.Name = obf_cached_str[1869];
	UIGradient_6.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient_6.Parent = Interceptable;
	TextLabel_6.Name = obf_cached_str[1878];
	TextLabel_6.Size = UDim2.new(0, 150, 0, 42);
	TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel_6.BackgroundTransparency = 1;
	TextLabel_6.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel_6.BorderSizePixel = 0;
	TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel_6.RichText = true;
	TextLabel_6.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel_6.Text = obf_cached_str[1893];
	TextLabel_6.TextSize = 23;
	TextLabel_6.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel_6.Parent = Interceptable;
	IntText.Name = obf_cached_str[1904];
	IntText.Size = UDim2.new(0, 115, 0, 50);
	IntText.BorderColor3 = Color3.fromRGB(0, 0, 0);
	IntText.BackgroundTransparency = 1;
	IntText.Position = UDim2.new(0, 0, 0.188679248, 0);
	IntText.BorderSizePixel = 0;
	IntText.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	IntText.RichText = true;
	IntText.TextColor3 = Color3.fromRGB(220, 13, 13);
	IntText.Text = obf_cached_str[1919];
	IntText.TextSize = 67;
	IntText.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	IntText.Parent = Interceptable;
	UIStroke_6.Name = obf_cached_str[1930];
	UIStroke_6.Color = Color3.fromRGB(165, 170, 167);
	UIStroke_6.Thickness = 1.2000000476837158;
	UIStroke_6.Parent = Interceptable;
	ATime.Name = obf_cached_str[1936];
	ATime.Size = UDim2.new(0, 115, 0, 106);
	ATime.BorderColor3 = Color3.fromRGB(0, 0, 0);
	ATime.BackgroundTransparency = 0.44999998807907104;
	ATime.Position = UDim2.new(0.634458601, 0, -0.00793353934, 0);
	ATime.BorderSizePixel = 0;
	ATime.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	ATime.Parent = ScreenGui;
	UICorner_7.Name = obf_cached_str[1949];
	UICorner_7.Parent = ATime;
	UIGradient_7.Name = obf_cached_str[1952];
	UIGradient_7.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))});
	UIGradient_7.Parent = ATime;
	TextLabel_7.Name = obf_cached_str[1961];
	TextLabel_7.Size = UDim2.new(0, 150, 0, 42);
	TextLabel_7.BorderColor3 = Color3.fromRGB(0, 0, 0);
	TextLabel_7.BackgroundTransparency = 1;
	TextLabel_7.Position = UDim2.new(-0.156521738, 0, 0.603773594, 0);
	TextLabel_7.BorderSizePixel = 0;
	TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	TextLabel_7.RichText = true;
	TextLabel_7.TextColor3 = Color3.fromRGB(202, 202, 202);
	TextLabel_7.Text = obf_cached_str[1976];
	TextLabel_7.TextSize = 28;
	TextLabel_7.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	TextLabel_7.Parent = ATime;
	airtimetext.Name = obf_cached_str[1987];
	airtimetext.Size = UDim2.new(0, 115, 0, 50);
	airtimetext.BorderColor3 = Color3.fromRGB(0, 0, 0);
	airtimetext.BackgroundTransparency = 1;
	airtimetext.Position = UDim2.new(0, 0, 0.179245278, 0);
	airtimetext.BorderSizePixel = 0;
	airtimetext.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	airtimetext.TextColor3 = Color3.fromRGB(220, 13, 13);
	airtimetext.Text = obf_cached_str[2001];
	airtimetext.TextSize = 61;
	airtimetext.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal);
	airtimetext.Parent = ATime;
	UIStroke_7.Name = obf_cached_str[2012];
	UIStroke_7.Color = Color3.fromRGB(165, 170, 167);
	UIStroke_7.Thickness = 1.2000000476837158;
	UIStroke_7.Parent = ATime;
	local beam = Instance.new(obf_cached_str[2018], _G[obf_cached_str[2019]].Terrain);
	local Attach0 = Instance.new(obf_cached_str[2022], _G[obf_cached_str[2023]].Terrain);
	local Attach1 = Instance.new(obf_cached_str[2026], _G[obf_cached_str[2027]].Terrain);
	local customLeads = false;
	local customLead = 18;
	local isLocked = false;
	local autopmode = false;
	_G[obf_cached_str[2029]]:GetService(obf_cached_str[2031]).InputBegan:Connect(function(input, gpe)
		if ((input.KeyCode == Enum.KeyCode.Q) and not gpe) then
			isLocked = not isLocked;
		end
	end);
	local endPartOfBeam = false;
	beam.Attachment0 = Attach0;
	beam.Attachment1 = Attach1;
	beam.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 13, 13)),ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 128, 0))});
	beam.Width0 = 0.5;
	beam.Width1 = 0.5;
	local VisPart = Instance.new(obf_cached_str[2048]);
	VisPart.Size = VisPart.Size + Vector3.new(1.2, 0, 1.2);
	VisPart.Name = obf_cached_str[2053];
	VisPart.Anchored = true;
	VisPart.Parent = _G[obf_cached_str[2056]];
	VisPart.CanCollide = false;
	VisPart.Material = Enum.Material.Neon;
	VisPart.Color = Color3.fromRGB(0, 0, 0);
	beam.Segments = 5000;
	local function grabMousePos()
		return Vector2.new(_G[obf_cached_str[2065]]:GetService(obf_cached_str[2067]):GetMouseLocation().X, _G[obf_cached_str[2070]]:GetService(obf_cached_str[2072]):GetMouseLocation().Y);
	end
	local function isVisandPos(Pos)
		local FlatIdent_78D43 = 0;
		local camPos;
		local OnScreen;
		while true do
			if (FlatIdent_78D43 == 0) then
				camPos, OnScreen = _G[obf_cached_str[2075]].CurrentCamera:WorldToViewportPoint(Pos);
				if OnScreen then
					return camPos, OnScreen;
				end
				break;
			end
		end
	end
	local Players = _G[obf_cached_str[2078]]:GetService(obf_cached_str[2080]);
	local Player = Players.LocalPlayer;
	local Char = Player.Character or Player.CharacterAdded:Wait();
	Player.CharacterAdded:Connect(function(character)
		Char = character;
	end);
	local HumanoidRootPart = Char:FindFirstChild(obf_cached_str[2088]);
	local FF2Grav = 28;
	local mse = Player:GetMouse();
	local camera = _G[obf_cached_str[2090]].CurrentCamera;
	local ClosestPlr = nil;
	local autoswr = false;
	local uis = _G[obf_cached_str[2092]]:GetService(obf_cached_str[2094]);
	local QBAIMtab = {[obf_cached_str[2095]]=false};
	local Workspace = _G[obf_cached_str[2096]]:GetService(obf_cached_str[2098]);
	local UserInputService = _G[obf_cached_str[2099]]:GetService(obf_cached_str[2101]);
	local function getNearestPlayerToMouse()
		local MousePosition = Vector2.new(mse.X, mse.Y);
		local ClosestPlayer;
		local ClosestDistance = _G[obf_cached_str[2105]].huge;
		local function getScreenPosition(part)
			local FlatIdent_20E47 = 0;
			local FlatIdent_2593F;
			local ScreenPoint;
			local onScreen;
			while true do
				if (FlatIdent_20E47 == 1) then
					onScreen = nil;
					while true do
						if (FlatIdent_2593F == 0) then
							local FlatIdent_753CB = 0;
							while true do
								if (FlatIdent_753CB == 0) then
									ScreenPoint, onScreen = _G[obf_cached_str[2107]].CurrentCamera:WorldToViewportPoint(part.Position);
									return Vector2.new(ScreenPoint.X, ScreenPoint.Y), onScreen;
								end
							end
						end
					end
					break;
				end
				if (FlatIdent_20E47 == 0) then
					FlatIdent_2593F = 0;
					ScreenPoint = nil;
					FlatIdent_20E47 = 1;
				end
			end
		end
		for _, player in ipairs(Players:GetPlayers()) do
			if ((player ~= Players.LocalPlayer) and (player.Team == Players.LocalPlayer.Team)) then
				local FlatIdent_694C5 = 0;
				local Character;
				while true do
					if (FlatIdent_694C5 == 0) then
						Character = player.Character;
						if Character then
							local FlatIdent_3B08E = 0;
							local HumanoidRootPart;
							while true do
								if (FlatIdent_3B08E == 0) then
									HumanoidRootPart = Character:FindFirstChild(obf_cached_str[2121]);
									if HumanoidRootPart then
										local FlatIdent_94AF7 = 0;
										local ScreenPosition;
										local onScreen;
										local Distance;
										while true do
											if (FlatIdent_94AF7 == 0) then
												local FlatIdent_8C744 = 0;
												while true do
													if (FlatIdent_8C744 == 1) then
														FlatIdent_94AF7 = 1;
														break;
													end
													if (FlatIdent_8C744 == 0) then
														ScreenPosition, onScreen = getScreenPosition(HumanoidRootPart);
														Distance = (ScreenPosition - MousePosition).Magnitude;
														FlatIdent_8C744 = 1;
													end
												end
											end
											if (FlatIdent_94AF7 == 1) then
												if (Distance < ClosestDistance) then
													local FlatIdent_8B9DB = 0;
													local FlatIdent_6E549;
													while true do
														if (FlatIdent_8B9DB == 0) then
															FlatIdent_6E549 = 0;
															while true do
																if (FlatIdent_6E549 == 0) then
																	ClosestPlayer = player;
																	ClosestDistance = Distance;
																	break;
																end
															end
															break;
														end
													end
												end
												break;
											end
										end
									end
									break;
								end
							end
						end
						break;
					end
				end
			end
		end
		for _, bot in ipairs(workspace:GetChildren()) do
			if (bot.Name == obf_cached_str[2125]) then
				local FlatIdent_21CA5 = 0;
				local stationA;
				local stationB;
				while true do
					if (FlatIdent_21CA5 == 0) then
						local FlatIdent_3E444 = 0;
						while true do
							if (1 == FlatIdent_3E444) then
								FlatIdent_21CA5 = 1;
								break;
							end
							if (FlatIdent_3E444 == 0) then
								stationA = bot:FindFirstChild("a");
								stationB = bot:FindFirstChild("b");
								FlatIdent_3E444 = 1;
							end
						end
					end
					if (FlatIdent_21CA5 == 1) then
						if (stationA and stationB) then
							local FlatIdent_803FB = 0;
							local bot1;
							local bot2;
							while true do
								if (FlatIdent_803FB == 1) then
									if bot1 then
										local FlatIdent_10DED = 0;
										local bot1HumanoidRootPart;
										while true do
											if (FlatIdent_10DED == 0) then
												bot1HumanoidRootPart = bot1:FindFirstChild(obf_cached_str[2131]);
												if bot1HumanoidRootPart then
													local FlatIdent_30F75 = 0;
													local bot1ScreenPosition;
													local onScreen;
													local bot1Distance;
													while true do
														if (0 == FlatIdent_30F75) then
															local FlatIdent_574A7 = 0;
															while true do
																if (FlatIdent_574A7 == 0) then
																	bot1ScreenPosition, onScreen = getScreenPosition(bot1HumanoidRootPart);
																	bot1Distance = (bot1ScreenPosition - MousePosition).Magnitude;
																	FlatIdent_574A7 = 1;
																end
																if (FlatIdent_574A7 == 1) then
																	FlatIdent_30F75 = 1;
																	break;
																end
															end
														end
														if (1 == FlatIdent_30F75) then
															if (bot1Distance < ClosestDistance) then
																local FlatIdent_1B4EE = 0;
																local FlatIdent_360E8;
																while true do
																	if (FlatIdent_1B4EE == 0) then
																		FlatIdent_360E8 = 0;
																		while true do
																			if (FlatIdent_360E8 == 0) then
																				ClosestPlayer = bot1;
																				ClosestDistance = bot1Distance;
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end
												break;
											end
										end
									end
									if bot2 then
										local FlatIdent_431E0 = 0;
										local bot2HumanoidRootPart;
										while true do
											if (FlatIdent_431E0 == 0) then
												bot2HumanoidRootPart = bot2:FindFirstChild(obf_cached_str[2134]);
												if bot2HumanoidRootPart then
													local FlatIdent_28246 = 0;
													local bot2ScreenPosition;
													local onScreen;
													local bot2Distance;
													while true do
														if (0 == FlatIdent_28246) then
															local FlatIdent_73B1E = 0;
															while true do
																if (FlatIdent_73B1E == 0) then
																	bot2ScreenPosition, onScreen = getScreenPosition(bot2HumanoidRootPart);
																	bot2Distance = (bot2ScreenPosition - MousePosition).Magnitude;
																	FlatIdent_73B1E = 1;
																end
																if (FlatIdent_73B1E == 1) then
																	FlatIdent_28246 = 1;
																	break;
																end
															end
														end
														if (FlatIdent_28246 == 1) then
															if (bot2Distance < ClosestDistance) then
																local FlatIdent_8684F = 0;
																local FlatIdent_7B2D6;
																while true do
																	if (FlatIdent_8684F == 0) then
																		FlatIdent_7B2D6 = 0;
																		while true do
																			if (FlatIdent_7B2D6 == 0) then
																				ClosestPlayer = bot2;
																				ClosestDistance = bot2Distance;
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (FlatIdent_803FB == 0) then
									bot1 = stationA:FindFirstChild(obf_cached_str[2137]);
									bot2 = stationB:FindFirstChild(obf_cached_str[2139]);
									FlatIdent_803FB = 1;
								end
							end
						end
						break;
					end
				end
			end
		end
		return ClosestPlayer;
	end
	local dradius = 20;
	local AutoAngie = false;
	local AutoPowa = false;
	local state = false;
	local function isMoving(PlayerDaddy)
		if (not string.find(PlayerDaddy.Name, obf_cached_str[2142]) or not string.find(PlayerDaddy.Name, obf_cached_str[2145])) then
			if (PlayerDaddy.Character:FindFirstChild(obf_cached_str[2148]).MoveDirection.Magnitude > 0) then
				return true;
			else
				return false;
			end
		end
	end
	local function beamProjectile(g, v0, x0, t1)
		local FlatIdent_65194 = 0;
		local c;
		local p3;
		local p2;
		local p1;
		local curve0;
		local curve1;
		local b;
		local r1;
		local u1;
		local r2;
		local u2;
		local cf1;
		local cf2;
		while true do
			local FlatIdent_218F4 = 0;
			while true do
				if (FlatIdent_218F4 == 1) then
					if (FlatIdent_65194 == 0) then
						local FlatIdent_2F95D = 0;
						while true do
							if (FlatIdent_2F95D == 1) then
								p2 = p3 - (((g * t1 * t1) + (v0 * t1)) / 3);
								p1 = ((((c * g * t1 * t1) + (0.5 * v0 * t1) + x0) - (c * (x0 + p3))) / (3 * c)) - p2;
								FlatIdent_2F95D = 2;
							end
							if (FlatIdent_2F95D == 0) then
								c = 0.5 * 0.5 * 0.5;
								p3 = (0.5 * g * t1 * t1) + (v0 * t1) + x0;
								FlatIdent_2F95D = 1;
							end
							if (FlatIdent_2F95D == 2) then
								FlatIdent_65194 = 1;
								break;
							end
						end
					end
					if (FlatIdent_65194 == 2) then
						local FlatIdent_6ACC2 = 0;
						while true do
							if (FlatIdent_6ACC2 == 0) then
								u1 = r1:Cross(b).unit;
								r2 = (p2 - p3).unit;
								FlatIdent_6ACC2 = 1;
							end
							if (FlatIdent_6ACC2 == 2) then
								FlatIdent_65194 = 3;
								break;
							end
							if (FlatIdent_6ACC2 == 1) then
								u2 = r2:Cross(b).unit;
								b = u1:Cross(r1).unit;
								FlatIdent_6ACC2 = 2;
							end
						end
					end
					break;
				end
				if (FlatIdent_218F4 == 0) then
					if (FlatIdent_65194 == 1) then
						local FlatIdent_94056 = 0;
						while true do
							if (FlatIdent_94056 == 0) then
								curve0 = (p1 - x0).magnitude;
								curve1 = (p2 - p3).magnitude;
								FlatIdent_94056 = 1;
							end
							if (2 == FlatIdent_94056) then
								FlatIdent_65194 = 2;
								break;
							end
							if (FlatIdent_94056 == 1) then
								b = (x0 - p3).unit;
								r1 = (p1 - x0).unit;
								FlatIdent_94056 = 2;
							end
						end
					end
					if (3 == FlatIdent_65194) then
						cf1 = CFrame.new(x0.x, x0.y, x0.z, r1.x, u1.x, b.x, r1.y, u1.y, b.y, r1.z, u1.z, b.z);
						cf2 = CFrame.new(p3.x, p3.y, p3.z, r2.x, u2.x, b.x, r2.y, u2.y, b.y, r2.z, u2.z, b.z);
						return curve0, -curve1, cf1, cf2;
					end
					FlatIdent_218F4 = 1;
				end
			end
		end
	end
	local function getFieldOrientation(throwerPosition, playerPosition)
		if (playerPosition.Z > 0) then
			return 1;
		else
			return -1;
		end
	end
	local function clampnum(val, minmimum, maxValue)
		return _G[obf_cached_str[2189]].min(_G[obf_cached_str[2191]].max(val, minmimum), maxValue);
	end
	local function CalculateRouteofPlayer(Playa)
		local RouteType;
		if (not string.find(Playa.Name, obf_cached_str[2195]) and not string.find(Playa.Name, obf_cached_str[2198])) then
			local FlatIdent_1DFAF = 0;
			local DirectionMoving;
			local DirectionMovingLeftRight;
			local DirectionMovingFoward;
			local Distance;
			local Direction;
			local magdist;
			local X;
			local X2;
			local Z;
			local DirectionDot;
			local Z2;
			local XZ;
			local StreakingRoutesDotProduct;
			while true do
				if (FlatIdent_1DFAF == 3) then
					XZ = Direction * Vector3.new(1, 0, 1);
					StreakingRoutesDotProduct = DirectionMoving:Dot(Z2);
					if ((StreakingRoutesDotProduct >= 0.8) or (StreakingRoutesDotProduct <= -0.8)) then
						RouteType = obf_cached_str[2201];
					elseif ((StreakingRoutesDotProduct >= 0.45) or (StreakingRoutesDotProduct <= -0.45)) then
						RouteType = obf_cached_str[2202];
					elseif ((StreakingRoutesDotProduct >= 0.2) or (StreakingRoutesDotProduct <= -0.2)) then
						RouteType = obf_cached_str[2203];
					elseif (StreakingRoutesDotProduct == 0) then
						RouteType = obf_cached_str[2204];
					end
					if (DirectionDot < 0) then
						RouteType = obf_cached_str[2205];
					end
					break;
				end
				if (FlatIdent_1DFAF == 2) then
					local FlatIdent_8B930 = 0;
					while true do
						if (FlatIdent_8B930 == 1) then
							Z2 = nil;
							if (getFieldOrientation(Player.Character:FindFirstChild(obf_cached_str[2208]), DirectionMoving) == -1) then
								Z2 = Direction * Vector3.new(0, 0, -1);
							else
								Z2 = Direction * Vector3.new(0, 0, 1);
							end
							FlatIdent_8B930 = 2;
						end
						if (2 == FlatIdent_8B930) then
							FlatIdent_1DFAF = 3;
							break;
						end
						if (FlatIdent_8B930 == 0) then
							Z = Direction * Vector3.new(0, 0, 1);
							DirectionDot = DirectionMoving:Dot(Distance);
							FlatIdent_8B930 = 1;
						end
					end
				end
				if (FlatIdent_1DFAF == 0) then
					local FlatIdent_997B = 0;
					while true do
						if (FlatIdent_997B == 2) then
							FlatIdent_1DFAF = 1;
							break;
						end
						if (1 == FlatIdent_997B) then
							DirectionMovingFoward = Playa.Character:FindFirstChild(obf_cached_str[2215]).MoveDirection.Z;
							Distance = Playa.Character:FindFirstChild(obf_cached_str[2220]).Position - Player.Character:FindFirstChild(obf_cached_str[2224]).Position;
							FlatIdent_997B = 2;
						end
						if (FlatIdent_997B == 0) then
							DirectionMoving = Playa.Character:FindFirstChild(obf_cached_str[2228]).MoveDirection;
							DirectionMovingLeftRight = Playa.Character:FindFirstChild(obf_cached_str[2232]).MoveDirection.X;
							FlatIdent_997B = 1;
						end
					end
				end
				if (FlatIdent_1DFAF == 1) then
					local FlatIdent_70D68 = 0;
					while true do
						if (FlatIdent_70D68 == 2) then
							FlatIdent_1DFAF = 2;
							break;
						end
						if (FlatIdent_70D68 == 1) then
							X = Direction * Vector3.new(1, 0, 0);
							X2 = Direction * Vector3.new(-1, 0, 0);
							FlatIdent_70D68 = 2;
						end
						if (FlatIdent_70D68 == 0) then
							Direction = Distance.Unit;
							magdist = Distance.magnitude;
							FlatIdent_70D68 = 1;
						end
					end
				end
			end
		else
			RouteType = obf_cached_str[2239];
		end
		return RouteType;
	end
	local function HorizontalRangeOfProjectile(NearestPlayer)
		local FlatIdent_8F0E4 = 0;
		local FlatIdent_622B0;
		local NearestPlayerRootPart;
		local PlayerRootPart;
		local ProjectileRange;
		local HorizontalRange;
		while true do
			if (FlatIdent_8F0E4 == 2) then
				HorizontalRange = nil;
				while true do
					if (FlatIdent_622B0 == 1) then
						PlayerRootPart = Player.Character.HumanoidRootPart;
						ProjectileRange = PlayerRootPart.Position - NearestPlayerRootPart.Position;
						FlatIdent_622B0 = 2;
					end
					if (FlatIdent_622B0 == 0) then
						NearestPlayerRootPart = nil;
						if (string.find(NearestPlayer.Name, obf_cached_str[2246]) or string.find(NearestPlayer.Name, obf_cached_str[2249])) then
							NearestPlayerRootPart = NearestPlayer:FindFirstChild(obf_cached_str[2251]);
						else
							NearestPlayerRootPart = NearestPlayer.Character.Head;
						end
						FlatIdent_622B0 = 1;
					end
					if (FlatIdent_622B0 == 2) then
						local FlatIdent_41FCA = 0;
						while true do
							if (0 == FlatIdent_41FCA) then
								HorizontalRange = Vector2.new(ProjectileRange.X, ProjectileRange.Z).Magnitude;
								return HorizontalRange;
							end
						end
					end
				end
				break;
			end
			if (FlatIdent_8F0E4 == 1) then
				PlayerRootPart = nil;
				ProjectileRange = nil;
				FlatIdent_8F0E4 = 2;
			end
			if (FlatIdent_8F0E4 == 0) then
				FlatIdent_622B0 = 0;
				NearestPlayerRootPart = nil;
				FlatIdent_8F0E4 = 1;
			end
		end
	end
	local function HighSpeedLowAngleCalcs(Grav, Speed)
		local RP = HorizontalRangeOfProjectile(getNearestPlayerToMouse());
		local Eq;
		local asin = _G[obf_cached_str[2258]].asin;
		local routee = CalculateRouteofPlayer(getNearestPlayerToMouse());
		if (routee == obf_cached_str[2260]) then
			if (RP < 150) then
				Eq = 0.52 * asin((RP * Grav) / (Speed ^ 2));
			else
				Eq = 0.47 * asin((RP * Grav) / (Speed ^ 2));
			end
		elseif (routee == obf_cached_str[2261]) then
			Eq = 0.6 * asin((RP * Grav) / (Speed ^ 2));
		elseif (routee == obf_cached_str[2262]) then
			if (RP < 150) then
				Eq = 0.85 * asin((RP * Grav) / (Speed ^ 2));
			else
				Eq = 0.88 * asin((RP * Grav) / (Speed ^ 2));
			end
		elseif (RP < 150) then
			Eq = 0.87 * asin((RP * Grav) / (Speed ^ 2));
		else
			Eq = 0.9 * asin((RP * Grav) / (Speed ^ 2));
		end
		return Eq;
	end
	local function ProjectilePeakPosition(InitialPos, Speed, g)
		local FlatIdent_4CB97 = 0;
		local timeToPeak;
		local equation;
		while true do
			if (FlatIdent_4CB97 == 0) then
				timeToPeak = -Speed.Y / g.Y;
				equation = InitialPos + (Speed * timeToPeak) + (0.5 * g * (timeToPeak ^ 2));
				FlatIdent_4CB97 = 1;
			end
			if (FlatIdent_4CB97 == 1) then
				return equation;
			end
		end
	end
	local function calculateLaunchAngle(Gravvv, FootballSpeed)
		local FlatIdent_84B7E = 0;
		local RangeYes;
		local launchAngle;
		while true do
			local FlatIdent_911F5 = 0;
			while true do
				if (0 == FlatIdent_911F5) then
					if (FlatIdent_84B7E == 0) then
						local FlatIdent_17969 = 0;
						while true do
							if (FlatIdent_17969 == 1) then
								FlatIdent_84B7E = 1;
								break;
							end
							if (FlatIdent_17969 == 0) then
								RangeYes = HorizontalRangeOfProjectile(getNearestPlayerToMouse());
								launchAngle = _G[obf_cached_str[2265]].asin((Gravvv * RangeYes) / (FootballSpeed ^ 2));
								FlatIdent_17969 = 1;
							end
						end
					end
					if (1 == FlatIdent_84B7E) then
						return launchAngle;
					end
					break;
				end
			end
		end
	end
	local function CalculateInitalVelocityYAxis(InitalVelocity, AngleNeeded)
		local FlatIdent_5CB64 = 0;
		local VelocityY;
		while true do
			if (0 == FlatIdent_5CB64) then
				local FlatIdent_627BE = 0;
				while true do
					if (FlatIdent_627BE == 0) then
						VelocityY = InitalVelocity * _G[obf_cached_str[2267]].sin(AngleNeeded);
						return VelocityY;
					end
				end
			end
		end
	end
	local function calculateInitalVelocityXAxis(InitalVelocity, AngleNeeded)
		local FlatIdent_42214 = 0;
		local VelocityX;
		while true do
			if (FlatIdent_42214 == 0) then
				local FlatIdent_11039 = 0;
				while true do
					if (FlatIdent_11039 == 0) then
						VelocityX = InitalVelocity * _G[obf_cached_str[2269]].cos(AngleNeeded);
						return VelocityX;
					end
				end
			end
		end
	end
	local function CalculateMaxHeightOfProjectile(Initalvel, angle, gravv)
		local FlatIdent_40739 = 0;
		local FlatIdent_14124;
		local InitalVelocityY;
		local Hmax;
		while true do
			if (FlatIdent_40739 == 0) then
				FlatIdent_14124 = 0;
				InitalVelocityY = nil;
				FlatIdent_40739 = 1;
			end
			if (FlatIdent_40739 == 1) then
				Hmax = nil;
				while true do
					local FlatIdent_283CA = 0;
					while true do
						if (FlatIdent_283CA == 0) then
							if (FlatIdent_14124 == 1) then
								return Hmax;
							end
							if (0 == FlatIdent_14124) then
								local FlatIdent_91637 = 0;
								while true do
									if (FlatIdent_91637 == 1) then
										FlatIdent_14124 = 1;
										break;
									end
									if (FlatIdent_91637 == 0) then
										InitalVelocityY = _G[obf_cached_str[2271]](Initalvel, angle);
										Hmax = (InitalVelocityY ^ 2) / (2 * gravv);
										FlatIdent_91637 = 1;
									end
								end
							end
							break;
						end
					end
				end
				break;
			end
		end
	end
	local function GetTimeOfFlightProjectile(FootballInitalVelocity, AngleNeeded, Grav)
		local FlatIdent_8E29D = 0;
		local TimeOfflightEquation;
		while true do
			if (FlatIdent_8E29D == 0) then
				local FlatIdent_4B4A4 = 0;
				while true do
					if (FlatIdent_4B4A4 == 0) then
						TimeOfflightEquation = (2 * FootballInitalVelocity * _G[obf_cached_str[2272]].sin(AngleNeeded)) / Grav;
						return TimeOfflightEquation;
					end
				end
			end
		end
	end
	local function TimeOfFlight2(FootballS, A, FootballDownwardGravity)
		local FlatIdent_2E6A0 = 0;
		local FlatIdent_3831;
		local VerticalVelocity;
		local Tlowest;
		while true do
			if (1 == FlatIdent_2E6A0) then
				Tlowest = nil;
				while true do
					local FlatIdent_5017E = 0;
					while true do
						if (FlatIdent_5017E == 0) then
							if (FlatIdent_3831 == 0) then
								local FlatIdent_71392 = 0;
								while true do
									if (FlatIdent_71392 == 0) then
										VerticalVelocity = CalculateInitalVelocityYAxis(FootballS, A);
										Tlowest = VerticalVelocity / FootballDownwardGravity;
										FlatIdent_71392 = 1;
									end
									if (FlatIdent_71392 == 1) then
										FlatIdent_3831 = 1;
										break;
									end
								end
							end
							if (FlatIdent_3831 == 1) then
								return Tlowest;
							end
							break;
						end
					end
				end
				break;
			end
			if (0 == FlatIdent_2E6A0) then
				FlatIdent_3831 = 0;
				VerticalVelocity = nil;
				FlatIdent_2E6A0 = 1;
			end
		end
	end
	local function calculateThrowType(ClosestPlay)
		local RP = HorizontalRangeOfProjectile(ClosestPlay);
		local r = CalculateRouteofPlayer(ClosestPlay);
		local calculatedThrowType = "";
		if ((ClosestPlay.Name == obf_cached_str[2276]) or (ClosestPlay.Name == obf_cached_str[2278])) then
			local FlatIdent_5728 = 0;
			while true do
				if (FlatIdent_5728 == 0) then
					calculatedThrowType = obf_cached_str[2279];
					ModeText.Text = calculatedThrowType;
					break;
				end
			end
		elseif ((RP <= 100) and (r == obf_cached_str[2281])) then
			local FlatIdent_1CD13 = 0;
			local FlatIdent_84478;
			while true do
				if (FlatIdent_1CD13 == 0) then
					FlatIdent_84478 = 0;
					while true do
						if (FlatIdent_84478 == 0) then
							calculatedThrowType = obf_cached_str[2282];
							ModeText.Text = calculatedThrowType;
							break;
						end
					end
					break;
				end
			end
		elseif ((RP > 100) and (r == obf_cached_str[2284])) then
			local FlatIdent_2D31C = 0;
			while true do
				if (FlatIdent_2D31C == 0) then
					calculatedThrowType = obf_cached_str[2285];
					ModeText.Text = calculatedThrowType;
					break;
				end
			end
		elseif ((RP <= 150) and (r == obf_cached_str[2287])) then
			local FlatIdent_60D19 = 0;
			local FlatIdent_950AF;
			while true do
				if (FlatIdent_60D19 == 0) then
					FlatIdent_950AF = 0;
					while true do
						if (FlatIdent_950AF == 0) then
							calculatedThrowType = obf_cached_str[2288];
							ModeText.Text = calculatedThrowType;
							break;
						end
					end
					break;
				end
			end
		elseif ((RP > 150) and (r == obf_cached_str[2290])) then
			local FlatIdent_5B2BC = 0;
			local FlatIdent_22E42;
			while true do
				if (FlatIdent_5B2BC == 0) then
					FlatIdent_22E42 = 0;
					while true do
						if (FlatIdent_22E42 == 0) then
							calculatedThrowType = obf_cached_str[2291];
							ModeText.Text = calculatedThrowType;
							break;
						end
					end
					break;
				end
			end
		elseif ((RP <= 150) and (r == obf_cached_str[2293])) then
			local FlatIdent_6C44A = 0;
			local FlatIdent_2C7C4;
			while true do
				if (FlatIdent_6C44A == 0) then
					FlatIdent_2C7C4 = 0;
					while true do
						if (FlatIdent_2C7C4 == 0) then
							calculatedThrowType = obf_cached_str[2294];
							ModeText.Text = calculatedThrowType;
							break;
						end
					end
					break;
				end
			end
		elseif ((RP > 150) and (r == obf_cached_str[2296])) then
			local FlatIdent_250F8 = 0;
			local FlatIdent_7973C;
			while true do
				if (FlatIdent_250F8 == 0) then
					FlatIdent_7973C = 0;
					while true do
						if (0 == FlatIdent_7973C) then
							calculatedThrowType = obf_cached_str[2297];
							ModeText.Text = calculatedThrowType;
							break;
						end
					end
					break;
				end
			end
		elseif ((RP <= 100) and (r == obf_cached_str[2299])) then
			calculatedThrowType = obf_cached_str[2300];
			ModeText.Text = calculatedThrowType;
		elseif ((RP > 100) and (r == obf_cached_str[2302])) then
			local FlatIdent_737D4 = 0;
			local FlatIdent_8239F;
			while true do
				if (FlatIdent_737D4 == 0) then
					FlatIdent_8239F = 0;
					while true do
						if (0 == FlatIdent_8239F) then
							calculatedThrowType = obf_cached_str[2303];
							ModeText.Text = calculatedThrowType;
							break;
						end
					end
					break;
				end
			end
		elseif ((RP <= 150) and (r == obf_cached_str[2305])) then
			local FlatIdent_669F5 = 0;
			while true do
				if (FlatIdent_669F5 == 0) then
					calculatedThrowType = obf_cached_str[2306];
					ModeText.Text = calculatedThrowType;
					break;
				end
			end
		elseif ((RP > 150) and (r == obf_cached_str[2308])) then
			local FlatIdent_11B35 = 0;
			while true do
				if (FlatIdent_11B35 == 0) then
					calculatedThrowType = obf_cached_str[2309];
					ModeText.Text = calculatedThrowType;
					break;
				end
			end
		end
	end
	local Highestpwrmode = false;
	local function OverallVelocityNeededToReachAPosition(Angie, StartPos, EndPositon, Gravity, Time)
		local FlatIdent_294A8 = 0;
		local FlatIdent_8A8EC;
		local VelocityNeeded;
		local Y;
		local Xz1;
		local xz2;
		local VelOverTime;
		local notVector;
		local Equationderived;
		local EstimatedVel;
		local VelocityTotal;
		local direction;
		local toMatch;
		local pow;
		while true do
			if (FlatIdent_294A8 == 2) then
				notVector = nil;
				Equationderived = nil;
				EstimatedVel = nil;
				FlatIdent_294A8 = 3;
			end
			if (4 == FlatIdent_294A8) then
				pow = nil;
				while true do
					if (FlatIdent_8A8EC == 0) then
						VelocityNeeded = ((EndPositon - StartPos) - (0.5 * Gravity * Time * Time)) / Time;
						Y = EndPositon - StartPos;
						Xz1 = Y * Vector3.new(0.25, 0, 0.25);
						FlatIdent_8A8EC = 1;
					end
					if (FlatIdent_8A8EC == 1) then
						local FlatIdent_40694 = 0;
						while true do
							if (FlatIdent_40694 == 1) then
								notVector = Xz1 / Xz1.Magnitude;
								FlatIdent_8A8EC = 2;
								break;
							end
							if (FlatIdent_40694 == 0) then
								xz2 = Vector2.new(Y.X, Y.Z).Magnitude;
								VelOverTime = xz2 / Time;
								FlatIdent_40694 = 1;
							end
						end
					end
					if (FlatIdent_8A8EC == 2) then
						local FlatIdent_7C07E = 0;
						while true do
							if (FlatIdent_7C07E == 1) then
								VelocityTotal = StartPos + EstimatedVel;
								FlatIdent_8A8EC = 3;
								break;
							end
							if (FlatIdent_7C07E == 0) then
								Equationderived = notVector * VelOverTime;
								EstimatedVel = Equationderived + Vector3.new(0, VelocityNeeded.Y, 0);
								FlatIdent_7C07E = 1;
							end
						end
					end
					if (FlatIdent_8A8EC == 4) then
						if Highestpwrmode then
							return EstimatedVel, direction, clampnum(_G[obf_cached_str[2319]].round(pow), 85, 95);
						else
							return EstimatedVel, direction, clampnum(_G[obf_cached_str[2321]].round(pow), 0, 95);
						end
						break;
					end
					if (FlatIdent_8A8EC == 3) then
						direction = (VelocityTotal - StartPos).unit;
						toMatch = 0.05;
						pow = EstimatedVel.Magnitude + toMatch;
						FlatIdent_8A8EC = 4;
					end
				end
				break;
			end
			if (FlatIdent_294A8 == 1) then
				Xz1 = nil;
				xz2 = nil;
				VelOverTime = nil;
				FlatIdent_294A8 = 2;
			end
			if (FlatIdent_294A8 == 3) then
				VelocityTotal = nil;
				direction = nil;
				toMatch = nil;
				FlatIdent_294A8 = 4;
			end
			if (0 == FlatIdent_294A8) then
				FlatIdent_8A8EC = 0;
				VelocityNeeded = nil;
				Y = nil;
				FlatIdent_294A8 = 1;
			end
		end
	end
	local function CalculateHeightOfTwoPositions(Start, End)
		local FlatIdent_429CF = 0;
		local Dis;
		local h;
		while true do
			local FlatIdent_48C32 = 0;
			while true do
				if (FlatIdent_48C32 == 0) then
					if (FlatIdent_429CF == 1) then
						return h;
					end
					if (FlatIdent_429CF == 0) then
						local FlatIdent_8BE6E = 0;
						while true do
							if (FlatIdent_8BE6E == 0) then
								Dis = Start - End;
								h = Dis.Y;
								FlatIdent_8BE6E = 1;
							end
							if (FlatIdent_8BE6E == 1) then
								FlatIdent_429CF = 1;
								break;
							end
						end
					end
					break;
				end
			end
		end
	end
	local function getThrowType()
		return tostring(ModeText.Text);
	end
	_G[obf_cached_str[2327]]:GetService(obf_cached_str[2329]).InputBegan:Connect(function(input, gameProcessedEvent)
		local FlatIdent_4ED6B = 0;
		local ThrowTypee;
		while true do
			if (FlatIdent_4ED6B == 0) then
				ThrowTypee = getThrowType();
				if not autopmode then
					if ((input.KeyCode == Enum.KeyCode.C) and (ThrowTypee == obf_cached_str[2335]) and not gameProcessedEvent) then
						ModeText.Text = obf_cached_str[2337];
					elseif ((input.KeyCode == Enum.KeyCode.C) and (ThrowTypee == obf_cached_str[2341]) and not gameProcessedEvent) then
						ModeText.Text = obf_cached_str[2343];
					elseif ((input.KeyCode == Enum.KeyCode.C) and (ThrowTypee == obf_cached_str[2347]) and not gameProcessedEvent) then
						ModeText.Text = obf_cached_str[2349];
					elseif ((input.KeyCode == Enum.KeyCode.C) and (ThrowTypee == obf_cached_str[2353]) and not gameProcessedEvent) then
						ModeText.Text = obf_cached_str[2355];
					elseif ((input.KeyCode == Enum.KeyCode.C) and (ThrowTypee == obf_cached_str[2359]) and not gameProcessedEvent) then
						ModeText.Text = obf_cached_str[2361];
					elseif ((input.KeyCode == Enum.KeyCode.C) and (ThrowTypee == obf_cached_str[2365]) and not gameProcessedEvent) then
						ModeText.Text = obf_cached_str[2367];
					end
				end
				break;
			end
		end
	end);
	local function CalculateHorizandVeri(TimeOFF, End, Beginning, GravV)
		local FlatIdent_F3CC = 0;
		local FlatIdent_9195A;
		local Displace;
		local Xaxis;
		local ZAxis;
		local YAXis;
		local XYZVector3;
		local Horizontally;
		local HorizVelNeeded;
		local UpWardVel;
		local UpWARDVelneeded;
		while true do
			if (FlatIdent_F3CC == 0) then
				FlatIdent_9195A = 0;
				Displace = nil;
				Xaxis = nil;
				ZAxis = nil;
				FlatIdent_F3CC = 1;
			end
			if (FlatIdent_F3CC == 2) then
				UpWardVel = nil;
				UpWARDVelneeded = nil;
				while true do
					local FlatIdent_781FA = 0;
					while true do
						if (FlatIdent_781FA == 0) then
							if (FlatIdent_9195A == 1) then
								ZAxis = Displace.Z;
								YAXis = CalculateHeightOfTwoPositions(Beginning, End);
								FlatIdent_9195A = 2;
							end
							if (FlatIdent_9195A == 4) then
								local FlatIdent_30E0D = 0;
								while true do
									if (FlatIdent_30E0D == 0) then
										UpWARDVelneeded = UpWardVel / TimeOFF;
										return UpWardVel, HorizVelNeeded;
									end
								end
							end
							FlatIdent_781FA = 1;
						end
						if (2 == FlatIdent_781FA) then
							if (FlatIdent_9195A == 3) then
								local FlatIdent_975F6 = 0;
								while true do
									if (FlatIdent_975F6 == 0) then
										HorizVelNeeded = Horizontally / TimeOFF;
										UpWardVel = YAXis - (0.5 * -GravV * (TimeOFF ^ 2));
										FlatIdent_975F6 = 1;
									end
									if (FlatIdent_975F6 == 1) then
										FlatIdent_9195A = 4;
										break;
									end
								end
							end
							break;
						end
						if (FlatIdent_781FA == 1) then
							if (FlatIdent_9195A == 2) then
								XYZVector3 = Vector3.new(Xaxis, YAXis, ZAxis);
								Horizontally = Vector2.new(Xaxis, Zxis).magnitude;
								FlatIdent_9195A = 3;
							end
							if (0 == FlatIdent_9195A) then
								Displace = Beginning - End;
								Xaxis = Displace.X;
								FlatIdent_9195A = 1;
							end
							FlatIdent_781FA = 2;
						end
					end
				end
				break;
			end
			if (FlatIdent_F3CC == 1) then
				YAXis = nil;
				XYZVector3 = nil;
				Horizontally = nil;
				HorizVelNeeded = nil;
				FlatIdent_F3CC = 2;
			end
		end
	end
	local function CalculateHeightOfTwoPositions(Start, End)
		local FlatIdent_7A554 = 0;
		local FlatIdent_3AF6C;
		local Dis;
		local h;
		while true do
			if (FlatIdent_7A554 == 1) then
				h = nil;
				while true do
					local FlatIdent_2399A = 0;
					while true do
						if (FlatIdent_2399A == 0) then
							if (1 == FlatIdent_3AF6C) then
								return h;
							end
							if (FlatIdent_3AF6C == 0) then
								local FlatIdent_4F6F9 = 0;
								while true do
									if (FlatIdent_4F6F9 == 1) then
										FlatIdent_3AF6C = 1;
										break;
									end
									if (FlatIdent_4F6F9 == 0) then
										Dis = Start - End;
										h = Dis.Y;
										FlatIdent_4F6F9 = 1;
									end
								end
							end
							break;
						end
					end
				end
				break;
			end
			if (FlatIdent_7A554 == 0) then
				FlatIdent_3AF6C = 0;
				Dis = nil;
				FlatIdent_7A554 = 1;
			end
		end
	end
	local function isBotMoving(SpeedOFBot)
		if (SpeedOFBot == Vector3.new(0, 0, 0)) then
			return false;
		else
			return true;
		end
	end
	local function getMostIsolatedPlayer(radius)
		local Players = _G[obf_cached_str[2375]]:GetService(obf_cached_str[2377]);
		local mostIsolatedPlayer = nil;
		local minNearbyCount = _G[obf_cached_str[2378]].huge;
		local function isBot(name)
			return string.find(name, obf_cached_str[2381]) or string.find(name, obf_cached_str[2383]);
		end
		local function countPlayersNearby(player)
			local FlatIdent_45CCF = 0;
			local count;
			local playerPos;
			while true do
				local FlatIdent_1438D = 0;
				while true do
					if (FlatIdent_1438D == 1) then
						if (FlatIdent_45CCF == 1) then
							if not playerPos then
								return count;
							end
							if (_G[obf_cached_str[2384]].PlaceId == 8206123457) then
								for _, otherPlayer in ipairs(Players:GetPlayers()) do
									if ((otherPlayer ~= player) and otherPlayer.Character and (otherPlayer ~= Player)) then
										local FlatIdent_6149A = 0;
										local FlatIdent_31AE7;
										local otherPos;
										local dist;
										while true do
											if (FlatIdent_6149A == 1) then
												dist = nil;
												while true do
													if (0 == FlatIdent_31AE7) then
														local FlatIdent_7902 = 0;
														while true do
															if (0 == FlatIdent_7902) then
																otherPos = otherPlayer.Character:FindFirstChild(obf_cached_str[2390]).Position;
																dist = (otherPos - playerPos).magnitude;
																FlatIdent_7902 = 1;
															end
															if (FlatIdent_7902 == 1) then
																FlatIdent_31AE7 = 1;
																break;
															end
														end
													end
													if (1 == FlatIdent_31AE7) then
														if (dist <= radius) then
															count = count + 1;
														end
														break;
													end
												end
												break;
											end
											if (FlatIdent_6149A == 0) then
												FlatIdent_31AE7 = 0;
												otherPos = nil;
												FlatIdent_6149A = 1;
											end
										end
									end
								end
							else
								for _, otherPlayer in ipairs(Players:GetPlayers()) do
									if ((otherPlayer ~= player) and otherPlayer.Character and (otherPlayer.Team ~= player.Team) and (otherPlayer ~= Player)) then
										local FlatIdent_4058F = 0;
										local otherPos;
										local dist;
										while true do
											if (FlatIdent_4058F == 1) then
												if (dist <= radius) then
													count = count + 1;
												end
												break;
											end
											if (FlatIdent_4058F == 0) then
												local FlatIdent_2449F = 0;
												while true do
													if (FlatIdent_2449F == 1) then
														FlatIdent_4058F = 1;
														break;
													end
													if (FlatIdent_2449F == 0) then
														otherPos = otherPlayer.Character:FindFirstChild(obf_cached_str[2399]).Position;
														dist = (otherPos - playerPos).magnitude;
														FlatIdent_2449F = 1;
													end
												end
											end
										end
									end
								end
							end
							FlatIdent_45CCF = 2;
						end
						break;
					end
					if (FlatIdent_1438D == 0) then
						if (FlatIdent_45CCF == 0) then
							local FlatIdent_9763E = 0;
							while true do
								if (FlatIdent_9763E == 0) then
									count = 0;
									playerPos = player.Character and player.Character:FindFirstChild(obf_cached_str[2405]) and player.Character.HumanoidRootPart.Position;
									FlatIdent_9763E = 1;
								end
								if (FlatIdent_9763E == 1) then
									FlatIdent_45CCF = 1;
									break;
								end
							end
						end
						if (2 == FlatIdent_45CCF) then
							return count;
						end
						FlatIdent_1438D = 1;
					end
				end
			end
		end
		if (_G[obf_cached_str[2409]].PlaceId == 8206123457) then
			for _, player in ipairs(Players:GetPlayers()) do
				if (player.Character and not isBot(player.Name) and (player ~= Player)) then
					local FlatIdent_6C782 = 0;
					local nearbyCount;
					while true do
						if (FlatIdent_6C782 == 0) then
							nearbyCount = countPlayersNearby(player);
							if (nearbyCount < minNearbyCount) then
								local FlatIdent_5FC42 = 0;
								local FlatIdent_243F3;
								while true do
									if (FlatIdent_5FC42 == 0) then
										FlatIdent_243F3 = 0;
										while true do
											if (FlatIdent_243F3 == 0) then
												minNearbyCount = nearbyCount;
												mostIsolatedPlayer = player;
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
		else
			for _, player in ipairs(Players:GetPlayers()) do
				if (player.Character and (player.Team == Players.LocalPlayer.Team) and (player ~= Player)) then
					local FlatIdent_8EAFE = 0;
					local nearbyCount;
					while true do
						if (FlatIdent_8EAFE == 0) then
							nearbyCount = countPlayersNearby(player);
							if (nearbyCount < minNearbyCount) then
								local FlatIdent_5C408 = 0;
								while true do
									if (FlatIdent_5C408 == 0) then
										minNearbyCount = nearbyCount;
										mostIsolatedPlayer = player;
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
		end
		return mostIsolatedPlayer;
	end
	local function BotEstimatedVel(Time, Bot)
		local Speed = Bot:FindFirstChild(obf_cached_str[2420]).Velocity;
		local TOFF = Time;
		local TypeThroww = getThrowType();
		local Botequation;
		local LeadNumtabBot3;
		local LeadNumtabBot1;
		if isBotMoving(Bot:FindFirstChild(obf_cached_str[2423]).Velocity) then
			local FlatIdent_8EF05 = 0;
			local FlatIdent_42B98;
			while true do
				if (FlatIdent_8EF05 == 0) then
					FlatIdent_42B98 = 0;
					while true do
						if (FlatIdent_42B98 == 0) then
							LeadNumtabBot3 = {[obf_cached_str[2425]]=Vector3.new(-1, 1.25, -6),[obf_cached_str[2427]]=Vector3.new(-2, 2, -11),[obf_cached_str[2429]]=Vector3.new(-1.25, 1.5, -9),[obf_cached_str[2431]]=Vector3.new(-0.09, 0.09, -4),[obf_cached_str[2433]]=Vector3.new(0, 0, 0),[obf_cached_str[2435]]=Vector3.new(-5, -1, -1.25),[obf_cached_str[2437]]=Vector3.new(-1, 2.25, -5)};
							LeadNumtabBot1 = {[obf_cached_str[2439]]=Vector3.new(1, 1.25, 6),[obf_cached_str[2441]]=Vector3.new(2, 2, 11),[obf_cached_str[2443]]=Vector3.new(1.25, 1.5, 9),[obf_cached_str[2445]]=Vector3.new(0.09, 0.09, 4),[obf_cached_str[2447]]=Vector3.new(0, 0, 0),[obf_cached_str[2449]]=Vector3.new(5, 1, 1.25),[obf_cached_str[2451]]=Vector3.new(1, 2, 5)};
							break;
						end
					end
					break;
				end
			end
		else
			local FlatIdent_74339 = 0;
			while true do
				if (FlatIdent_74339 == 0) then
					LeadNumtabBot3 = {[obf_cached_str[2453]]=Vector3.new(0, 0, 0),[obf_cached_str[2455]]=Vector3.new(0, 0, 0),[obf_cached_str[2457]]=Vector3.new(0, 0, 0),[obf_cached_str[2459]]=Vector3.new(0, 0, 0),[obf_cached_str[2461]]=Vector3.new(0, 0, 0),[obf_cached_str[2463]]=Vector3.new(0, 0, 0),[obf_cached_str[2465]]=Vector3.new(0, 4, 0)};
					LeadNumtabBot1 = {[obf_cached_str[2467]]=Vector3.new(0, 0, 0),[obf_cached_str[2469]]=Vector3.new(0, 0, 0),[obf_cached_str[2471]]=Vector3.new(0, 0, 0),[obf_cached_str[2473]]=Vector3.new(0, 0, 0),[obf_cached_str[2475]]=Vector3.new(0, 0, 0),[obf_cached_str[2477]]=Vector3.new(0, 0, 0),[obf_cached_str[2479]]=Vector3.new(0, 5, 0)};
					break;
				end
			end
		end
		local TimeAccount = Speed * Time;
		if ((Bot.Name == obf_cached_str[2482]) and isBotMoving(Bot:FindFirstChild(obf_cached_str[2484]).Velocity)) then
			Botequation = Bot:FindFirstChild(obf_cached_str[2487]).Position + TimeAccount + LeadNumtabBot3[TypeThroww];
		elseif ((Bot.Name == obf_cached_str[2490]) and isBotMoving(Bot:FindFirstChild(obf_cached_str[2492]).Velocity)) then
			Botequation = Bot:FindFirstChild(obf_cached_str[2495]).Position + TimeAccount + LeadNumtabBot1[TypeThroww];
		elseif ((Bot.Name == obf_cached_str[2498]) and not isBotMoving(Bot:FindFirstChild(obf_cached_str[2500]).Velocity)) then
			Botequation = Bot:FindFirstChild(obf_cached_str[2503]).Position + LeadNumtabBot3[TypeThroww];
		elseif ((Bot.Name == obf_cached_str[2506]) and not isBotMoving(Bot:FindFirstChild(obf_cached_str[2508]).Velocity)) then
			Botequation = Bot:FindFirstChild(obf_cached_str[2511]).Position;
		end
		return Botequation;
	end
	local function toThrowDirection(HVelocity, VVelocity, Time, Gravity, Beginning, End)
		local FlatIdent_20415 = 0;
		local FlatIdent_4BE15;
		local XThroughZVelocity;
		local UPVel;
		local PositionFromTwoPoints;
		local UpWardVelocityOffset;
		local FowardAndBackward;
		local toSide;
		local BothAxis;
		local DirectionMag;
		local DirectionUnit;
		local DirectionNormalVec3;
		local DivisonToCalcAverage;
		local HorizontalVelocityAccountedfor;
		local VelocityOffsetAccountedFor;
		while true do
			if (FlatIdent_20415 == 1) then
				UpWardVelocityOffset = nil;
				FowardAndBackward = nil;
				toSide = nil;
				BothAxis = nil;
				FlatIdent_20415 = 2;
			end
			if (2 == FlatIdent_20415) then
				DirectionMag = nil;
				DirectionUnit = nil;
				DirectionNormalVec3 = nil;
				DivisonToCalcAverage = nil;
				FlatIdent_20415 = 3;
			end
			if (FlatIdent_20415 == 0) then
				FlatIdent_4BE15 = 0;
				XThroughZVelocity = nil;
				UPVel = nil;
				PositionFromTwoPoints = nil;
				FlatIdent_20415 = 1;
			end
			if (FlatIdent_20415 == 3) then
				HorizontalVelocityAccountedfor = nil;
				VelocityOffsetAccountedFor = nil;
				while true do
					local FlatIdent_3086F = 0;
					while true do
						if (1 == FlatIdent_3086F) then
							if (0 == FlatIdent_4BE15) then
								XThroughZVelocity = HVelocity;
								UPVel = VVelocity;
								PositionFromTwoPoints = Beginning - End;
								UpWardVelocityOffset = Vector3.new(0, UPVel, 0);
								FlatIdent_4BE15 = 1;
							end
							if (2 == FlatIdent_4BE15) then
								DirectionUnit = (PositionFromTwoPoints * BothAxis).Unit;
								DirectionNormalVec3 = PositionFromTwoPoints * BothAxis;
								DivisonToCalcAverage = DirectionNormalVec3 / DirectionMag;
								HorizontalVelocityAccountedfor = DivisonToCalcAverage * XThroughZVelocity;
								FlatIdent_4BE15 = 3;
							end
							break;
						end
						if (FlatIdent_3086F == 0) then
							if (FlatIdent_4BE15 == 1) then
								local FlatIdent_7A97F = 0;
								while true do
									if (FlatIdent_7A97F == 0) then
										FowardAndBackward = Vector3.new(0, 0, PositionFromTwoPoints.Z);
										toSide = Vector3.new(PositionFromTwoPoints.X, 0, 0);
										FlatIdent_7A97F = 1;
									end
									if (2 == FlatIdent_7A97F) then
										FlatIdent_4BE15 = 2;
										break;
									end
									if (FlatIdent_7A97F == 1) then
										BothAxis = Vector3.new(1, 0, 1);
										DirectionMag = (PositionFromTwoPoints * BothAxis).magnitude;
										FlatIdent_7A97F = 2;
									end
								end
							end
							if (FlatIdent_4BE15 == 3) then
								local FlatIdent_5DC1F = 0;
								while true do
									if (FlatIdent_5DC1F == 0) then
										VelocityOffsetAccountedFor = HorizontalVelocityAccountedfor + UpWardVelocityOffset;
										return VelocityOffsetAccountedFor;
									end
								end
							end
							FlatIdent_3086F = 1;
						end
					end
				end
				break;
			end
		end
	end
	local function getOffsetPredictionBasedOnRouteandThrowType(Route, ThrowType)
		if QBAIMtab.OffSetBased then
			local FlatIdent_28DA2 = 0;
			local closestPlrtomouse;
			local CalculatedRoute;
			local LeftandRightXOf;
			local LeftandRightZOf;
			local FowardXOf;
			local FowardZOf;
			local BackwardXOf;
			local BackwardZOf;
			while true do
				if (FlatIdent_28DA2 == 3) then
					BackwardXOf = nil;
					BackwardZOf = nil;
					FlatIdent_28DA2 = 4;
				end
				if (0 == FlatIdent_28DA2) then
					closestPlrtomouse = getNearestPlayerToMouse();
					CalculatedRoute = CalculateRouteofPlayer(closestPlrtomouse);
					FlatIdent_28DA2 = 1;
				end
				if (FlatIdent_28DA2 == 1) then
					LeftandRightXOf = nil;
					LeftandRightZOf = nil;
					FlatIdent_28DA2 = 2;
				end
				if (FlatIdent_28DA2 == 2) then
					FowardXOf = nil;
					FowardZOf = nil;
					FlatIdent_28DA2 = 3;
				end
				if (FlatIdent_28DA2 == 4) then
					if ((Route == obf_cached_str[2522]) and (ThrowType == obf_cached_str[2523])) then
						local FlatIdent_51B8F = 0;
						while true do
							if (FlatIdent_51B8F == 0) then
								LeftandRightXOf = 0.28;
								LeftandRightZOf = 0.25;
								break;
							end
						end
					elseif ((Route == obf_cached_str[2524]) or (obf_cached_str[2525] and (ThrowType == obf_cached_str[2526]))) then
						local FlatIdent_6E23 = 0;
						while true do
							if (FlatIdent_6E23 == 0) then
								FowardXOf = 0.27;
								FowardZOf = 0.35;
								FlatIdent_6E23 = 1;
							end
							if (FlatIdent_6E23 == 1) then
								BackwardXOf = 0.015;
								BackwardZOf = 0.2;
								break;
							end
						end
					elseif ((Route == obf_cached_str[2527]) and (ThrowType == obf_cached_str[2528])) then
						local FlatIdent_7DCBC = 0;
						while true do
							if (FlatIdent_7DCBC == 0) then
								LeftandRightXOf = 0.45;
								LeftandRightZOf = 0.35;
								break;
							end
						end
					end
					break;
				end
			end
		end
	end
	local Highlight = Instance.new(obf_cached_str[2530]);
	Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop;
	local function updateHighlight(nearest)
		if ((nearest and (nearest.Name ~= obf_cached_str[2535])) or (nearest.Name ~= obf_cached_str[2537])) then
			if (nearest.Character and nearest.Character:FindFirstChild(obf_cached_str[2541])) then
				local FlatIdent_50E9F = 0;
				local FlatIdent_1D5FF;
				while true do
					if (FlatIdent_50E9F == 0) then
						FlatIdent_1D5FF = 0;
						while true do
							if (FlatIdent_1D5FF == 0) then
								Highlight.Adornee = nearest.Character;
								Highlight.Parent = nearest.Character.HumanoidRootPart;
								break;
							end
						end
						break;
					end
				end
			else
				Highlight.Parent = nil;
			end
		elseif ((nearest.Name == obf_cached_str[2549]) or (nearest.Name == obf_cached_str[2551])) then
			local FlatIdent_5C0FA = 0;
			while true do
				if (FlatIdent_5C0FA == 0) then
					Highlight.Parent = nearest;
					Highlight.Adornee = nearest:FindFirstChild(obf_cached_str[2555]);
					break;
				end
			end
		elseif not nearest then
			Highlight.Parent = nil;
		end
	end
	local function getPeopleGuardingClosestToMouse(WR)
		local FlatIdent_96E11 = 0;
		local ClosestCB;
		local MaxDistance;
		while true do
			if (FlatIdent_96E11 == 1) then
				return ClosestCB;
			end
			if (0 == FlatIdent_96E11) then
				local FlatIdent_8ACD = 0;
				while true do
					if (FlatIdent_8ACD == 0) then
						ClosestCB, MaxDistance = nil, 8999999488;
						if (_G[obf_cached_str[2557]].PlaceId == 8206123457) then
							for index, CB in next, Players:GetPlayers() do
								if ((CB ~= WR) and (CB ~= Player)) then
									if (CB:IsA(obf_cached_str[2561]) and CB.Character) then
										if (not string.find(WR.Name, obf_cached_str[2565]) or not string.find(WR.Name, obf_cached_str[2568])) then
											local dist = (CB.Character:FindFirstChild(obf_cached_str[2571]).Position - WR.Character:FindFirstChild(obf_cached_str[2575]).Position).magnitude;
											if (dist < MaxDistance) then
												local FlatIdent_7450B = 0;
												local FlatIdent_8808B;
												while true do
													if (0 == FlatIdent_7450B) then
														FlatIdent_8808B = 0;
														while true do
															if (FlatIdent_8808B == 0) then
																ClosestCB = CB;
																MaxDistance = dist;
																break;
															end
														end
														break;
													end
												end
											end
										end
									end
								end
							end
						else
							for index, CB in next, Players:GetPlayers() do
								if ((CB ~= WR) and (CB ~= Player) and (CB.Team ~= Player.Team)) then
									if (CB:IsA(obf_cached_str[2582]) and CB.Character) then
										local FlatIdent_7FA78 = 0;
										local dist;
										while true do
											if (FlatIdent_7FA78 == 0) then
												dist = (CB.Character:FindFirstChild(obf_cached_str[2586]).Position - WR.Character:FindFirstChild(obf_cached_str[2590]).Position).magnitude;
												if (dist < MaxDistance) then
													local FlatIdent_2C453 = 0;
													while true do
														if (FlatIdent_2C453 == 0) then
															ClosestCB = CB;
															MaxDistance = dist;
															break;
														end
													end
												end
												break;
											end
										end
									end
								end
							end
						end
						FlatIdent_8ACD = 1;
					end
					if (1 == FlatIdent_8ACD) then
						FlatIdent_96E11 = 1;
						break;
					end
				end
			end
		end
	end
	local function Interceptable(Corner, LandingPos, t)
		if (Corner and Corner.Character) then
			local FlatIdent_96CB6 = 0;
			local FlatIdent_59521;
			local Dist;
			local WalksSpeedOFPlr;
			local DiveingNumberAccountedFor;
			local eqq;
			local Percent;
			local HighestThreshHold;
			while true do
				if (FlatIdent_96CB6 == 2) then
					eqq = nil;
					Percent = nil;
					FlatIdent_96CB6 = 3;
				end
				if (FlatIdent_96CB6 == 0) then
					FlatIdent_59521 = 0;
					Dist = nil;
					FlatIdent_96CB6 = 1;
				end
				if (FlatIdent_96CB6 == 3) then
					HighestThreshHold = nil;
					while true do
						if (FlatIdent_59521 == 1) then
							local FlatIdent_4D337 = 0;
							while true do
								if (FlatIdent_4D337 == 1) then
									FlatIdent_59521 = 2;
									break;
								end
								if (FlatIdent_4D337 == 0) then
									DiveingNumberAccountedFor = 0.31;
									eqq = (Dist / WalksSpeedOFPlr) - DiveingNumberAccountedFor;
									FlatIdent_4D337 = 1;
								end
							end
						end
						if (FlatIdent_59521 == 3) then
							if (eqq <= t) then
								return true;
							elseif (Dist == 0) then
								return true;
							else
								return false;
							end
							break;
						end
						if (FlatIdent_59521 == 2) then
							local FlatIdent_2BCFB = 0;
							while true do
								if (FlatIdent_2BCFB == 0) then
									Percent = Dist * 0.7;
									HighestThreshHold = Dist - Percent;
									FlatIdent_2BCFB = 1;
								end
								if (FlatIdent_2BCFB == 1) then
									FlatIdent_59521 = 3;
									break;
								end
							end
						end
						if (FlatIdent_59521 == 0) then
							local FlatIdent_94041 = 0;
							while true do
								if (1 == FlatIdent_94041) then
									FlatIdent_59521 = 1;
									break;
								end
								if (FlatIdent_94041 == 0) then
									Dist = (Corner.Character:FindFirstChild(obf_cached_str[2596]).Position - LandingPos).magnitude;
									WalksSpeedOFPlr = Corner.Character:FindFirstChild(obf_cached_str[2601]).WalkSpeed;
									FlatIdent_94041 = 1;
								end
							end
						end
					end
					break;
				end
				if (FlatIdent_96CB6 == 1) then
					WalksSpeedOFPlr = nil;
					DiveingNumberAccountedFor = nil;
					FlatIdent_96CB6 = 2;
				end
			end
		end
	end
	local function getClosestCBtoBot(BotHere)
		local FlatIdent_51A71 = 0;
		local CbBot;
		while true do
			local FlatIdent_4721F = 0;
			while true do
				if (FlatIdent_4721F == 0) then
					if (FlatIdent_51A71 == 0) then
						local FlatIdent_979B6 = 0;
						while true do
							if (FlatIdent_979B6 == 1) then
								FlatIdent_51A71 = 1;
								break;
							end
							if (0 == FlatIdent_979B6) then
								CbBot = nil;
								for index, CBBot in next, workspace:GetChildren() do
									if ((_G[obf_cached_str[2604]].PlaceId == 8206123457) and (CBBot.Name == obf_cached_str[2607])) then
										local FlatIdent_89B75 = 0;
										local FlatIdent_1009C;
										local A;
										local B;
										local ACBBot;
										local BCBBot;
										while true do
											if (FlatIdent_89B75 == 0) then
												FlatIdent_1009C = 0;
												A = nil;
												FlatIdent_89B75 = 1;
											end
											if (FlatIdent_89B75 == 1) then
												B = nil;
												ACBBot = nil;
												FlatIdent_89B75 = 2;
											end
											if (FlatIdent_89B75 == 2) then
												BCBBot = nil;
												while true do
													if (FlatIdent_1009C == 0) then
														local FlatIdent_58667 = 0;
														while true do
															if (1 == FlatIdent_58667) then
																FlatIdent_1009C = 1;
																break;
															end
															if (FlatIdent_58667 == 0) then
																A = CBBot['a'];
																B = CBBot['b'];
																FlatIdent_58667 = 1;
															end
														end
													end
													if (FlatIdent_1009C == 1) then
														local FlatIdent_7FA38 = 0;
														while true do
															if (0 == FlatIdent_7FA38) then
																ACBBot = A[obf_cached_str[2610]];
																BCBBot = B[obf_cached_str[2611]];
																FlatIdent_7FA38 = 1;
															end
															if (FlatIdent_7FA38 == 1) then
																FlatIdent_1009C = 2;
																break;
															end
														end
													end
													if (FlatIdent_1009C == 2) then
														if (BotHere.Name == obf_cached_str[2613]) then
															CbBot = ACBBot;
														elseif (BotHere.Name == obf_cached_str[2615]) then
															CbBot = BCBBot;
														end
														break;
													end
												end
												break;
											end
										end
									end
								end
								FlatIdent_979B6 = 1;
							end
						end
					end
					if (FlatIdent_51A71 == 1) then
						return CbBot;
					end
					break;
				end
			end
		end
	end
	local function botInterceptable(Corna, LandingEstimatedPos, t)
		if Corna:FindFirstChild(obf_cached_str[2617]) then
			local FlatIdent_50E34 = 0;
			local FlatIdent_61AEE;
			local BotDist;
			local WalksSpeedOFPlr;
			local DiveingNumberAccountedFor;
			local eqq;
			local Percenty;
			local Highest;
			while true do
				if (FlatIdent_50E34 == 0) then
					FlatIdent_61AEE = 0;
					BotDist = nil;
					FlatIdent_50E34 = 1;
				end
				if (FlatIdent_50E34 == 3) then
					Highest = nil;
					while true do
						if (FlatIdent_61AEE == 2) then
							Percenty = BotDist * 0.7;
							Highest = BotDist - Percenty;
							FlatIdent_61AEE = 3;
						end
						if (FlatIdent_61AEE == 1) then
							local FlatIdent_8C854 = 0;
							while true do
								if (FlatIdent_8C854 == 0) then
									DiveingNumberAccountedFor = 0.31;
									eqq = (BotDist / WalksSpeedOFPlr) - DiveingNumberAccountedFor;
									FlatIdent_8C854 = 1;
								end
								if (FlatIdent_8C854 == 1) then
									FlatIdent_61AEE = 2;
									break;
								end
							end
						end
						if (FlatIdent_61AEE == 0) then
							local FlatIdent_88550 = 0;
							while true do
								if (FlatIdent_88550 == 1) then
									FlatIdent_61AEE = 1;
									break;
								end
								if (FlatIdent_88550 == 0) then
									BotDist = (Corna:FindFirstChild(obf_cached_str[2619]).Position - LandingEstimatedPos).magnitude;
									WalksSpeedOFPlr = 20;
									FlatIdent_88550 = 1;
								end
							end
						end
						if (3 == FlatIdent_61AEE) then
							if (eqq <= t) then
								return true;
							elseif (BotDist == 0) then
								return true;
							else
								return false;
							end
							break;
						end
					end
					break;
				end
				if (FlatIdent_50E34 == 1) then
					WalksSpeedOFPlr = nil;
					DiveingNumberAccountedFor = nil;
					FlatIdent_50E34 = 2;
				end
				if (FlatIdent_50E34 == 2) then
					eqq = nil;
					Percenty = nil;
					FlatIdent_50E34 = 3;
				end
			end
		end
	end
	local function CatchAble(wr, LandingPos, TimeOfProjectileFlight)
		if (wr and wr.Character) then
			local FlatIdent_1E844 = 0;
			local Dist;
			local WalksSpeedOFPlr;
			local DiveingNumberAccountedFor;
			local eqq;
			local Percent;
			local HighestThreshHold;
			local WalkSpeed;
			while true do
				if (2 == FlatIdent_1E844) then
					Percent = Dist * 0.7;
					HighestThreshHold = Dist - Percent;
					FlatIdent_1E844 = 3;
				end
				if (FlatIdent_1E844 == 3) then
					WalkSpeed = 16;
					if (eqq <= TimeOfProjectileFlight) then
						return true;
					elseif (Dist == 0) then
						return true;
					else
						return false;
					end
					break;
				end
				if (FlatIdent_1E844 == 0) then
					local FlatIdent_1F508 = 0;
					while true do
						if (FlatIdent_1F508 == 1) then
							FlatIdent_1E844 = 1;
							break;
						end
						if (FlatIdent_1F508 == 0) then
							Dist = (wr.Character:FindFirstChild(obf_cached_str[2625]).Position - LandingPos).magnitude;
							WalksSpeedOFPlr = wr.Character:FindFirstChild(obf_cached_str[2630]).WalkSpeed;
							FlatIdent_1F508 = 1;
						end
					end
				end
				if (FlatIdent_1E844 == 1) then
					DiveingNumberAccountedFor = 0.31;
					eqq = (Dist / WalksSpeedOFPlr) - DiveingNumberAccountedFor;
					FlatIdent_1E844 = 2;
				end
			end
		end
	end
	local function botCatchAble(Wr, LandingEstimatedPoss)
		if Wr:FindFirstChild(obf_cached_str[2633]) then
			local FlatIdent_86023 = 0;
			local BotDist;
			local Percenty;
			local Highest;
			while true do
				if (FlatIdent_86023 == 1) then
					Highest = BotDist - Percenty;
					if (BotDist <= Highest) then
						return true;
					elseif (BotDist == 0) then
						return true;
					else
						return false;
					end
					break;
				end
				if (0 == FlatIdent_86023) then
					local FlatIdent_2DF5 = 0;
					while true do
						if (FlatIdent_2DF5 == 1) then
							FlatIdent_86023 = 1;
							break;
						end
						if (FlatIdent_2DF5 == 0) then
							BotDist = (Wr:FindFirstChild(obf_cached_str[2635]).Position - LandingEstimatedPoss).magnitude;
							Percenty = BotDist * 0.7;
							FlatIdent_2DF5 = 1;
						end
					end
				end
			end
		end
	end
	local function clampnum(val, minmimum, maxValue)
		return _G[obf_cached_str[2638]].min(_G[obf_cached_str[2640]].max(val, minmimum), maxValue);
	end
	local function KeepPosInBounds(TargetPos, MinX, MinZ)
		local FlatIdent_148EA = 0;
		local FlatIdent_82AB4;
		local X;
		local Y;
		local Z;
		local clampedX;
		local clampedZ;
		local ClampedVector3;
		while true do
			if (FlatIdent_148EA == 0) then
				FlatIdent_82AB4 = 0;
				X = nil;
				FlatIdent_148EA = 1;
			end
			if (FlatIdent_148EA == 3) then
				ClampedVector3 = nil;
				while true do
					local FlatIdent_2B953 = 0;
					while true do
						if (FlatIdent_2B953 == 1) then
							if (2 == FlatIdent_82AB4) then
								local FlatIdent_166CA = 0;
								while true do
									if (FlatIdent_166CA == 0) then
										clampedZ = nil;
										if (TargetPos.X < -MinX) then
											clampedX = -70.5;
										elseif (TargetPos.X > MinX) then
											clampedX = 70.5;
										elseif ((TargetPos.X > -MinX) and (TargetPos.X < MinX)) then
											clampedX = X;
										end
										FlatIdent_166CA = 1;
									end
									if (1 == FlatIdent_166CA) then
										FlatIdent_82AB4 = 3;
										break;
									end
								end
							end
							if (FlatIdent_82AB4 == 0) then
								X = TargetPos.X;
								Y = TargetPos.Y;
								FlatIdent_82AB4 = 1;
							end
							FlatIdent_2B953 = 2;
						end
						if (FlatIdent_2B953 == 0) then
							if (FlatIdent_82AB4 == 3) then
								if (TargetPos.Z < -MinZ) then
									clampedZ = -175.5;
								elseif (TargetPos.Z > MinZ) then
									clampedZ = 175.5;
								elseif ((TargetPos.Z > -MinZ) and (TargetPos.Z < MinZ)) then
									clampedZ = Z;
								end
								ClampedVector3 = Vector3.new(clampedX, Y, clampedZ);
								FlatIdent_82AB4 = 4;
							end
							if (FlatIdent_82AB4 == 1) then
								local FlatIdent_8276C = 0;
								while true do
									if (FlatIdent_8276C == 0) then
										Z = TargetPos.Z;
										clampedX = nil;
										FlatIdent_8276C = 1;
									end
									if (FlatIdent_8276C == 1) then
										FlatIdent_82AB4 = 2;
										break;
									end
								end
							end
							FlatIdent_2B953 = 1;
						end
						if (FlatIdent_2B953 == 2) then
							if (4 == FlatIdent_82AB4) then
								return ClampedVector3;
							end
							break;
						end
					end
				end
				break;
			end
			if (FlatIdent_148EA == 1) then
				Y = nil;
				Z = nil;
				FlatIdent_148EA = 2;
			end
			if (FlatIdent_148EA == 2) then
				clampedX = nil;
				clampedZ = nil;
				FlatIdent_148EA = 3;
			end
		end
	end
	local function RoundNumToHundredths(number)
		return _G[obf_cached_str[2654]].floor((number * 100) + 0.5) / 100;
	end
	local customLeadDistances = false;
	local function GetTargetPositionForWR(Time, WideReceiver)
		if (WideReceiver.Character and WideReceiver.Character:FindFirstChild(obf_cached_str[2659])) then
			local WRMovingVelocity = WideReceiver.Character:FindFirstChild(obf_cached_str[2662]).MoveDirection;
			local WRMovingVelocity2 = WideReceiver.Character:FindFirstChild(obf_cached_str[2666]).Velocity;
			local TypeThrow = getThrowType();
			local LeadNumtab;
			local fieldOrientation = getFieldOrientation(Player.Character:FindFirstChild(obf_cached_str[2670]).Position, WideReceiver.Character:FindFirstChild(obf_cached_str[2674]).MoveDirection);
			if isMoving(WideReceiver) then
				if (fieldOrientation == 1) then
					LeadNumtab = {[obf_cached_str[2676]]=Vector3.new(1, 1.65, 9),[obf_cached_str[2678]]=Vector3.new(2, 2, 11),[obf_cached_str[2680]]=Vector3.new(1.25, 1.86, 9.5),[obf_cached_str[2682]]=Vector3.new(1, 1.2, 7),[obf_cached_str[2684]]=Vector3.new(0, 0, 0),[obf_cached_str[2686]]=Vector3.new(5, 1, 1),[obf_cached_str[2688]]=Vector3.new(1, 2.25, 7.5)};
				elseif (fieldOrientation == -1) then
					LeadNumtab = {[obf_cached_str[2690]]=Vector3.new(1, 1.65, -9),[obf_cached_str[2692]]=Vector3.new(2, 2, -11),[obf_cached_str[2694]]=Vector3.new(1.25, 1.86, -9.5),[obf_cached_str[2696]]=Vector3.new(1, 1.2, -7),[obf_cached_str[2698]]=Vector3.new(0, 0, 0),[obf_cached_str[2700]]=Vector3.new(-5, 1, -1),[obf_cached_str[2702]]=Vector3.new(1, 2.25, -7.5)};
				end
			else
				LeadNumtab = {[obf_cached_str[2704]]=Vector3.new(0, 0, 0),[obf_cached_str[2706]]=Vector3.new(0, 0, 0),[obf_cached_str[2708]]=Vector3.new(0, 0, 0),[obf_cached_str[2710]]=Vector3.new(0, 0, 0),[obf_cached_str[2712]]=Vector3.new(0, 0, 0),[obf_cached_str[2714]]=Vector3.new(0, 0, 0),[obf_cached_str[2716]]=Vector3.new(0, 5, 0)};
			end
			local ThrowTypeAccountability;
			if Highestpwrmode then
				ThrowTypeAccountability = WRMovingVelocity2 * Time;
			elseif customLeads then
				if (TypeThrow == obf_cached_str[2718]) then
					ThrowTypeAccountability = WRMovingVelocity * customLead * Time;
				elseif (TypeThrow == obf_cached_str[2719]) then
					local FlatIdent_4E1DE = 0;
					local XZAXIS;
					while true do
						if (0 == FlatIdent_4E1DE) then
							XZAXIS = Vector3.new(WRMovingVelocity.X, 0, WRMovingVelocity.Z);
							ThrowTypeAccountability = XZAXIS * customLead * Time;
							break;
						end
					end
				elseif (TypeThrow == obf_cached_str[2723]) then
					ThrowTypeAccountability = WRMovingVelocity * customLead * Time;
				elseif (TypeThrow == obf_cached_str[2724]) then
					ThrowTypeAccountability = WRMovingVelocity * customLead * Time;
				elseif (TypeThrow == obf_cached_str[2725]) then
					ThrowTypeAccountability = WRMovingVelocity * customLead * Time;
				elseif (TypeThrow == obf_cached_str[2726]) then
					ThrowTypeAccountability = WRMovingVelocity * customLead * Time;
				end
			elseif (TypeThrow == obf_cached_str[2727]) then
				ThrowTypeAccountability = WRMovingVelocity * 17.5 * Time;
			elseif (TypeThrow == obf_cached_str[2728]) then
				local FlatIdent_347D3 = 0;
				local XZAXIS;
				while true do
					if (FlatIdent_347D3 == 0) then
						XZAXIS = Vector3.new(WRMovingVelocity.X, 0, WRMovingVelocity.Z);
						ThrowTypeAccountability = XZAXIS * 21 * Time;
						break;
					end
				end
			elseif (TypeThrow == obf_cached_str[2732]) then
				ThrowTypeAccountability = WRMovingVelocity * 18.5 * Time;
			elseif (TypeThrow == obf_cached_str[2733]) then
				ThrowTypeAccountability = WRMovingVelocity * 18.9 * Time;
			elseif (TypeThrow == obf_cached_str[2734]) then
				ThrowTypeAccountability = WRMovingVelocity * 19.3 * Time;
			elseif (TypeThrow == obf_cached_str[2735]) then
				ThrowTypeAccountability = WRMovingVelocity * 19.7 * Time;
			end
			local Equation;
			if Highestpwrmode then
				if isMoving(WideReceiver) then
					if (TypeThrow == obf_cached_str[2736]) then
						Equation = WideReceiver.Character:FindFirstChild(obf_cached_str[2739]).Position + LeadNumtab[TypeThrow];
					elseif (TypeThrow == obf_cached_str[2741]) then
						Equation = WideReceiver.Character:FindFirstChild(obf_cached_str[2744]).Position + ThrowTypeAccountability + LeadNumtab[TypeThrow];
					else
						Equation = WideReceiver.Character:FindFirstChild(obf_cached_str[2748]).Position + ThrowTypeAccountability + LeadNumtab[TypeThrow];
					end
				elseif (not isMoving(WideReceiver) and (TypeThrow == obf_cached_str[2750])) then
					Equation = WideReceiver.Character:FindFirstChild(obf_cached_str[2753]).Position + ThrowTypeAccountability + Vector3.new(0, 6, 0);
				else
					Equation = WideReceiver.Character:FindFirstChild(obf_cached_str[2758]).Position;
				end
			elseif isMoving(WideReceiver) then
				Equation = WideReceiver.Character.Head.Position + ThrowTypeAccountability + LeadNumtab[TypeThrow];
			elseif (not isMoving(WideReceiver) and (TypeThrow == obf_cached_str[2763])) then
				Equation = WideReceiver.Character.Head.Position + ThrowTypeAccountability + Vector3.new(0, 6, 0);
			else
				Equation = WideReceiver.Character.Head.Position;
			end
			return Equation;
		else
			local FlatIdent_12B6E = 0;
			while true do
				if (FlatIdent_12B6E == 0) then
					local FlatIdent_7AEC = 0;
					while true do
						if (FlatIdent_7AEC == 0) then
							warn(obf_cached_str[2771]);
							return Vector3.new(0, 0, 0);
						end
					end
				end
			end
		end
	end
	local Data = {[obf_cached_str[2773]]=Vector3.new(0, 0, 0),[obf_cached_str[2775]]=55,[obf_cached_str[2776]]=5,[obf_cached_str[2777]]=55,[obf_cached_str[2778]]=40,[obf_cached_str[2779]]=95,[obf_cached_str[2780]]=45,[obf_cached_str[2781]]=55,[obf_cached_str[2782]]=10};
	local function predicitLand(Velocity, Gravity, num, start, powa, timeoflight)
		local FlatIdent_9040 = 0;
		local FlatIdent_1A233;
		local Vel;
		local position;
		while true do
			if (1 == FlatIdent_9040) then
				position = nil;
				while true do
					if (FlatIdent_1A233 == 1) then
						return position;
					end
					if (FlatIdent_1A233 == 0) then
						local FlatIdent_6E103 = 0;
						while true do
							if (FlatIdent_6E103 == 1) then
								FlatIdent_1A233 = 1;
								break;
							end
							if (0 == FlatIdent_6E103) then
								Vel = powa * Velocity;
								position = start + (Vel * timeoflight) + (0.5 * Gravity * timeoflight * timeoflight);
								FlatIdent_6E103 = 1;
							end
						end
					end
				end
				break;
			end
			if (FlatIdent_9040 == 0) then
				FlatIdent_1A233 = 0;
				Vel = nil;
				FlatIdent_9040 = 1;
			end
		end
	end
	_G[obf_cached_str[2783]]:GetService(obf_cached_str[2785]).InputBegan:Connect(function(input, typeing)
		if (not AutoAngie and not typeing) then
			local TT = getThrowType();
			if (TT == obf_cached_str[2788]) then
				if ((input.KeyCode == Enum.KeyCode.R) and (Data.BulletModeAngle < 20)) then
					Data.BulletModeAngle = Data.BulletModeAngle + 5;
				elseif ((input.KeyCode == Enum.KeyCode.F) and (Data.BulletModeAngle > 5)) then
					Data.BulletModeAngle = Data.BulletModeAngle - 5;
				elseif ((input.KeyCode == Enum.KeyCode.R) and (Data.BulletModeAngle == 20)) then
					local FlatIdent_379B1 = 0;
					local FlatIdent_2C822;
					while true do
						if (0 == FlatIdent_379B1) then
							FlatIdent_2C822 = 0;
							while true do
								if (FlatIdent_2C822 == 0) then
									warn(obf_cached_str[2805]);
									Data.BulletModeAngle = Data.BulletModeAngle + 0;
									break;
								end
							end
							break;
						end
					end
				elseif ((input.KeyCode == Enum.KeyCode.F) and (Data.BulletModeAngle == 5)) then
					local FlatIdent_53EE6 = 0;
					local FlatIdent_550FD;
					while true do
						if (FlatIdent_53EE6 == 0) then
							FlatIdent_550FD = 0;
							while true do
								if (FlatIdent_550FD == 0) then
									warn(obf_cached_str[2812]);
									Data.BulletModeAngle = Data.BulletModeAngle - 0;
									break;
								end
							end
							break;
						end
					end
				end
			elseif (TT == obf_cached_str[2815]) then
				if ((input.KeyCode == Enum.KeyCode.R) and (Data.FadeModeAngle < 75)) then
					Data.FadeModeAngle = Data.FadeModeAngle + 5;
				elseif ((input.KeyCode == Enum.KeyCode.F) and (Data.FadeModeAngle > 55)) then
					Data.FadeModeAngle = Data.FadeModeAngle - 5;
				elseif ((input.KeyCode == Enum.KeyCode.R) and (Data.FadeModeAngle == 75)) then
					local FlatIdent_8B12C = 0;
					while true do
						if (FlatIdent_8B12C == 0) then
							warn(obf_cached_str[2832]);
							Data.FadeModeAngle = Data.FadeModeAngle + 0;
							break;
						end
					end
				elseif ((input.KeyCode == Enum.KeyCode.F) and (Data.FadeModeAngle == 55)) then
					local FlatIdent_3D949 = 0;
					local FlatIdent_2EAC6;
					while true do
						if (FlatIdent_3D949 == 0) then
							FlatIdent_2EAC6 = 0;
							while true do
								if (FlatIdent_2EAC6 == 0) then
									warn(obf_cached_str[2839]);
									Data.FadeModeAngle = Data.FadeModeAngle - 0;
									break;
								end
							end
							break;
						end
					end
				end
			elseif ((input.KeyCode == Enum.KeyCode.R) and (Data.Angle < 55)) then
				Data.Angle = Data.Angle + 5;
			elseif ((input.KeyCode == Enum.KeyCode.F) and (Data.Angle > 10)) then
				Data.Angle = Data.Angle - 5;
			elseif ((input.KeyCode == Enum.KeyCode.R) and (Data.Angle == 55)) then
				local FlatIdent_E68A = 0;
				local FlatIdent_6C3B3;
				while true do
					if (FlatIdent_E68A == 0) then
						FlatIdent_6C3B3 = 0;
						while true do
							if (FlatIdent_6C3B3 == 0) then
								warn(obf_cached_str[2858]);
								Data.Angle = Data.Angle + 0;
								break;
							end
						end
						break;
					end
				end
			elseif ((input.KeyCode == Enum.KeyCode.F) and (Data.Angle == 10)) then
				local FlatIdent_50913 = 0;
				local FlatIdent_3EC52;
				while true do
					if (FlatIdent_50913 == 0) then
						FlatIdent_3EC52 = 0;
						while true do
							if (FlatIdent_3EC52 == 0) then
								warn(obf_cached_str[2865]);
								Data.Angle = Data.Angle - 0;
								break;
							end
						end
						break;
					end
				end
			end
		end
	end);
	_G[obf_cached_str[2868]]:GetService(obf_cached_str[2870]).InputBegan:Connect(function(input, typein)
		if (not AutoPowa and not typein) then
			if ((input.KeyCode == Enum.KeyCode.Z) and (Data.NormalPower < Data.MaxPower)) then
				Data.NormalPower = Data.NormalPower + 5;
			elseif ((input.KeyCode == Enum.KeyCode.X) and (Data.NormalPower > Data.LowestPower)) then
				Data.NormalPower = Data.NormalPower - 5;
			elseif ((input.KeyCode == Enum.KeyCode.Z) and (Data.NormalPower == Data.MaxPower)) then
				local FlatIdent_2FE60 = 0;
				local FlatIdent_13951;
				while true do
					if (FlatIdent_2FE60 == 0) then
						FlatIdent_13951 = 0;
						while true do
							if (FlatIdent_13951 == 0) then
								Data.NormalPower = Data.NormalPower + 0;
								warn(obf_cached_str[2894]);
								break;
							end
						end
						break;
					end
				end
			elseif ((input.KeyCode == Enum.KeyCode.X) and (Data.NormalPower == Data.LowestPower)) then
				local FlatIdent_3B5E8 = 0;
				local FlatIdent_8DAB1;
				while true do
					if (FlatIdent_3B5E8 == 0) then
						FlatIdent_8DAB1 = 0;
						while true do
							if (FlatIdent_8DAB1 == 0) then
								Data.NormalPower = Data.NormalPower - 0;
								warn(obf_cached_str[2902]);
								break;
							end
						end
						break;
					end
				end
			end
		end
	end);
	local function isVector3Valid(vec3)
		return not ((vec3.X ~= vec3.X) or (vec3.Y ~= vec3.Y) or (vec3.Z ~= vec3.Z));
	end
	local ThrowingTab = {[obf_cached_str[2909]]=Vector3.new(0, 0, 0)};
	local throwingpar = Instance.new(obf_cached_str[2912]);
	throwingpar.Size = Vector3.new(1, 1, 1);
	throwingpar.Color = Color3.fromRGB(0, 0, 0);
	throwingpar.Anchored = false;
	_G[obf_cached_str[2918]]:GetService(obf_cached_str[2920]).InputBegan:Connect(function(input, gameProcessedEvent)
		if (_G[obf_cached_str[2923]].PlaceId ~= 8206123457) then
			if ((input.UserInputType == Enum.UserInputType.MouseButton1) and (_G[obf_cached_str[2928]]:GetService(obf_cached_str[2930]).LocalPlayer.PlayerGui.MainGui.Message.Text == obf_cached_str[2936]) and (_G[obf_cached_str[2937]]:GetService(obf_cached_str[2939]).Values.Status.Value == obf_cached_str[2943]) and _G[obf_cached_str[2944]]:GetService(obf_cached_str[2946]).Values.Throwable and not gameProcessedEvent) then
				if Char then
					local Football = Char:FindFirstChildOfClass(obf_cached_str[2950]);
					if Football then
						if (state == true) then
							local FlatIdent_24237 = 0;
							local start;
							local Initial;
							local Throwtype;
							local vel;
							local toThrowToDirection;
							local pow;
							local WhichOne2;
							local toLaunchAnlge;
							local TOF;
							local YesEnd;
							local PowerSir;
							local neworigin;
							local RemoteEvent;
							while true do
								if (FlatIdent_24237 == 2) then
									Throwtype = getThrowType();
									vel = nil;
									toThrowToDirection = nil;
									FlatIdent_24237 = 3;
								end
								if (FlatIdent_24237 == 1) then
									if (isLocked and not ClosestPlr) then
										if autoswr then
											if (getMostIsolatedPlayer(dradius) == nil) then
												ClosestPlr = ClosestPlr;
											else
												ClosestPlr = getMostIsolatedPlayer(dradius);
											end
										elseif (getNearestPlayerToMouse() == nil) then
											ClosestPlr = ClosestPlr;
										else
											ClosestPlr = getNearestPlayerToMouse();
										end
									end
									Initial = 95;
									Throwtype = nil;
									FlatIdent_24237 = 2;
								end
								if (FlatIdent_24237 == 3) then
									local FlatIdent_24177 = 0;
									while true do
										if (FlatIdent_24177 == 1) then
											if (Throwtype == obf_cached_str[2951]) then
												WhichOne2 = Data.FadeModeAngle;
											elseif (Throwtype == obf_cached_str[2953]) then
												WhichOne2 = Data.BulletModeAngle;
											else
												WhichOne2 = Data.Angle;
											end
											FlatIdent_24237 = 4;
											break;
										end
										if (FlatIdent_24177 == 0) then
											pow = nil;
											WhichOne2 = nil;
											FlatIdent_24177 = 1;
										end
									end
								end
								if (FlatIdent_24237 == 7) then
									neworigin = start + (ThrowingTab.Direction * 5);
									RemoteEvent = Football.Handle:FindFirstChild(obf_cached_str[2959]);
									if RemoteEvent then
										local FlatIdent_26DD5 = 0;
										local ThrowAnimation;
										while true do
											if (0 == FlatIdent_26DD5) then
												ThrowAnimation = Char.Humanoid:LoadAnimation(_G[obf_cached_str[2962]]:GetService(obf_cached_str[2964]).Animations.Throw);
												ThrowAnimation.Name = obf_cached_str[2968];
												FlatIdent_26DD5 = 1;
											end
											if (FlatIdent_26DD5 == 1) then
												ThrowAnimation:Play();
												RemoteEvent:fireServer(obf_cached_str[2971], start, neworigin + (ThrowingTab.Direction * 10000), ((_G[obf_cached_str[2973]].PlaceId == 8206123457) and PowerSir) or 95, PowerSir);
												break;
											end
										end
									else
									end
									break;
								end
								if (FlatIdent_24237 == 0) then
									local FlatIdent_23C6 = 0;
									while true do
										if (FlatIdent_23C6 == 1) then
											if not isLocked then
												if autoswr then
													ClosestPlr = getMostIsolatedPlayer(dradius);
												else
													local FlatIdent_79884 = 0;
													local nearestPlayer;
													while true do
														if (FlatIdent_79884 == 0) then
															nearestPlayer = getNearestPlayerToMouse();
															if (nearestPlayer and nearestPlayer:IsA(obf_cached_str[2976])) then
																ClosestPlr = nearestPlayer;
															end
															break;
														end
													end
												end
											end
											FlatIdent_24237 = 1;
											break;
										end
										if (FlatIdent_23C6 == 0) then
											if (state == false) then
												return;
											end
											start = Player.Character:FindFirstChild(obf_cached_str[2979]).Position;
											FlatIdent_23C6 = 1;
										end
									end
								end
								if (FlatIdent_24237 == 6) then
									local FlatIdent_67F05 = 0;
									while true do
										if (FlatIdent_67F05 == 1) then
											if AutoPowa then
												if (Throwtype == obf_cached_str[2981]) then
													PowerSir = 95;
												elseif (Throwtype == obf_cached_str[2982]) then
													PowerSir = clampnum(pow, 90, 95);
												else
													PowerSir = pow;
												end
											else
												PowerSir = Data.NormalPower;
											end
											FlatIdent_24237 = 7;
											break;
										end
										if (FlatIdent_67F05 == 0) then
											PowerSir = nil;
											vel, toThrowToDirection, pow = OverallVelocityNeededToReachAPosition(toLaunchAnlge, start, YesEnd, Vector3.new(0, -FF2Grav, 0), TOF);
											FlatIdent_67F05 = 1;
										end
									end
								end
								if (FlatIdent_24237 == 4) then
									local FlatIdent_5FBE3 = 0;
									while true do
										if (FlatIdent_5FBE3 == 0) then
											if Highestpwrmode then
												Initial = 95;
											elseif AutoPowa then
												if pow then
													Initial = pow;
												else
													Initial = 95;
												end
											else
												Initial = Data.NormalPower;
											end
											toLaunchAnlge = nil;
											FlatIdent_5FBE3 = 1;
										end
										if (FlatIdent_5FBE3 == 1) then
											if Highestpwrmode then
												if AutoAngie then
													toLaunchAnlge = HighSpeedLowAngleCalcs(FF2Grav, Initial);
												else
													toLaunchAnlge = _G[obf_cached_str[2986]].rad(WhichOne2);
												end
											elseif AutoAngie then
												if (Throwtype == obf_cached_str[2988]) then
													toLaunchAnlge = _G[obf_cached_str[2989]].rad(75);
												elseif (Throwtype == obf_cached_str[2991]) then
													toLaunchAnlge = clampnum(HighSpeedLowAngleCalcs(FF2Grav, Initial), 0, 0.296706);
												else
													toLaunchAnlge = clampnum(calculateLaunchAngle(FF2Grav, Initial), 0, 0.975);
												end
											else
												toLaunchAnlge = _G[obf_cached_str[2992]].rad(WhichOne2);
											end
											FlatIdent_24237 = 5;
											break;
										end
									end
								end
								if (5 == FlatIdent_24237) then
									local FlatIdent_876A0 = 0;
									while true do
										if (FlatIdent_876A0 == 1) then
											if (string.find(ClosestPlr.name, obf_cached_str[2996]) or string.find(ClosestPlr.name, obf_cached_str[2999])) then
												YesEnd = KeepPosInBounds(BotEstimatedVel(TOF, ClosestPlr), 70.5, 175.5);
											elseif (not string.find(ClosestPlr.name, obf_cached_str[3002]) or not string.find(ClosestPlr.name, obf_cached_str[3005])) then
												YesEnd = KeepPosInBounds(GetTargetPositionForWR(TOF, ClosestPlr), 70.5, 175.5);
											end
											FlatIdent_24237 = 6;
											break;
										end
										if (FlatIdent_876A0 == 0) then
											TOF = GetTimeOfFlightProjectile(Initial, toLaunchAnlge, FF2Grav);
											YesEnd = nil;
											FlatIdent_876A0 = 1;
										end
									end
								end
							end
						else
						end
					else
					end
				else
				end
			end
		elseif (_G[obf_cached_str[3006]].PlaceId == 8206123457) then
			if ((input.UserInputType == Enum.UserInputType.MouseButton1) and not gameProcessedEvent) then
				if Char then
					local Football = Char:FindFirstChildOfClass(obf_cached_str[3012]);
					if Football then
						if (state == true) then
							local FlatIdent_5D0DC = 0;
							local start;
							local Initial;
							local Throwtype;
							local vel;
							local toThrowToDirection;
							local pow;
							local WhichOne2;
							local toLaunchAnlge;
							local TOF;
							local YesEnd;
							local PowerSir;
							local neworigin;
							local RemoteEvent;
							while true do
								if (FlatIdent_5D0DC == 5) then
									if AutoPowa then
										if (Throwtype == obf_cached_str[3013]) then
											PowerSir = 95;
										elseif (Throwtype == obf_cached_str[3014]) then
											PowerSir = clampnum(pow, 90, 95);
										else
											PowerSir = pow;
										end
									else
										PowerSir = Data.NormalPower;
									end
									neworigin = start + (ThrowingTab.Direction * 5);
									RemoteEvent = Football.Handle:FindFirstChild(obf_cached_str[3019]);
									if RemoteEvent then
										local FlatIdent_14A6D = 0;
										local ThrowAnimation;
										while true do
											if (FlatIdent_14A6D == 1) then
												ThrowAnimation:Play();
												RemoteEvent:fireServer(obf_cached_str[3022], start, neworigin + (ThrowingTab.Direction * 10000), ((_G[obf_cached_str[3024]].PlaceId == 8206123457) and PowerSir) or 95, PowerSir);
												break;
											end
											if (FlatIdent_14A6D == 0) then
												local FlatIdent_67C5F = 0;
												while true do
													if (FlatIdent_67C5F == 1) then
														FlatIdent_14A6D = 1;
														break;
													end
													if (FlatIdent_67C5F == 0) then
														ThrowAnimation = Char.Humanoid:LoadAnimation(_G[obf_cached_str[3028]]:GetService(obf_cached_str[3030]).Animations.Throw);
														ThrowAnimation.Name = obf_cached_str[3034];
														FlatIdent_67C5F = 1;
													end
												end
											end
										end
									else
									end
									break;
								end
								if (4 == FlatIdent_5D0DC) then
									local FlatIdent_BA44 = 0;
									while true do
										if (FlatIdent_BA44 == 0) then
											YesEnd = nil;
											if (string.find(ClosestPlr.name, obf_cached_str[3037]) or string.find(ClosestPlr.name, obf_cached_str[3040])) then
												YesEnd = BotEstimatedVel(TOF, ClosestPlr);
											elseif (not string.find(ClosestPlr.name, obf_cached_str[3043]) or not string.find(ClosestPlr.name, obf_cached_str[3046])) then
												YesEnd = GetTargetPositionForWR(TOF, ClosestPlr);
											end
											FlatIdent_BA44 = 1;
										end
										if (FlatIdent_BA44 == 2) then
											FlatIdent_5D0DC = 5;
											break;
										end
										if (FlatIdent_BA44 == 1) then
											PowerSir = nil;
											vel, toThrowToDirection, pow = OverallVelocityNeededToReachAPosition(toLaunchAnlge, start, YesEnd, Vector3.new(0, -FF2Grav, 0), TOF);
											FlatIdent_BA44 = 2;
										end
									end
								end
								if (FlatIdent_5D0DC == 0) then
									if (state == false) then
										return;
									end
									start = Player.Character:FindFirstChild(obf_cached_str[3050]).Position;
									if not isLocked then
										if autoswr then
											ClosestPlr = getMostIsolatedPlayer(dradius);
										else
											local FlatIdent_89506 = 0;
											local nearestPlayer;
											while true do
												if (FlatIdent_89506 == 0) then
													nearestPlayer = getNearestPlayerToMouse();
													if (nearestPlayer and nearestPlayer:IsA(obf_cached_str[3053])) then
														ClosestPlr = nearestPlayer;
													end
													break;
												end
											end
										end
									end
									if (isLocked and not ClosestPlr) then
										if autoswr then
											if (getMostIsolatedPlayer(dradius) == nil) then
												ClosestPlr = ClosestPlr;
											else
												ClosestPlr = getMostIsolatedPlayer(20);
											end
										elseif (getNearestPlayerToMouse() == nil) then
											ClosestPlr = ClosestPlr;
										else
											ClosestPlr = getNearestPlayerToMouse();
										end
									end
									FlatIdent_5D0DC = 1;
								end
								if (FlatIdent_5D0DC == 2) then
									local FlatIdent_59212 = 0;
									while true do
										if (0 == FlatIdent_59212) then
											toThrowToDirection = nil;
											pow = nil;
											FlatIdent_59212 = 1;
										end
										if (FlatIdent_59212 == 1) then
											WhichOne2 = nil;
											if (Throwtype == obf_cached_str[3054]) then
												WhichOne2 = Data.FadeModeAngle;
											elseif (Throwtype == obf_cached_str[3056]) then
												WhichOne2 = Data.BulletModeAngle;
											else
												WhichOne2 = Data.Angle;
											end
											FlatIdent_59212 = 2;
										end
										if (FlatIdent_59212 == 2) then
											FlatIdent_5D0DC = 3;
											break;
										end
									end
								end
								if (FlatIdent_5D0DC == 1) then
									Initial = 95;
									Throwtype = nil;
									if autopmode then
										Throwtype = calculateThrowType(ClosestPlr);
									else
										Throwtype = getThrowType();
									end
									vel = nil;
									FlatIdent_5D0DC = 2;
								end
								if (FlatIdent_5D0DC == 3) then
									if Highestpwrmode then
										Initial = 95;
									elseif AutoPowa then
										if pow then
											Initial = pow;
										else
											Initial = 95;
										end
									else
										Initial = Data.NormalPower;
									end
									toLaunchAnlge = nil;
									if Highestpwrmode then
										if AutoAngie then
											toLaunchAnlge = HighSpeedLowAngleCalcs(FF2Grav, Initial);
										else
											toLaunchAnlge = _G[obf_cached_str[3060]].rad(WhichOne2);
										end
									elseif AutoAngie then
										if (Throwtype == obf_cached_str[3062]) then
											toLaunchAnlge = _G[obf_cached_str[3063]].rad(75);
										elseif (Throwtype == obf_cached_str[3065]) then
											toLaunchAnlge = clampnum(HighSpeedLowAngleCalcs(FF2Grav, Initial), 0, 0.296706);
										else
											toLaunchAnlge = clampnum(calculateLaunchAngle(FF2Grav, Initial), 0, 0.975);
										end
									else
										toLaunchAnlge = _G[obf_cached_str[3066]].rad(WhichOne2);
									end
									TOF = GetTimeOfFlightProjectile(Initial, toLaunchAnlge, FF2Grav);
									FlatIdent_5D0DC = 4;
								end
							end
						else
						end
					else
					end
				else
				end
			end
		end
	end);
	local TargetPosition;
	local PredictedRoute;
	Char.ChildAdded:Connect(function(v)
		if ((v.Name == obf_cached_str[3071]) and Char) then
			local FlatIdent_8F979 = 0;
			local children;
			while true do
				if (0 == FlatIdent_8F979) then
					children = v:GetChildren();
					if (children.Name == obf_cached_str[3074]) then
						local FlatIdent_92F79 = 0;
						local descendants;
						while true do
							if (FlatIdent_92F79 == 0) then
								descendants = children:GetChildren();
								if (descendants.Name == obf_cached_str[3077]) then
									descendants:Destroy();
								end
								break;
							end
						end
					end
					break;
				end
			end
		end
	end);
	local customBeam = false;
	task.spawn(function()
		_G[obf_cached_str[3080]]:GetService(obf_cached_str[3082]).Heartbeat:Connect(function()
			local FlatIdent_98205 = 0;
			local PredictedRoute;
			while true do
				if (FlatIdent_98205 == 1) then
					local FlatIdent_52229 = 0;
					while true do
						if (FlatIdent_52229 == 0) then
							PredictedRoute = nil;
							task.wait();
							FlatIdent_52229 = 1;
						end
						if (FlatIdent_52229 == 1) then
							FlatIdent_98205 = 2;
							break;
						end
					end
				end
				if (FlatIdent_98205 == 2) then
					if state then
						if (Player.Character and Player.Character:FindFirstChild(obf_cached_str[3089]) and ClosestPlr) then
							local FlatIdent_FD90 = 0;
							local Throwtype;
							local WhichOne;
							local FF2Grav;
							local Start;
							local power;
							local velocity;
							local direction;
							local Initial;
							local LaunchAngle;
							local TOF;
							local TargetPosition;
							local POWAA;
							while true do
								if (1 == FlatIdent_FD90) then
									Highlight.Enabled = true;
									Highlight.OutlineTransparency = 0;
									Highlight.FillColor = Color3.new(0.34117647058, 0.34117647058, 1);
									FlatIdent_FD90 = 2;
								end
								if (FlatIdent_FD90 == 6) then
									if Highestpwrmode then
										Initial = 95;
									elseif AutoPowa then
										if power then
											Initial = power;
										else
											Initial = 95;
										end
									else
										Initial = Data.NormalPower;
									end
									if Highestpwrmode then
										if AutoAngie then
											LaunchAngle = HighSpeedLowAngleCalcs(FF2Grav, Initial);
										else
											LaunchAngle = _G[obf_cached_str[3095]].rad(WhichOne);
										end
									elseif AutoAngie then
										if (Throwtype == obf_cached_str[3097]) then
											LaunchAngle = _G[obf_cached_str[3098]].rad(75);
										elseif (Throwtype == obf_cached_str[3100]) then
											LaunchAngle = clampnum(HighSpeedLowAngleCalcs(FF2Grav, Initial), 0, 0.296706);
										else
											LaunchAngle = clampnum(calculateLaunchAngle(FF2Grav, Initial), 0, 0.975);
										end
									else
										LaunchAngle = _G[obf_cached_str[3101]].rad(WhichOne);
									end
									TOF = GetTimeOfFlightProjectile(Initial, LaunchAngle, FF2Grav);
									FlatIdent_FD90 = 7;
								end
								if (FlatIdent_FD90 == 5) then
									direction = nil;
									Initial = nil;
									LaunchAngle = nil;
									FlatIdent_FD90 = 6;
								end
								if (8 == FlatIdent_FD90) then
									velocity, direction, power = OverallVelocityNeededToReachAPosition(LaunchAngle, Start, TargetPosition, Vector3.new(0, -FF2Grav, 0), TOF);
									if (power and (Initial == 95) and AutoPowa) then
										Initial = power;
									else
										Initial = Data.NormalPower;
									end
									if AutoPowa then
										if (Throwtype == obf_cached_str[3105]) then
											POWAA = 95;
										elseif (Throwtype == obf_cached_str[3106]) then
											POWAA = clampnum(power, 90, 95);
										else
											POWAA = power;
										end
									else
										POWAA = Data.NormalPower;
									end
									FlatIdent_FD90 = 9;
								end
								if (FlatIdent_FD90 == 4) then
									Start = Player.Character:FindFirstChild(obf_cached_str[3110]).Position;
									power = nil;
									velocity = nil;
									FlatIdent_FD90 = 5;
								end
								if (FlatIdent_FD90 == 3) then
									WhichOne = nil;
									if (Throwtype == obf_cached_str[3112]) then
										WhichOne = Data.FadeModeAngle;
									elseif (Throwtype == obf_cached_str[3114]) then
										WhichOne = Data.BulletModeAngle;
									else
										WhichOne = Data.Angle;
									end
									FF2Grav = 28;
									FlatIdent_FD90 = 4;
								end
								if (9 == FlatIdent_FD90) then
									if (isVector3Valid(direction) and isVector3Valid(TargetPosition)) then
										ThrowingTab.Direction = direction;
										local startAdjusted = Start + (ThrowingTab.Direction * 5);
										local ATime;
										if customBeam then
											_G[obf_cached_str[3119]] = 10;
										else
											_G[obf_cached_str[3120]] = TOF;
										end
										local curve0, curve1, cf0, cf1 = beamProjectile(Vector3.new(0, -FF2Grav, 0), POWAA * ThrowingTab.Direction, Start + (ThrowingTab.Direction * 5), _G[obf_cached_str[3124]]);
										beam.CurveSize0 = curve0;
										beam.CurveSize1 = curve1;
										beam.Attachment0.CFrame = beam.Attachment0.Parent.CFrame:inverse() * cf0;
										beam.Attachment1.CFrame = beam.Attachment1.Parent.CFrame:inverse() * cf1;
										local PeakPos = ProjectilePeakPosition(startAdjusted, velocity, Vector3.new(0, -28, 0));
										throwingpar.Parent = _G[obf_cached_str[3141]];
										throwingpar.CFrame = CFrame.new(PeakPos);
										throwingpar.Anchored = true;
										local sum = (beam.Attachment1.CFrame - beam.Attachment1.Position):Inverse();
										if (endPartOfBeam == false) then
											VisPart.CFrame = beam.Attachment1.CFrame * sum * CFrame.Angles(_G[obf_cached_str[3154]].rad(0), 0, 0);
										end
										local CamPo, OnScren = isVisandPos(VisPart.Position);
										local CamPo2, OnS = isVisandPos(beam.Attachment0.Position);
										TargetPlr.Text = ClosestPlr.Name;
										PowerNum.Text = _G[obf_cached_str[3162]](POWAA);
										if not (string.find(ClosestPlr.Name, obf_cached_str[3165]) or string.find(ClosestPlr.Name, obf_cached_str[3168])) then
											local FlatIdent_A788 = 0;
											local ClosestCB;
											while true do
												if (FlatIdent_A788 == 0) then
													ClosestCB = getPeopleGuardingClosestToMouse(ClosestPlr);
													if Interceptable(ClosestCB, VisPart.Position, TOF) then
														IntText.Text = obf_cached_str[3171];
													else
														IntText.Text = obf_cached_str[3173];
													end
													break;
												end
											end
										elseif (string.find(ClosestPlr.Name, obf_cached_str[3176]) or string.find(ClosestPlr.Name, obf_cached_str[3179])) then
											local FlatIdent_2C1E9 = 0;
											local BotCbClosest;
											while true do
												if (FlatIdent_2C1E9 == 0) then
													BotCbClosest = getClosestCBtoBot(ClosestPlr);
													if botInterceptable(BotCbClosest, VisPart.Position, TOF) then
														IntText.Text = obf_cached_str[3182];
													else
														IntText.Text = obf_cached_str[3184];
													end
													break;
												end
											end
										end
										if (not string.find(ClosestPlr.Name, obf_cached_str[3187]) and not string.find(ClosestPlr.Name, obf_cached_str[3190])) then
											local FlatIdent_6D266 = 0;
											local ClosestWRR;
											while true do
												if (FlatIdent_6D266 == 0) then
													ClosestWRR = getNearestPlayerToMouse();
													if CatchAble(ClosestWRR, VisPart.Position, TOF) then
														CatchText.Text = obf_cached_str[3193];
													else
														CatchText.Text = obf_cached_str[3195];
													end
													break;
												end
											end
										elseif (string.find(ClosestPlr.Name, obf_cached_str[3198]) or string.find(ClosestPlr.Name, obf_cached_str[3201])) then
											local FlatIdent_259C6 = 0;
											local BotCbWr;
											while true do
												if (FlatIdent_259C6 == 0) then
													BotCbWr = getNearestPlayerToMouse();
													if botCatchAble(BotCbWr, VisPart.Position) then
														CatchText.Text = obf_cached_str[3204];
													else
														CatchText.Text = obf_cached_str[3206];
													end
													break;
												end
											end
										end
										airtimetext.Text = _G[obf_cached_str[3208]](RoundNumToHundredths(TOF)) .. "s";
										if AutoAngie then
											if (Throwtype == obf_cached_str[3210]) then
												AngleNum.Text = obf_cached_str[3212];
											else
												AngleNum.Text = _G[obf_cached_str[3214]](RoundNumToHundredths(_G[obf_cached_str[3215]].deg(LaunchAngle)));
											end
										else
											AngleNum.Text = _G[obf_cached_str[3218]](WhichOne);
										end
									end
									break;
								end
								if (FlatIdent_FD90 == 7) then
									TargetPosition = nil;
									if (string.find(ClosestPlr.Name, obf_cached_str[3221]) or string.find(ClosestPlr.Name, obf_cached_str[3224])) then
										if (_G[obf_cached_str[3225]].PlaceId == 8206123457) then
											TargetPosition = BotEstimatedVel(TOF, ClosestPlr);
										elseif (_G[obf_cached_str[3227]].PlaceId ~= 8206123457) then
											TargetPosition = KeepPosInBounds(BotEstimatedVel(TOF, ClosestPlr), 70.5, 175.5);
										end
									elseif (_G[obf_cached_str[3229]].PlaceId == 8206123457) then
										TargetPosition = GetTargetPositionForWR(TOF, ClosestPlr);
									elseif (_G[obf_cached_str[3231]].PlaceId ~= 8206123457) then
										TargetPosition = KeepPosInBounds(GetTargetPositionForWR(TOF, ClosestPlr), 70.5, 175.5);
									end
									POWAA = nil;
									FlatIdent_FD90 = 8;
								end
								if (FlatIdent_FD90 == 2) then
									Highlight.OutlineColor = Color3.new(0.803921, 0.898039, 0.941176);
									if (not string.find(ClosestPlr.Name, obf_cached_str[3237]) and not string.find(ClosestPlr.Name, obf_cached_str[3240])) then
										if ClosestPlr.Character:FindFirstChild(obf_cached_str[3243]) then
											Highlight.Parent = ClosestPlr.Character;
										end
									elseif (string.find(ClosestPlr.Name, obf_cached_str[3248]) or string.find(ClosestPlr.Name, obf_cached_str[3251])) then
										Highlight.Parent = ClosestPlr;
									end
									ScreenGui.Enabled = true;
									FlatIdent_FD90 = 3;
								end
								if (FlatIdent_FD90 == 0) then
									beam.Enabled = true;
									Throwtype = nil;
									if autopmode then
										Throwtype = calculateThrowType(ClosestPlr);
									else
										Throwtype = getThrowType();
									end
									FlatIdent_FD90 = 1;
								end
							end
						else
							local FlatIdent_38DF3 = 0;
							local FlatIdent_3E76B;
							while true do
								if (FlatIdent_38DF3 == 0) then
									FlatIdent_3E76B = 0;
									while true do
										if (0 == FlatIdent_3E76B) then
											ScreenGui.Enabled = false;
											Highlight.Enabled = false;
											break;
										end
									end
									break;
								end
							end
						end
					else
						local FlatIdent_973C1 = 0;
						local FlatIdent_7C89;
						while true do
							if (FlatIdent_973C1 == 0) then
								FlatIdent_7C89 = 0;
								while true do
									if (FlatIdent_7C89 == 0) then
										beam.Enabled = false;
										ScreenGui.Enabled = false;
										FlatIdent_7C89 = 1;
									end
									if (1 == FlatIdent_7C89) then
										Highlight.Enabled = false;
										break;
									end
								end
								break;
							end
						end
					end
					break;
				end
				if (FlatIdent_98205 == 0) then
					task.wait();
					if not isLocked then
						if autoswr then
							ClosestPlr = getMostIsolatedPlayer(dradius);
						else
							ClosestPlr = getNearestPlayerToMouse();
						end
					end
					FlatIdent_98205 = 1;
				end
			end
		end);
	end);
	local ReplicatedStorage = _G[obf_cached_str[3261]]:GetService(obf_cached_str[3263]);
	local Players = _G[obf_cached_str[3264]]:GetService(obf_cached_str[3266]);
	local aRushOn = false;
	local agDist = 100;
	local LocalPlayer = Players.LocalPlayer;
	local charplr = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait();
	local hrp2, hum2;
	local function updateCharacter(character)
		local FlatIdent_30938 = 0;
		while true do
			if (FlatIdent_30938 == 1) then
				hum2 = character:WaitForChild(obf_cached_str[3272], 5);
				break;
			end
			if (FlatIdent_30938 == 0) then
				charplr = character;
				hrp2 = character:WaitForChild(obf_cached_str[3274], 5);
				FlatIdent_30938 = 1;
			end
		end
	end
	updateCharacter(charplr);
	LocalPlayer.CharacterAdded:Connect(updateCharacter);
	local function doGuarding()
		local FlatIdent_2EDA1 = 0;
		local QBValue;
		local BallCarrier;
		while true do
			if (FlatIdent_2EDA1 == 0) then
				QBValue = ReplicatedStorage:FindFirstChild(obf_cached_str[3278]) and ReplicatedStorage.Values:FindFirstChild(obf_cached_str[3281]);
				if (not QBValue or not QBValue.Value) then
					return;
				end
				FlatIdent_2EDA1 = 1;
			end
			if (FlatIdent_2EDA1 == 1) then
				BallCarrier = QBValue.Value;
				for _, player in pairs(Players:GetPlayers()) do
					if ((player ~= LocalPlayer) and (player.Team ~= LocalPlayer.Team) and (player == BallCarrier)) then
						local FlatIdent_352EF = 0;
						local car;
						while true do
							if (FlatIdent_352EF == 0) then
								car = player.Character;
								if car then
									local FlatIdent_936D7 = 0;
									local hrp;
									local hum;
									local hasBall;
									while true do
										if (FlatIdent_936D7 == 1) then
											hasBall = car:FindFirstChild(obf_cached_str[3289]);
											if (hrp and hrp2 and hum and hum2 and hasBall) then
												local FlatIdent_3BBAF = 0;
												local WS;
												local distance;
												local TimeToGet;
												while true do
													if (0 == FlatIdent_3BBAF) then
														local FlatIdent_EC80 = 0;
														while true do
															if (FlatIdent_EC80 == 0) then
																WS = 20;
																distance = (hrp.Position - hrp2.Position).Magnitude;
																FlatIdent_EC80 = 1;
															end
															if (FlatIdent_EC80 == 1) then
																FlatIdent_3BBAF = 1;
																break;
															end
														end
													end
													if (FlatIdent_3BBAF == 1) then
														TimeToGet = distance / WS;
														if (distance <= agDist) then
															local FlatIdent_1246A = 0;
															local targetPos;
															while true do
																if (FlatIdent_1246A == 0) then
																	targetPos = hrp.Position + (hum.MoveDirection * TimeToGet * WS);
																	hum2:MoveTo(targetPos);
																	break;
																end
															end
														end
														break;
													end
												end
											end
											break;
										end
										if (FlatIdent_936D7 == 0) then
											local FlatIdent_2747D = 0;
											while true do
												if (FlatIdent_2747D == 1) then
													FlatIdent_936D7 = 1;
													break;
												end
												if (0 == FlatIdent_2747D) then
													hrp = car:FindFirstChild(obf_cached_str[3297]);
													hum = car:FindFirstChild(obf_cached_str[3299]);
													FlatIdent_2747D = 1;
												end
											end
										end
									end
								end
								break;
							end
						end
					end
				end
				break;
			end
		end
	end
	task.spawn(function()
		while task.wait(0.1) do
			if aRushOn then
				doGuarding();
			end
		end
	end);
	local pvon = false;
	local pvstrength = 10;
	local pvdist = 20;
	local plr = _G[obf_cached_str[3302]]:GetService(obf_cached_str[3304]).LocalPlayer;
	local char = plr.Character;
	plr.CharacterAdded:Connect(function(character)
		char = character;
	end);
	task.spawn(function()
		_G[obf_cached_str[3310]].ChildAdded:Connect(function(child)
			while task.wait() do
				if ((child.Name == obf_cached_str[3315]) and pvon and child:IsA(obf_cached_str[3317])) then
					local FlatIdent_4CCD = 0;
					local hrp;
					local direction;
					local dist;
					while true do
						if (FlatIdent_4CCD == 0) then
							hrp = char:FindFirstChild(obf_cached_str[3319]);
							direction = (child.Position - hrp.Position).Unit;
							FlatIdent_4CCD = 1;
						end
						if (FlatIdent_4CCD == 1) then
							dist = (child.Position - hrp.Position).magnitude;
							if (dist <= pvdist) then
								hrp.Velocity = direction * pvstrength;
							end
							break;
						end
					end
				end
			end
		end);
	end);
	getgenv().antiJamOn = false;
	task.spawn(function()
		while wait() do
			for index, player in pairs(game:GetService(obf_cached_str[3330]):GetChildren()) do
				if (player ~= LocalPlayer) then
					local FlatIdent_53895 = 0;
					local char;
					while true do
						if (FlatIdent_53895 == 0) then
							char = player.Character;
							if char then
								for index, part in pairs(char:GetChildren()) do
									if (part:IsA(obf_cached_str[3335]) or (part:IsA(obf_cached_str[3337]) and part.CanCollide)) then
										if antiJamOn then
											part.CanCollide = false;
										else
											part.CanCollide = true;
										end
									end
								end
							end
							break;
						end
					end
				end
			end
		end
	end);
	local plrr = _G[obf_cached_str[3341]]:GetService(obf_cached_str[3343]).LocalPlayer;
	local charr = plr.Character;
	plrr.CharacterAdded:Connect(function(character)
		charr = character;
	end);
	local clicktpfon = false;
	local clicktpstreng = 3;
	uis.InputBegan:Connect(function(input, gameProcessedEvent)
		if ((input.KeyCode == Enum.KeyCode.F) and clicktpfon) then
			local FlatIdent_1C72A = 0;
			local hrp;
			while true do
				if (FlatIdent_1C72A == 0) then
					hrp = charr:FindFirstChild(obf_cached_str[3354]);
					hrp.CFrame = hrp.CFrame + (hrp.CFrame.LookVector * clicktpstreng);
					break;
				end
			end
		end
	end);
	local angleEnhance;
	local Players = _G[obf_cached_str[3359]]:GetService(obf_cached_str[3361]);
	local lp = Players.LocalPlayer;
	local char = lp.Character;
	lp.CharacterAdded:Connect(function(character)
		char = character;
	end);
	local function onToggle2(Value)
		local FlatIdent_7695C = 0;
		while true do
			if (FlatIdent_7695C == 0) then
				angleEnhance = Value;
				if angleEnhance then
					_G[obf_cached_str[3366]] = _G[obf_cached_str[3367]]:GetService(obf_cached_str[3369]).RenderStepped:Connect(function()
						local FlatIdent_5A134 = 0;
						local upWard;
						local lp;
						local hrp;
						local hum;
						local AngleNumBa;
						while true do
							if (FlatIdent_5A134 == 1) then
								hrp = char and char:FindFirstChild(obf_cached_str[3373]);
								hum = char and char:FindFirstChild(obf_cached_str[3375]);
								FlatIdent_5A134 = 2;
							end
							if (FlatIdent_5A134 == 0) then
								upWard = Vector3.new(0, 10, 0);
								lp = Players.LocalPlayer;
								FlatIdent_5A134 = 1;
							end
							if (FlatIdent_5A134 == 2) then
								AngleNumBa = 52.5 / 10;
								if (hrp and hum and (hum.FloorMaterial == Enum.Material.Grass) and hum.Jump) then
									hrp.Velocity = upWard * AngleNumBa;
								end
								break;
							end
						end
					end);
				elseif _G[obf_cached_str[3383]] then
					local FlatIdent_4B180 = 0;
					local FlatIdent_15E91;
					while true do
						if (FlatIdent_4B180 == 0) then
							FlatIdent_15E91 = 0;
							while true do
								if (FlatIdent_15E91 == 0) then
									_G[obf_cached_str[3384]]:Disconnect();
									_G[obf_cached_str[3386]] = nil;
									break;
								end
							end
							break;
						end
					end
				end
				break;
			end
		end
	end
	local BeOn = false;
	_G[obf_cached_str[3387]].ChildAdded:Connect(function(v)
		if ((v.Name == obf_cached_str[3391]) and v:IsA(obf_cached_str[3393]) and BeOn) then
			local FlatIdent_8C46 = 0;
			local startTime;
			local Beginning;
			local Vel3;
			local t;
			local ff2G;
			local curve0;
			local curve1;
			local cf1;
			local cf2;
			local beam;
			local Attach0;
			local Attach1;
			while true do
				if (FlatIdent_8C46 == 5) then
					Attach0.CFrame = Attach0.Parent.CFrame:inverse() * cf1;
					Attach1.CFrame = Attach1.Parent.CFrame:inverse() * cf2;
					beam.Attachment0 = Attach0;
					FlatIdent_8C46 = 6;
				end
				if (FlatIdent_8C46 == 2) then
					curve0, curve1, cf1, cf2 = beamProjectile(ff2G, Vel3, Beginning, t);
					beam = Instance.new(obf_cached_str[3404]);
					Attach0 = Instance.new(obf_cached_str[3406], _G[obf_cached_str[3407]].Terrain);
					FlatIdent_8C46 = 3;
				end
				if (FlatIdent_8C46 == 7) then
					repeat
						task.wait();
					until v.Parent ~= _G[obf_cached_str[3411]] 
					Attach0:Destroy();
					Attach1:Destroy();
					break;
				end
				if (FlatIdent_8C46 == 3) then
					Attach1 = Instance.new(obf_cached_str[3415], _G[obf_cached_str[3416]].Terrain);
					beam.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(249, 12, 12)),ColorSequenceKeypoint.new(1, Color3.fromRGB(249, 12, 12))});
					beam.Parent = _G[obf_cached_str[3425]].Terrain;
					FlatIdent_8C46 = 4;
				end
				if (1 == FlatIdent_8C46) then
					Vel3 = v.Velocity;
					t = 10;
					ff2G = Vector3.new(0, -28, 0);
					FlatIdent_8C46 = 2;
				end
				if (FlatIdent_8C46 == 0) then
					task.wait();
					startTime = _G[obf_cached_str[3430]]();
					Beginning = v.Position;
					FlatIdent_8C46 = 1;
				end
				if (FlatIdent_8C46 == 6) then
					beam.Attachment1 = Attach1;
					beam.Width0 = 0.5;
					beam.Width1 = 0.5;
					FlatIdent_8C46 = 7;
				end
				if (4 == FlatIdent_8C46) then
					beam.CurveSize0 = curve0;
					beam.CurveSize1 = curve1;
					beam.Segments = 1750;
					FlatIdent_8C46 = 5;
				end
			end
		end
	end);
	local OceanLib = Ocean:NewWindow();
	local t1 = OceanLib:Tab(obf_cached_str[3440], 10723426986);
	local t4 = OceanLib:Tab(obf_cached_str[3442], 10723426986);
	local t5 = OceanLib:Tab(obf_cached_str[3444], 10723426986);
	local t6 = OceanLib:Tab(obf_cached_str[3446], 10723426986);
	local t7 = OceanLib:Tab(obf_cached_str[3448], 10723426986);
	local t2 = OceanLib:Tab(obf_cached_str[3450], 10723424505);
	t1:Toggle(obf_cached_str[3452], {[obf_cached_str[3453]]=false,[obf_cached_str[3454]]=function(v)
		on = v;
	end});
	t1:Dropdown(obf_cached_str[3456], {[obf_cached_str[3457]]=obf_cached_str[3458],[obf_cached_str[3459]]={"Amiri's Mags"},[obf_cached_str[3461]]=function(v)
		_G[obf_cached_str[3462]] = v;
	end});
	t1:Slider(obf_cached_str[3464], {[obf_cached_str[3465]]=0,[obf_cached_str[3466]]=0,[obf_cached_str[3467]]=35,[obf_cached_str[3468]]=function(v)
		_G[obf_cached_str[3469]] = v;
	end});
	getgenv().VIM = _G[obf_cached_str[3471]]:GetService(obf_cached_str[3473]);
	getgenv().plrrrr = _G[obf_cached_str[3475]]:GetService(obf_cached_str[3477]).LocalPlayer;
	getgenv().charrrr = plrrrr.Character or plrrrr.CharacterAdded:Wait();
	getgenv().kickOn = false;
	plrrrr.CharacterAdded:Connect(function(character)
		_G[obf_cached_str[3486]] = character;
	end);
	local autoCapOn = false;
	if (_G[obf_cached_str[3487]].PlaceId ~= 8206123457) then
		local FlatIdent_87F0A = 0;
		local endCaptainLine;
		local plr;
		local char;
		local hrp;
		local autoCapOffset;
		while true do
			if (FlatIdent_87F0A == 2) then
				local FlatIdent_2D301 = 0;
				while true do
					if (FlatIdent_2D301 == 1) then
						FlatIdent_87F0A = 3;
						break;
					end
					if (FlatIdent_2D301 == 0) then
						hrp = char:FindFirstChild(obf_cached_str[3490]);
						if not hrp then
							local FlatIdent_47E7C = 0;
							while true do
								if (FlatIdent_47E7C == 0) then
									warn(obf_cached_str[3491]);
									return;
								end
							end
						end
						FlatIdent_2D301 = 1;
					end
				end
			end
			if (FlatIdent_87F0A == 0) then
				local FlatIdent_3E01B = 0;
				while true do
					if (FlatIdent_3E01B == 0) then
						endCaptainLine = _G[obf_cached_str[3492]]:FindFirstChild(obf_cached_str[3494]) and _G[obf_cached_str[3495]].Models:FindFirstChild(obf_cached_str[3498]) and _G[obf_cached_str[3499]].Models.LockerRoomA:FindFirstChild(obf_cached_str[3503]);
						if not endCaptainLine then
							local FlatIdent_5E2F4 = 0;
							local FlatIdent_1FAE6;
							while true do
								if (FlatIdent_5E2F4 == 0) then
									FlatIdent_1FAE6 = 0;
									while true do
										if (FlatIdent_1FAE6 == 0) then
											warn(obf_cached_str[3504]);
											return;
										end
									end
									break;
								end
							end
						end
						FlatIdent_3E01B = 1;
					end
					if (FlatIdent_3E01B == 1) then
						FlatIdent_87F0A = 1;
						break;
					end
				end
			end
			if (FlatIdent_87F0A == 3) then
				autoCapOffset = Vector3.new(2.1, 2.1, 2.1);
				endCaptainLine:GetPropertyChangedSignal(obf_cached_str[3507]):Connect(function()
					if autoCapOn then
						local FlatIdent_23AC6 = 0;
						local startTime;
						local setCFrameSmoothly;
						while true do
							if (FlatIdent_23AC6 == 1) then
								function setCFrameSmoothly()
									if ((_G[obf_cached_str[3509]]() - startTime) >= 0.13) then
										hrp.CFrame = endCaptainLine.CFrame + autoCapOffset;
									end
								end
								for _ = 1, 7 do
									local FlatIdent_69531 = 0;
									while true do
										if (FlatIdent_69531 == 0) then
											task.wait(0.25);
											setCFrameSmoothly();
											break;
										end
									end
								end
								break;
							end
							if (FlatIdent_23AC6 == 0) then
								local FlatIdent_81CE = 0;
								while true do
									if (FlatIdent_81CE == 0) then
										startTime = _G[obf_cached_str[3513]]();
										setCFrameSmoothly = nil;
										FlatIdent_81CE = 1;
									end
									if (FlatIdent_81CE == 1) then
										FlatIdent_23AC6 = 1;
										break;
									end
								end
							end
						end
					end
				end);
				break;
			end
			if (FlatIdent_87F0A == 1) then
				plr = _G[obf_cached_str[3514]]:GetService(obf_cached_str[3516]).LocalPlayer;
				char = plr.Character or plr.CharacterAdded:Wait();
				FlatIdent_87F0A = 2;
			end
		end
	end
	_G[obf_cached_str[3521]]:GetService(obf_cached_str[3523]).LocalPlayer.PlayerGui.ChildAdded:Connect(function(child)
		local FlatIdent_7C9E = 0;
		local hum;
		while true do
			if (FlatIdent_7C9E == 0) then
				hum = _G[obf_cached_str[3528]]:FindFirstChild(obf_cached_str[3530]);
				if ((child.Name == obf_cached_str[3532]) and _G[obf_cached_str[3533]] and hum and kickOn) then
					local FlatIdent_4E113 = 0;
					local cursor;
					local firstdone;
					local seconddone;
					while true do
						if (FlatIdent_4E113 == 0) then
							cursor = child:FindFirstChild(obf_cached_str[3535], true);
							firstdone = false;
							seconddone = false;
							VIM:SendMouseButtonEvent(0, 0, 0, true, nil, 0);
							FlatIdent_4E113 = 1;
						end
						if (FlatIdent_4E113 == 1) then
							repeat
								task.wait();
							until cursor.Position.Y.Scale <= 0.03 
							VIM:SendMouseButtonEvent(0, 0, 0, true, nil, 0);
							firstdone = true;
							if firstdone then
								repeat
									task.wait();
								until cursor.Position.Y.Scale >= 0.89 
							end
							FlatIdent_4E113 = 2;
						end
						if (FlatIdent_4E113 == 2) then
							VIM:SendMouseButtonEvent(0, 0, 0, true, nil, 0);
							seconddone = true;
							if (seconddone and firstdone) then
								local FlatIdent_30445 = 0;
								while true do
									if (FlatIdent_30445 == 0) then
										VIM:SendMouseButtonEvent(0, 0, 0, true, nil, 0);
										hum:MoveTo(_G[obf_cached_str[3549]].Workspace[obf_cached_str[3551]].Position);
										break;
									end
								end
							end
							break;
						end
					end
				end
				break;
			end
		end
	end);
	getgenv().antiBlockOn = false;
	local PLR = _G[obf_cached_str[3554]]:GetService(obf_cached_str[3556]).LocalPlayer;
	local charppp = PLR.Character;
	PLR.CharacterAdded:Connect(function(gg)
		charppp = gg;
	end);
	local isAMatch = _G[obf_cached_str[3561]].match;
	charppp.DescendantAdded:Connect(function(child)
		if (isAMatch(child.Name, obf_cached_str[3566]) and antiBlockOn) then
			local FlatIdent_9500E = 0;
			local FlatIdent_6134A;
			while true do
				if (0 == FlatIdent_9500E) then
					FlatIdent_6134A = 0;
					while true do
						if (FlatIdent_6134A == 0) then
							print(obf_cached_str[3567]);
							child:Destroy();
							break;
						end
					end
					break;
				end
			end
		end
	end);
	local VIM = _G[obf_cached_str[3569]]:GetService(obf_cached_str[3571]);
	local PLR = _G[obf_cached_str[3572]]:GetService(obf_cached_str[3574]).LocalPlayer;
	local charp = PLR.Character;
	local autoCatchOn = false;
	PLR.CharacterAdded:Connect(function(gg)
		charp = gg;
	end);
	_G.dist = 17;
	local function Autocatch()
		local FlatIdent_717B0 = 0;
		local FlatIdent_4FAC8;
		while true do
			if (0 == FlatIdent_717B0) then
				FlatIdent_4FAC8 = 0;
				while true do
					if (FlatIdent_4FAC8 == 0) then
						VIM:SendMouseButtonEvent(0, 0, 0, true, nil, 0);
						VIM:SendMouseButtonEvent(0, 0, 0, false, nil, 0);
						break;
					end
				end
				break;
			end
		end
	end
	_G[obf_cached_str[3582]]:GetService(obf_cached_str[3584]).RenderStepped:Connect(function()
		for index, ball in pairs(workspace:GetChildren()) do
			if ((ball.Name == obf_cached_str[3589]) and ball:IsA(obf_cached_str[3591])) then
				if (charp:FindFirstChild(obf_cached_str[3593]) and ((charp:FindFirstChild(obf_cached_str[3595]).Position - ball.Position).Magnitude <= _G.dist) and autoCatchOn) then
					Autocatch();
				end
			end
		end
	end);
	getgenv().VIM = _G[obf_cached_str[3601]]:GetService(obf_cached_str[3603]);
	getgenv().PLR = _G[obf_cached_str[3605]]:GetService(obf_cached_str[3607]).LocalPlayer;
	getgenv().charr = PLR.Character;
	getgenv().autoJumpOn = false;
	PLR.CharacterAdded:Connect(function(gg)
		charr = gg;
	end);
	getgenv().disttt = 17;
	function AutoJump()
		local FlatIdent_9860E = 0;
		local FlatIdent_8465E;
		while true do
			if (0 == FlatIdent_9860E) then
				FlatIdent_8465E = 0;
				while true do
					if (FlatIdent_8465E == 1) then
						VIM:SendKeyEvent(false, Enum.KeyCode.Space, false, _G['game']);
						break;
					end
					if (0 == FlatIdent_8465E) then
						VIM:SendKeyEvent(true, Enum.KeyCode.Space, false, _G['game']);
						wait(0.1);
						FlatIdent_8465E = 1;
					end
				end
				break;
			end
		end
	end
	_G[obf_cached_str[3623]]:GetService(obf_cached_str[3625]).RenderStepped:Connect(function()
		for index, ball in pairs(workspace:GetChildren()) do
			if ((ball.Name == obf_cached_str[3630]) and ball:IsA(obf_cached_str[3632])) then
				if (charr:FindFirstChild(obf_cached_str[3634]) and ((charr:FindFirstChild(obf_cached_str[3636]).Position - ball.Position).Magnitude <= disttt) and autoJumpOn) then
					_G[obf_cached_str[3640]]();
				end
			end
		end
	end);
	getgenv().VIM = _G[obf_cached_str[3642]]:GetService(obf_cached_str[3644]);
	getgenv().PLR = _G[obf_cached_str[3646]]:GetService(obf_cached_str[3648]).LocalPlayer;
	getgenv().charrr = PLR.Character;
	getgenv().autoSwatOn = false;
	PLR.CharacterAdded:Connect(function(gg)
		_G[obf_cached_str[3655]] = gg;
	end);
	getgenv().distttt = 17;
	function AutoSwat()
		local FlatIdent_54957 = 0;
		local FlatIdent_618E5;
		while true do
			if (FlatIdent_54957 == 0) then
				FlatIdent_618E5 = 0;
				while true do
					if (FlatIdent_618E5 == 1) then
						VIM:SendKeyEvent(false, Enum.KeyCode.R, false, _G['game']);
						break;
					end
					if (FlatIdent_618E5 == 0) then
						VIM:SendKeyEvent(true, Enum.KeyCode.R, false, _G['game']);
						wait(0.1);
						FlatIdent_618E5 = 1;
					end
				end
				break;
			end
		end
	end
	_G[obf_cached_str[3665]]:GetService(obf_cached_str[3667]).RenderStepped:Connect(function()
		for index, ball in pairs(workspace:GetChildren()) do
			if ((ball.Name == obf_cached_str[3672]) and ball:IsA(obf_cached_str[3674])) then
				if (_G[obf_cached_str[3675]]:FindFirstChild(obf_cached_str[3677]) and ((_G[obf_cached_str[3678]]:FindFirstChild(obf_cached_str[3680]).Position - ball.Position).Magnitude <= distttt) and autoSwatOn) then
					_G[obf_cached_str[3684]]();
				end
			end
		end
	end);
	t5:Toggle(obf_cached_str[3686], {[obf_cached_str[3687]]=false,[obf_cached_str[3688]]=function(v)
		autoCatchOn = v;
	end});
	t5:Slider(obf_cached_str[3690], {[obf_cached_str[3691]]=10,[obf_cached_str[3692]]=10,[obf_cached_str[3693]]=20,[obf_cached_str[3694]]=function(v)
		_G.dist = v;
	end});
	t5:Toggle(obf_cached_str[3697], {[obf_cached_str[3698]]=false,[obf_cached_str[3699]]=function(v)
		_G[obf_cached_str[3700]] = v;
	end});
	t5:Slider(obf_cached_str[3702], {[obf_cached_str[3703]]=10,[obf_cached_str[3704]]=10,[obf_cached_str[3705]]=20,[obf_cached_str[3706]]=function(v)
		_G[obf_cached_str[3707]] = v;
	end});
	t5:Toggle(obf_cached_str[3709], {[obf_cached_str[3710]]=false,[obf_cached_str[3711]]=function(v)
		_G[obf_cached_str[3712]] = v;
	end});
	t5:Slider(obf_cached_str[3714], {[obf_cached_str[3715]]=10,[obf_cached_str[3716]]=10,[obf_cached_str[3717]]=20,[obf_cached_str[3718]]=function(v)
		_G[obf_cached_str[3719]] = v;
	end});
	t5:Toggle(obf_cached_str[3721], {[obf_cached_str[3722]]=false,[obf_cached_str[3723]]=function(v)
		aRushOn = v;
	end});
	t5:Slider(obf_cached_str[3725], {[obf_cached_str[3726]]=100,[obf_cached_str[3727]]=100,[obf_cached_str[3728]]=100,[obf_cached_str[3729]]=function(v)
		agDist = v;
	end});
	t5:Toggle(obf_cached_str[3731], {[obf_cached_str[3732]]=false,[obf_cached_str[3733]]=function(v)
		_G[obf_cached_str[3734]] = v;
	end});
	t5:Toggle(obf_cached_str[3736], {[obf_cached_str[3737]]=false,[obf_cached_str[3738]]=function(v)
		autoCapOn = v;
	end});
	getgenv().LookVectorSpeed = false;
	getgenv().UIS = _G[obf_cached_str[3741]]:GetService(obf_cached_str[3743]);
	getgenv().playAH = _G[obf_cached_str[3745]]:GetService(obf_cached_str[3747]).LocalPlayer;
	getgenv().ggchara = playAH.Character or playAH.CharacterAdded:Wait();
	getgenv().hrpp = nil;
	getgenv().Speedboostnum = 3;
	playAH.CharacterAdded:Connect(function(gg)
		_G[obf_cached_str[3757]] = gg;
	end);
	task.spawn(function()
		while wait() do
			_G[obf_cached_str[3759]] = _G[obf_cached_str[3760]]:FindFirstChild(obf_cached_str[3762]);
		end
	end);
	function VectorSpeed()
		local FlatIdent_7E818 = 0;
		local FlatIdent_4E115;
		while true do
			if (FlatIdent_7E818 == 0) then
				FlatIdent_4E115 = 0;
				while true do
					if (0 == FlatIdent_4E115) then
						_G[obf_cached_str[3763]] = _G[obf_cached_str[3764]]:FindFirstChild(obf_cached_str[3766]);
						if LookVectorSpeed then
							_G[obf_cached_str[3767]].CFrame = _G[obf_cached_str[3769]].CFrame + (_G[obf_cached_str[3771]].CFrame.LookVector * Speedboostnum);
						end
						break;
					end
				end
				break;
			end
		end
	end
	UIS.InputBegan:Connect(function(input)
		if (input.KeyCode == Enum.KeyCode.F) then
			_G[obf_cached_str[3779]]();
		end
	end);
	local jps = 50;
	local jumpPowerEnabled = false;
	local connection;
	local lp = Players.LocalPlayer;
	local char = plr.Character;
	lp.CharacterAdded:Connect(function(character)
		char = character;
	end);
	local function onToggle(Value)
		local FlatIdent_73852 = 0;
		local FlatIdent_9010;
		while true do
			if (0 == FlatIdent_73852) then
				FlatIdent_9010 = 0;
				while true do
					if (FlatIdent_9010 == 0) then
						jumpPowerEnabled = Value;
						if jumpPowerEnabled then
							connection = _G[obf_cached_str[3784]]:GetService(obf_cached_str[3786]).RenderStepped:Connect(function()
								local FlatIdent_866A5 = 0;
								local upWard;
								local lp;
								local hrp;
								local hum;
								local newJPS;
								while true do
									if (FlatIdent_866A5 == 0) then
										local FlatIdent_42930 = 0;
										while true do
											if (0 == FlatIdent_42930) then
												upWard = Vector3.new(0, 10, 0);
												lp = Players.LocalPlayer;
												FlatIdent_42930 = 1;
											end
											if (FlatIdent_42930 == 1) then
												FlatIdent_866A5 = 1;
												break;
											end
										end
									end
									if (1 == FlatIdent_866A5) then
										local FlatIdent_26529 = 0;
										while true do
											if (FlatIdent_26529 == 0) then
												hrp = char and char:FindFirstChild(obf_cached_str[3792]);
												hum = char and char:FindFirstChild(obf_cached_str[3794]);
												FlatIdent_26529 = 1;
											end
											if (FlatIdent_26529 == 1) then
												FlatIdent_866A5 = 2;
												break;
											end
										end
									end
									if (FlatIdent_866A5 == 2) then
										newJPS = jps / 10;
										if (hrp and hum and (hum.FloorMaterial == Enum.Material.Grass) and hum.Jump) then
											hrp.Velocity = upWard * newJPS;
										end
										break;
									end
								end
							end);
						elseif connection then
							local FlatIdent_8478 = 0;
							local FlatIdent_F1F2;
							while true do
								if (FlatIdent_8478 == 0) then
									FlatIdent_F1F2 = 0;
									while true do
										if (FlatIdent_F1F2 == 0) then
											connection:Disconnect();
											connection = nil;
											break;
										end
									end
									break;
								end
							end
						end
						break;
					end
				end
				break;
			end
		end
	end
	t2:Toggle(obf_cached_str[3802], {[obf_cached_str[3803]]=false,[obf_cached_str[3804]]=function(v)
		local FlatIdent_12DDB = 0;
		local jpOnDude;
		while true do
			if (FlatIdent_12DDB == 0) then
				jpOnDude = v;
				onToggle(jpOnDude);
				break;
			end
		end
	end});
	t2:Slider(obf_cached_str[3806], {[obf_cached_str[3807]]=50,[obf_cached_str[3808]]=50,[obf_cached_str[3809]]=70,[obf_cached_str[3810]]=function(v)
		jps = v;
	end});
	local Players = _G[obf_cached_str[3811]]:GetService(obf_cached_str[3813]);
	local RunService = _G[obf_cached_str[3814]]:GetService(obf_cached_str[3816]);
	local lp = Players.LocalPlayer;
	local char, hrp, hum;
	local speedMultiplier = 3;
	local speedBoostEnabled = false;
	local connection;
	local function updateCharacterReferences(character)
		local FlatIdent_52D0 = 0;
		local FlatIdent_86FD;
		while true do
			if (FlatIdent_52D0 == 0) then
				FlatIdent_86FD = 0;
				while true do
					if (FlatIdent_86FD == 0) then
						char = character or lp.Character;
						hrp = char:WaitForChild(obf_cached_str[3820]);
						FlatIdent_86FD = 1;
					end
					if (FlatIdent_86FD == 1) then
						hum = char:WaitForChild(obf_cached_str[3822]);
						break;
					end
				end
				break;
			end
		end
	end
	lp.CharacterAdded:Connect(updateCharacterReferences);
	if lp.Character then
		updateCharacterReferences(lp.Character);
	end
	local function onToggle(enabled)
		local FlatIdent_42282 = 0;
		while true do
			if (FlatIdent_42282 == 0) then
				speedBoostEnabled = enabled;
				if speedBoostEnabled then
					connection = RunService.RenderStepped:Connect(function()
						if (hrp and hum and (hum.MoveDirection.Magnitude > 0) and (hum.FloorMaterial == Enum.Material.Grass)) then
							local FlatIdent_7D161 = 0;
							local moveVector;
							while true do
								if (FlatIdent_7D161 == 0) then
									moveVector = hum.MoveDirection.Unit * speedMultiplier * 10;
									hrp.Velocity = Vector3.new(moveVector.X, hrp.Velocity.Y, moveVector.Z);
									break;
								end
							end
						end
					end);
				elseif connection then
					local FlatIdent_4074D = 0;
					local FlatIdent_8BD63;
					while true do
						if (FlatIdent_4074D == 0) then
							FlatIdent_8BD63 = 0;
							while true do
								if (0 == FlatIdent_8BD63) then
									connection:Disconnect();
									connection = nil;
									break;
								end
							end
							break;
						end
					end
				end
				break;
			end
		end
	end
	t2:Toggle(obf_cached_str[3844], {[obf_cached_str[3845]]=false,[obf_cached_str[3846]]=function(state)
		onToggle(state);
	end});
	t2:Slider(obf_cached_str[3848], {[obf_cached_str[3849]]=2,[obf_cached_str[3850]]=2,[obf_cached_str[3851]]=7,[obf_cached_str[3852]]=function(value)
		speedMultiplier = value;
	end});
	t2:Toggle(obf_cached_str[3854], {[obf_cached_str[3855]]=false,[obf_cached_str[3856]]=function(v)
		_G[obf_cached_str[3857]] = v;
	end});
	t2:Slider(obf_cached_str[3859], {[obf_cached_str[3860]]=3,[obf_cached_str[3861]]=0,[obf_cached_str[3862]]=5,[obf_cached_str[3863]]=function(v)
		_G[obf_cached_str[3864]] = v;
	end});
	t2:Toggle(obf_cached_str[3866], {[obf_cached_str[3867]]=false,[obf_cached_str[3868]]=function(v)
		local FlatIdent_8F9B8 = 0;
		local jpOnDudee;
		while true do
			if (FlatIdent_8F9B8 == 0) then
				jpOnDudee = v;
				onToggle2(jpOnDudee);
				break;
			end
		end
	end});
	t2:Toggle(obf_cached_str[3870], {[obf_cached_str[3871]]=false,[obf_cached_str[3872]]=function(state)
		local FlatIdent_701EC = 0;
		while true do
			if (FlatIdent_701EC == 0) then
				_G.infinjump = state;
				if (_G.infinJumpStarted == nil) then
					local FlatIdent_86C2A = 0;
					local FlatIdent_70F77;
					local plr;
					local m;
					while true do
						if (FlatIdent_86C2A == 1) then
							m = nil;
							while true do
								if (FlatIdent_70F77 == 0) then
									_G.infinJumpStarted = true;
									plr = _G[obf_cached_str[3876]]:GetService(obf_cached_str[3878]).LocalPlayer;
									FlatIdent_70F77 = 1;
								end
								if (FlatIdent_70F77 == 1) then
									m = plr:GetMouse();
									m.KeyDown:Connect(function(k)
										if (_G.infinjump and (k:byte() == 32)) then
											local FlatIdent_970B = 0;
											local humanoid;
											while true do
												if (FlatIdent_970B == 0) then
													humanoid = plr.Character and plr.Character:FindFirstChildOfClass(obf_cached_str[3888]);
													if humanoid then
														humanoid:ChangeState(obf_cached_str[3890]);
													end
													break;
												end
											end
										end
									end);
									break;
								end
							end
							break;
						end
						if (FlatIdent_86C2A == 0) then
							FlatIdent_70F77 = 0;
							plr = nil;
							FlatIdent_86C2A = 1;
						end
					end
				end
				break;
			end
		end
	end});
	t7:Toggle(obf_cached_str[3892], {[obf_cached_str[3893]]=false,[obf_cached_str[3894]]=function(v)
		_G[obf_cached_str[3895]] = v;
	end});
	t7:Toggle(obf_cached_str[3897], {[obf_cached_str[3898]]=false,[obf_cached_str[3899]]=function(v)
		_G[obf_cached_str[3900]] = v;
	end});
	local set = {[obf_cached_str[3901]]=false};
	t7:Toggle(obf_cached_str[3903], {[obf_cached_str[3904]]=false,[obf_cached_str[3905]]=function(v)
		set.sinewavefield = v;
	end});
	local particlesEnabled = false;
	local function removeParticles(parent)
		local FlatIdent_2DEA9 = 0;
		local FlatIdent_88CAD;
		while true do
			if (FlatIdent_2DEA9 == 0) then
				FlatIdent_88CAD = 0;
				while true do
					if (FlatIdent_88CAD == 0) then
						if not particlesEnabled then
							return;
						end
						for _, child in ipairs(parent:GetDescendants()) do
							if (child:IsA(obf_cached_str[3909]) or child:IsA(obf_cached_str[3911]) or child:IsA(obf_cached_str[3913]) or child:IsA(obf_cached_str[3915])) then
								child:Destroy();
							end
						end
						break;
					end
				end
				break;
			end
		end
	end
	removeParticles(_G[obf_cached_str[3917]]);
	_G[obf_cached_str[3918]].DescendantAdded:Connect(function(child)
		if (particlesEnabled and (child:IsA(obf_cached_str[3922]) or child:IsA(obf_cached_str[3924]) or child:IsA(obf_cached_str[3926]) or child:IsA(obf_cached_str[3928]))) then
			child:Destroy();
		end
	end);
	t7:Toggle(obf_cached_str[3931], {[obf_cached_str[3932]]=false,[obf_cached_str[3933]]=function(state)
		local FlatIdent_51904 = 0;
		local FlatIdent_5C3A6;
		while true do
			if (FlatIdent_51904 == 0) then
				FlatIdent_5C3A6 = 0;
				while true do
					if (0 == FlatIdent_5C3A6) then
						particlesEnabled = state;
						if particlesEnabled then
							removeParticles(_G[obf_cached_str[3934]]);
						end
						break;
					end
				end
				break;
			end
		end
	end});
	task.spawn(function()
		local grass = {};
		for i, v in next, game:GetService(obf_cached_str[3937]).Models.Field.Grass.Normal:GetDescendants() do
			if ((v.Name == obf_cached_str[3944]) or ((v.Name == obf_cached_str[3946]) and v:IsA(obf_cached_str[3948]))) then
				table.insert(grass, v);
			end
		end
		local origColor = _G[obf_cached_str[3950]]:GetService(obf_cached_str[3952]).Models.Field.Grass.Outside.Grass.Color;
		local sin = _G[obf_cached_str[3959]].sin;
		local pi = _G[obf_cached_str[3961]].pi;
		local parts = {};
		local numParts = #grass;
		local amplitude = 0.1;
		local frequency = 0.55;
		local offset = 0;
		local oldoffset = 0;
		local ts = _G[obf_cached_str[3963]]:GetService(obf_cached_str[3965]);
		local tweens = {};
		local originalColors = {};
		for i, part in ipairs(grass) do
			originalColors[part] = part.Color;
		end
		while true do
			local FlatIdent_30B76 = 0;
			local floor_offset;
			while true do
				if (FlatIdent_30B76 == 1) then
					floor_offset = _G[obf_cached_str[3967]].floor(offset);
					for i, part in ipairs(grass) do
						local hue = 0.6;
						local saturation = 0.5;
						local value = 0.5 + (((sin((offset * frequency) + ((i * pi) / #grass)) + 1) / 2) * 0.4);
						local color = Color3.fromHSV(hue, saturation, value);
						local tween = ts:Create(part, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {[obf_cached_str[3976]]=color});
						tween:Play();
						table.insert(tweens, tween);
					end
					FlatIdent_30B76 = 2;
				end
				if (FlatIdent_30B76 == 0) then
					if not set.sinewavefield then
						local FlatIdent_608D0 = 0;
						local FlatIdent_29662;
						while true do
							if (FlatIdent_608D0 == 0) then
								FlatIdent_29662 = 0;
								while true do
									if (FlatIdent_29662 == 2) then
										continue;
										break;
									end
									if (FlatIdent_29662 == 0) then
										for i, tween in ipairs(tweens) do
											tween:Cancel();
										end
										tweens = {};
										FlatIdent_29662 = 1;
									end
									if (FlatIdent_29662 == 1) then
										for i, part in ipairs(grass) do
											part.Color = originalColors[part];
										end
										task.wait();
										FlatIdent_29662 = 2;
									end
								end
								break;
							end
						end
					end
					offset = offset + 0.1;
					FlatIdent_30B76 = 1;
				end
				if (FlatIdent_30B76 == 2) then
					if ((_G[obf_cached_str[3983]].floor(oldoffset) ~= floor_offset) and ((floor_offset % 5) == 0)) then
						task.wait(0.25);
					end
					wait();
					break;
				end
			end
		end
	end);
	local Players = _G[obf_cached_str[3986]]:GetService(obf_cached_str[3988]);
	local studSize = 1;
	local studThickness = 0.2;
	local studsEnabled = false;
	local studParts = {};
	local function updateStud(player)
		if (player ~= Players.LocalPlayer) then
			local FlatIdent_18FAB = 0;
			local character;
			while true do
				if (FlatIdent_18FAB == 0) then
					character = player.Character;
					if character then
						local FlatIdent_1FF48 = 0;
						local head;
						while true do
							if (0 == FlatIdent_1FF48) then
								head = character:FindFirstChild(obf_cached_str[3992]);
								if (head and head:IsA(obf_cached_str[3994])) then
									local stud = studParts[player];
									if not stud then
										local FlatIdent_5B7B7 = 0;
										local weld;
										while true do
											if (FlatIdent_5B7B7 == 0) then
												stud = Instance.new(obf_cached_str[3996]);
												stud.Name = obf_cached_str[3998];
												stud.CanCollide = true;
												stud.Material = Enum.Material.SmoothPlastic;
												FlatIdent_5B7B7 = 1;
											end
											if (FlatIdent_5B7B7 == 1) then
												stud.Color = Color3.fromRGB(0, 0, 0);
												stud.Parent = character;
												studParts[player] = stud;
												weld = Instance.new(obf_cached_str[4007]);
												FlatIdent_5B7B7 = 2;
											end
											if (FlatIdent_5B7B7 == 2) then
												weld.Part0 = head;
												weld.Part1 = stud;
												weld.Parent = stud;
												break;
											end
										end
									end
									stud.Size = Vector3.new(studSize, studThickness, studSize);
									stud.Position = head.Position + Vector3.new(0, 1.2, 0);
								end
								break;
							end
						end
					end
					break;
				end
			end
		end
	end
	local function toggleStuds(state)
		local FlatIdent_882F7 = 0;
		local FlatIdent_356A;
		while true do
			if (FlatIdent_882F7 == 0) then
				FlatIdent_356A = 0;
				while true do
					if (FlatIdent_356A == 0) then
						studsEnabled = state;
						if state then
							for _, player in pairs(Players:GetPlayers()) do
								local FlatIdent_8F7DB = 0;
								local FlatIdent_65365;
								while true do
									if (FlatIdent_8F7DB == 0) then
										FlatIdent_65365 = 0;
										while true do
											if (FlatIdent_65365 == 0) then
												updateStud(player);
												player.CharacterAdded:Connect(function()
													local FlatIdent_8163F = 0;
													while true do
														if (FlatIdent_8163F == 0) then
															task.wait(1);
															updateStud(player);
															break;
														end
													end
												end);
												break;
											end
										end
										break;
									end
								end
							end
						else
							local FlatIdent_295D3 = 0;
							while true do
								if (0 == FlatIdent_295D3) then
									for _, stud in pairs(studParts) do
										if stud then
											stud:Destroy();
										end
									end
									studParts = {};
									break;
								end
							end
						end
						break;
					end
				end
				break;
			end
		end
	end
	Players.PlayerAdded:Connect(function(player)
		player.CharacterAdded:Connect(function()
			local FlatIdent_3914D = 0;
			while true do
				if (FlatIdent_3914D == 0) then
					task.wait(1);
					if studsEnabled then
						updateStud(player);
					end
					break;
				end
			end
		end);
	end);
	t6:Toggle(obf_cached_str[4027], {[obf_cached_str[4028]]=false,[obf_cached_str[4029]]=function(state)
		toggleStuds(state);
	end});
	t6:Slider(obf_cached_str[4031], {[obf_cached_str[4032]]=1,[obf_cached_str[4033]]=1,[obf_cached_str[4034]]=6,[obf_cached_str[4035]]=function(value)
		local FlatIdent_7C675 = 0;
		while true do
			if (FlatIdent_7C675 == 0) then
				studSize = value;
				if studsEnabled then
					for _, player in pairs(Players:GetPlayers()) do
						updateStud(player);
					end
				end
				break;
			end
		end
	end});
	t6:Toggle(obf_cached_str[4038], {[obf_cached_str[4039]]=false,[obf_cached_str[4040]]=function(v)
		local FlatIdent_3974D = 0;
		local transparency;
		local model;
		while true do
			if (FlatIdent_3974D == 2) then
				if state then
					local FlatIdent_8E53E = 0;
					local part;
					local Anim;
					while true do
						if (FlatIdent_8E53E == 0) then
							local FlatIdent_14236 = 0;
							while true do
								if (FlatIdent_14236 == 1) then
									FlatIdent_8E53E = 1;
									break;
								end
								if (FlatIdent_14236 == 0) then
									part = Instance.new(obf_cached_str[4042]);
									part.Size = Vector3.new(500, 0.001, 500);
									FlatIdent_14236 = 1;
								end
							end
						end
						if (FlatIdent_8E53E == 3) then
							Anim.AnimationId = "rbxassetid://182724289";
							_G[obf_cached_str[4047]] = _G[obf_cached_str[4048]].Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim);
							FlatIdent_8E53E = 4;
						end
						if (1 == FlatIdent_8E53E) then
							part.CFrame = CFrame.new(Vector3.new(10.3562937, -1.51527438, 30.4708614));
							part.Anchored = true;
							FlatIdent_8E53E = 2;
						end
						if (FlatIdent_8E53E == 4) then
							_G[obf_cached_str[4058]]:Play(0.1, 1, 1);
							break;
						end
						if (FlatIdent_8E53E == 2) then
							part.Parent = _G[obf_cached_str[4061]].Workspace;
							Anim = Instance.new(obf_cached_str[4064]);
							FlatIdent_8E53E = 3;
						end
					end
				elseif (_G[obf_cached_str[4065]] ~= nil) then
					_G[obf_cached_str[4066]]:Stop();
				end
				break;
			end
			if (FlatIdent_3974D == 1) then
				model = _G[obf_cached_str[4068]]:GetService(obf_cached_str[4070]).Models.Field.Grass;
				for _, part in pairs(model:GetDescendants()) do
					if part:IsA(obf_cached_str[4076]) then
						local FlatIdent_6840A = 0;
						while true do
							if (0 == FlatIdent_6840A) then
								part.CanCollide = not state;
								part.Transparency = transparency;
								break;
							end
						end
					end
				end
				FlatIdent_3974D = 2;
			end
			if (FlatIdent_3974D == 0) then
				state = v;
				transparency = (state and 0.5) or 0;
				FlatIdent_3974D = 1;
			end
		end
	end});
	_G.chatSpyEnabled = false;
	_G.spyOnMyself = false;
	_G.public = false;
	_G.publicItalics = true;
	_G.privateProperties = {[obf_cached_str[4084]]=Color3.fromRGB(62, 148, 240),[obf_cached_str[4086]]=Enum.Font.SourceSansBold,[obf_cached_str[4089]]=18};
	local StarterGui = _G[obf_cached_str[4090]]:GetService(obf_cached_str[4092]);
	local Players = _G[obf_cached_str[4093]]:GetService(obf_cached_str[4095]);
	local player = Players.LocalPlayer;
	local saymsg = _G[obf_cached_str[4097]]:GetService(obf_cached_str[4099]):WaitForChild(obf_cached_str[4101]):WaitForChild(obf_cached_str[4103]);
	local getmsg = _G[obf_cached_str[4104]]:GetService(obf_cached_str[4106]):WaitForChild(obf_cached_str[4108]):WaitForChild(obf_cached_str[4110]);
	local instance = (_G.chatSpyInstance or 0) + 1;
	_G.chatSpyInstance = instance;
	local function toggleChatSpy()
		local FlatIdent_6AD59 = 0;
		local FlatIdent_64F8C;
		while true do
			if (FlatIdent_6AD59 == 0) then
				FlatIdent_64F8C = 0;
				while true do
					if (FlatIdent_64F8C == 1) then
						StarterGui:SetCore(obf_cached_str[4114], _G.privateProperties);
						break;
					end
					if (0 == FlatIdent_64F8C) then
						_G.chatSpyEnabled = not _G.chatSpyEnabled;
						if _G.chatSpyEnabled then
							_G.privateProperties.Text = obf_cached_str[4121];
						else
							_G.privateProperties.Text = obf_cached_str[4124];
						end
						FlatIdent_64F8C = 1;
					end
				end
				break;
			end
		end
	end
	local function onChatted(p, msg)
		if (_G.chatSpyInstance == instance) then
			if ((p == player) and (msg:lower():sub(1, 4) == "/spy")) then
				local FlatIdent_3FCB4 = 0;
				local FlatIdent_772BD;
				while true do
					if (FlatIdent_3FCB4 == 0) then
						FlatIdent_772BD = 0;
						while true do
							if (FlatIdent_772BD == 0) then
								toggleChatSpy();
								wait(0.3);
								break;
							end
						end
						break;
					end
				end
			elseif (_G.chatSpyEnabled and ((_G.spyOnMyself == true) or (p ~= player))) then
				local FlatIdent_2FF4C = 0;
				local FlatIdent_2CB11;
				local hidden;
				local conn;
				while true do
					if (FlatIdent_2FF4C == 1) then
						conn = nil;
						while true do
							if (FlatIdent_2CB11 == 2) then
								conn:Disconnect();
								if (hidden and _G.chatSpyEnabled) then
									if _G.public then
										saymsg:FireServer(((_G.publicItalics and "/me ") or "") .. obf_cached_str[4138] .. p.Name .. obf_cached_str[4140] .. msg, obf_cached_str[4141]);
									else
										local FlatIdent_2A175 = 0;
										local FlatIdent_2BF13;
										while true do
											if (FlatIdent_2A175 == 0) then
												FlatIdent_2BF13 = 0;
												while true do
													if (0 == FlatIdent_2BF13) then
														_G.privateProperties.Text = obf_cached_str[4144] .. p.Name .. obf_cached_str[4146] .. msg;
														StarterGui:SetCore(obf_cached_str[4148], _G.privateProperties);
														break;
													end
												end
												break;
											end
										end
									end
								end
								break;
							end
							if (FlatIdent_2CB11 == 1) then
								local FlatIdent_12D0E = 0;
								while true do
									if (FlatIdent_12D0E == 1) then
										FlatIdent_2CB11 = 2;
										break;
									end
									if (FlatIdent_12D0E == 0) then
										conn = getmsg.OnClientEvent:Connect(function(packet, channel)
											if ((packet.SpeakerUserId == p.UserId) and (packet.Message == msg:sub((#msg - #packet.Message) + 1)) and ((channel == obf_cached_str[4157]) or ((channel == obf_cached_str[4158]) and (_G.public == false) and (Players[packet.FromSpeaker].Team == player.Team)))) then
												hidden = false;
											end
										end);
										wait(1);
										FlatIdent_12D0E = 1;
									end
								end
							end
							if (FlatIdent_2CB11 == 0) then
								msg = msg:gsub("[\n\r]", ""):gsub("\t", " "):gsub(obf_cached_str[4170], " ");
								hidden = true;
								FlatIdent_2CB11 = 1;
							end
						end
						break;
					end
					if (FlatIdent_2FF4C == 0) then
						FlatIdent_2CB11 = 0;
						hidden = nil;
						FlatIdent_2FF4C = 1;
					end
				end
			end
		end
	end
	for _, p in ipairs(Players:GetPlayers()) do
		p.Chatted:Connect(function(msg)
			onChatted(p, msg);
		end);
	end
	Players.PlayerAdded:Connect(function(p)
		p.Chatted:Connect(function(msg)
			onChatted(p, msg);
		end);
	end);
	_G.privateProperties.Text = obf_cached_str[4181] .. ((_G.chatSpyEnabled and obf_cached_str[4183]) or obf_cached_str[4184]);
	StarterGui:SetCore(obf_cached_str[4186], _G.privateProperties);
	t7:Toggle(obf_cached_str[4189], {[obf_cached_str[4190]]=true,[obf_cached_str[4191]]=function(state)
		toggleChatSpy();
	end});
end